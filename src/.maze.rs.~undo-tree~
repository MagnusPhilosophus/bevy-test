(undo-tree-save-format-version . 1)
"99b481971cb4322a1bd2779edaf4bde3aafb65a8"
[nil nil nil nil (25817 8408 377708 931000) 0 nil]
([nil nil ((nil rear-nonsticky nil 1 . 2) (#("
" 0 1 (fontified nil)) . -2206) (1 . 2207) (t 25817 8219 122720 90000)) nil (25817 8408 377707 608000) 0 nil])
([nil nil ((2235 . 2237) (#("i" 0 1 (fontified t face font-lock-type-face)) . -2235) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (2226 . 2236) (#("i" 0 1 (fontified t)) . -2226) (undo-tree-id243 . -1) (2224 . 2227) (2208 . 2224) (2207 . 2208) (2206 . 2207) 2205) nil (25817 8408 377705 544000) 0 nil])
([nil nil ((2227 . 2229) (#("i" 0 1 (fontified t face font-lock-type-face)) . -2227) (undo-tree-id240 . -1) (2223 . 2228)) nil (25817 8408 377701 106000) 0 nil])
([nil nil ((2248 . 2258) (#("M" 0 1 (fontified t face font-lock-type-face)) . -2248) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) 2249 (2243 . 2249)) nil (25817 8408 377698 942000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2262 . 2263) (#("
" 0 1 (fontified nil)) . -2295) (2258 . 2296) 2257) nil (25817 8408 377693 942000) 0 nil])
([nil nil ((2258 . 2260)) nil (25817 8408 377692 760000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -2302) (2302 . 2303) (#("	" 0 1 (fontified nil)) . 2302) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (2298 . 2302) (2299 . 2300) (2297 . 2299) 2288) nil (25817 8408 377691 538000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -2304) (undo-tree-id225 . -4) (undo-tree-id226 . -4) (undo-tree-id227 . -4) (undo-tree-id228 . -4) (2308 . 2309) (2303 . 2308) 2302) nil (25817 8408 377687 370000) 0 nil])
([nil nil ((2325 . 2327) (2315 . 2325) (#("PreSta" 0 6 (fontified t face font-lock-type-face)) . -2315) (undo-tree-id77 . -6) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -4) (undo-tree-id85 . -4) (undo-tree-id86 . -5) (undo-tree-id87 . -5) (undo-tree-id88 . -6) (undo-tree-id89 . -6) (undo-tree-id90 . -6) 2321 (2318 . 2321) (2315 . 2318) (#("S" 0 1 (fontified t face font-lock-type-face)) . -2315) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -2316) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (#("a" 0 1 (fontified t face font-lock-type-face)) . -2317) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -2318) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -2319) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (#("u" 0 1 (fontified t face font-lock-type-face)) . -2320) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (#("p" 0 1 (fontified t face font-lock-type-face)) . -2321) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) 2322 (2314 . 2322) (2303 . 2314) (#("add" 0 3 (fontified t)) . -2303) (undo-tree-id189 . -3) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -3) (undo-tree-id195 . -3) (undo-tree-id196 . -3) (undo-tree-id197 . -3) (undo-tree-id198 . -3) (undo-tree-id199 . -3) (undo-tree-id200 . -3) 2306 (2302 . 2306) (2299 . 2302) (#("A" 0 1 (fontified t face font-lock-type-face)) . -2299) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (#("p" 0 1 (fontified t face font-lock-type-face)) . -2300) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (#("p" 0 1 (fontified t face font-lock-type-face)) . -2301) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) 2302 (2299 . 2302) (2297 . 2299) 2261) nil (25817 8408 377675 889000) 0 nil])
([nil nil ((2391 . 2393) (2381 . 2391) (#("print" 0 5 (fontified t)) . -2381) (undo-tree-id19 . -5) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -5) (undo-tree-id27 . -5) (undo-tree-id28 . -5) (undo-tree-id29 . -5) (undo-tree-id30 . -5) (undo-tree-id31 . -5) (undo-tree-id32 . -5) 2386 (2383 . 2386) (#("i" 0 1 (fontified t)) . -2383) (undo-tree-id33 . -1) (2379 . 2384) (2367 . 2379) (#("display" 0 7 (fontified t)) . -2367) (undo-tree-id34 . -7) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -3) (undo-tree-id38 . -3) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (undo-tree-id41 . -5) (undo-tree-id42 . -5) (undo-tree-id43 . -6) (undo-tree-id44 . -6) (undo-tree-id45 . -7) (undo-tree-id46 . -7) (undo-tree-id47 . -7) 2374 (2368 . 2374) (#("i" 0 1 (fontified t)) . -2368) (undo-tree-id48 . -1) (2357 . 2369) (2346 . 2357) (#("add" 0 3 (fontified t)) . -2346) (undo-tree-id49 . -3) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -3) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -3) 2349 (2345 . 2349) (2339 . 2345) (2338 . 2339) (2327 . 2338) (#("create" 0 6 (fontified t)) . -2327) (undo-tree-id61 . -6) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -4) (undo-tree-id69 . -4) (undo-tree-id70 . -5) (undo-tree-id71 . -5) (undo-tree-id72 . -6) (undo-tree-id73 . -6) (undo-tree-id74 . -6) (undo-tree-id75 . -6) (undo-tree-id76 . -6) 2333 (2327 . 2333)) nil (25817 8408 377327 305000) 0 nil])
([nil nil ((2367 . 2368)) nil (25817 8408 377293 972000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1)) nil (25817 8408 377292 510000) 0 nil])
([nil nil ((2401 . 2402) 1) nil (25817 8408 377287 951000) 0 nil])
([nil nil ((2297 . 2305) ("	" . 2297) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (2339 . 2347) ("	" . 2339) 1) nil (25817 8408 377283 322000) 0 nil])
([nil nil ((1 . 2) (1 . 2) (t 25817 8408 379389 559000)) nil (25817 8434 637799 66000) 0 nil])
([nil nil ((20 . 22) (1 . 20)) nil (25817 8434 637793 576000) 0 nil])
([nil nil ((2430 . 2431) (t 25817 8434 639389 947000)) nil (25817 11357 794921 42000) 0 nil])
([nil nil ((1809 . 1810) (#("1" 0 1 (fontified t)) . 1809) (undo-tree-id247 . -1) (t 25817 11358 959433 272000)) nil (25817 11383 444236 945000) 0 nil] [nil nil ((1352 . 1353) (#("1" 0 1 (fontified t)) . 1352) (undo-tree-id245 . -1) (t 25817 8487 882724 68000)) ((1352 . 1353) (#("0" 0 1 (fontified t)) . 1352)) (25817 11357 648243 407000) 0 nil])
([nil nil ((1438 . 1439) (#("1" 0 1 (fontified t)) . 1438) (undo-tree-id246 . -1)) nil (25817 11383 444231 816000) 0 nil])
([nil nil ((1723 . 1724) (#("1" 0 1 (fontified t)) . 1723) (undo-tree-id244 . -1)) ((1723 . 1724) (#("0" 0 1 (fontified t)) . 1723) (t 25817 11349 109433 125000)) (25817 11349 107475 959000) 0 nil])
([nil nil ((1417 . 1418) (t 25817 11383 442766 969000)) nil (25817 11408 682389 717000) 0 nil])
nil
([nil nil ((1429 . 1432) (#("1" 0 1 (fontified t)) . -1429) (undo-tree-id248 . -1) (undo-tree-id249 . -1) 1430 (1423 . 1430)) nil (25817 11409 369134 99000) 0 nil])
([nil nil ((1803 . 1812)) nil (25817 11415 334369 203000) 0 nil] [nil nil ((nil rear-nonsticky nil 1804 . 1805) (nil fontified nil 1804 . 1805) (1804 . 1805) 1803) ((#("n" 0 1 (fontified nil rear-nonsticky nil)) . 1804) (nil rear-nonsticky t 1804 . 1805)) (25817 11409 369038 359000) 0 nil] [nil nil ((nil rear-nonsticky nil 1804 . 1805) (nil fontified nil 1804 . 1805) (1804 . 1805) 1803) ((#("n" 0 1 (fontified nil rear-nonsticky nil)) . 1804) (nil rear-nonsticky t 1804 . 1805)) (25817 11408 682373 346000) 0 nil])
([nil nil ((1798 . 1799)) nil (25817 11415 334367 961000) 0 nil])
nil
nil
([nil nil ((1417 . 1442) (1447 . 1470) (1448 . 1449) (1452 . 1475) (1453 . 1454) (1472 . 1494) (1798 . 1823) (1828 . 1851) (1829 . 1830) (1833 . 1856) (1834 . 1835) (1853 . 1875) 1799) nil (25817 11415 334363 162000) 0 nil])
([nil nil ((1048 . 1055) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -1048) (undo-tree-id293 . -1) (1046 . 1049) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -1046) (undo-tree-id294 . -1) (1045 . 1047) (#("z" 0 1 (fontified t face font-lock-variable-name-face)) . -1045) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (#("v" 0 1 (fontified t face font-lock-variable-name-face)) . -1046) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -1047) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -1048) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (#("i" 0 1 (fontified nil face font-lock-variable-name-face)) . -1049) (undo-tree-id319 . -1) 1050 (1049 . 1050) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -1049) (undo-tree-id320 . -1) (1047 . 1050) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -1047) (undo-tree-id321 . -1) (1041 . 1048) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -1041) (undo-tree-id322 . -1) (1032 . 1042) (1027 . 1032) (t 25817 11415 336100 774000) 1022) nil (25817 11559 516624 112000) 0 nil])
([nil nil ((#("materials.add(Color::rgb(1.0, 1.0, 1.0).into())," 0 14 (fontified t) 14 18 (fontified t face font-lock-type-face) 18 19 (fontified t face font-lock-type-face) 19 35 (fontified t) 35 36 (fontified t) 36 48 (fontified t)) . 1345) (undo-tree-id290 . -47) (undo-tree-id291 . -48) (undo-tree-id292 . -48)) nil (25817 11559 516456 908000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1102 . 1103) (nil fontified nil 1055 . 1103) (1055 . 1103) 1054) nil (25817 11559 516453 922000) 0 nil])
([nil nil ((1409 . 1410) (1393 . 1409) (#("material_" 0 9 (fontified t)) . -1393) (undo-tree-id267 . -9) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -2) (undo-tree-id271 . -2) (undo-tree-id272 . -3) (undo-tree-id273 . -3) (undo-tree-id274 . -4) (undo-tree-id275 . -4) (undo-tree-id276 . -5) (undo-tree-id277 . -5) (undo-tree-id278 . -7) (undo-tree-id279 . -7) (undo-tree-id280 . -8) (undo-tree-id281 . -8) (undo-tree-id282 . -8) (undo-tree-id283 . -8) (undo-tree-id284 . -9) (undo-tree-id285 . -9) (undo-tree-id286 . -9) (undo-tree-id287 . -9) (undo-tree-id288 . -9) 1402 (1398 . 1402) (#("i" 0 1 (fontified t)) . -1398) (undo-tree-id289 . -1) (1393 . 1399)) nil (25817 11559 516451 207000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1107 . 1108) (#("
" 0 1 (fontified nil)) . -1179) (1103 . 1180) 1074) nil (25817 11559 516438 303000) 0 nil])
([nil nil ((1121 . 1123)) nil (25817 11559 516437 141000) 0 nil])
([nil nil ((1158 . 1159) (#("1" 0 1 (fontified t)) . 1158) (undo-tree-id266 . -1)) nil (25817 11559 516436 319000) 0 nil])
([nil nil ((1163 . 1164) (#("1" 0 1 (fontified t)) . 1163) (undo-tree-id265 . -1)) nil (25817 11559 516434 676000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1182) (undo-tree-id261 . -4) (undo-tree-id262 . -4) (undo-tree-id263 . -4) (undo-tree-id264 . -4) 1186 (1181 . 1186) 1163) nil (25817 11559 516432 562000) 0 nil])
([nil nil ((#("s.add(Color::rgb(0.0, 0.0, 1.0).into())," 0 6 (fontified t) 6 11 (fontified t face font-lock-type-face) 11 27 (fontified t) 27 28 (fontified t) 28 40 (fontified t)) . 1925) (undo-tree-id258 . -39) (undo-tree-id259 . -40) (undo-tree-id260 . -40)) nil (25817 11559 516428 294000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1936) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) 1937 (1931 . 1937) (#("i" 0 1 (fontified t)) . -1931) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (1929 . 1932) (#("i" 0 1 (fontified t)) . -1929) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (1925 . 1930)) nil (25817 11559 516421 552000) 0 nil])
([nil nil ((1102 . 1103) (#("," 0 1 (fontified t rear-nonsticky t)) . 1102) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (t 25817 11559 519436 244000)) nil (25817 11570 421837 167000) 0 nil])
([nil nil ((1180 . 1181) (#("," 0 1 (rear-nonsticky t fontified t)) . 1180) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1)) nil (25817 11572 524405 830000) 0 nil] [nil nil ((nil rear-nonsticky nil 1220 . 1221) (nil fontified nil 1181 . 1221) (1181 . 1221) 1180) ((#("s.add(Color::rgb(0.0, 0.0, 1.0).into())," 0 6 (fontified nil) 6 11 (fontified nil face font-lock-type-face) 11 39 (fontified nil) 39 40 (fontified nil rear-nonsticky nil)) . 1181) (undo-tree-id328 . -39) (undo-tree-id329 . -39) (undo-tree-id330 . -39) (nil rear-nonsticky t 1220 . 1221)) (25817 11570 421738 131000) 0 nil] [nil nil ((nil rear-nonsticky nil 1220 . 1221) (nil fontified nil 1181 . 1221) (1181 . 1221) 1180) ((#("s.add(Color::rgb(0.0, 0.0, 1.0).into())," 0 6 (fontified nil) 6 11 (fontified nil face font-lock-type-face) 11 39 (fontified nil) 39 40 (fontified nil rear-nonsticky nil)) . 1181) (undo-tree-id325 . -39) (undo-tree-id326 . -39) (undo-tree-id327 . -39) (nil rear-nonsticky t 1220 . 1221)) (25817 11568 583486 229000) 0 nil])
([nil nil ((1488 . 1496) (t 25817 11572 529436 436000)) nil (25817 11582 686088 921000) 0 nil])
nil
nil
([nil nil ((1943 . 1951)) nil (25817 11582 686084 132000) 0 nil])
([nil nil ((#("            if cell.visited {
" 0 12 (fontified t) 12 14 (fontified t face font-lock-keyword-face) 14 30 (fontified t)) . 1292) (undo-tree-id447 . -29) (undo-tree-id448 . -28) (undo-tree-id449 . 2) (undo-tree-id450 . -29) (undo-tree-id451 . -28) (undo-tree-id452 . -28) (undo-tree-id453 . -28) (undo-tree-id454 . -28) (undo-tree-id455 . -28) (undo-tree-id456 . -30) 1320 (t 25817 11582 686103 254000)) nil (25817 11772 987239 739000) 0 nil])
([nil nil ((#("                " 0 16 (fontified nil)) . -1554) (1549 . 1554) (#("                    " 0 20 (fontified nil)) . -1537) (1535 . 1537) (#("                    " 0 20 (fontified nil)) . -1532) (1530 . 1532) (#("                        " 0 22 (fontified nil) 22 23 (fontified nil) 23 24 (fontified nil)) . -1509) (1503 . 1509) (#("                        " 0 22 (fontified nil) 22 23 (fontified nil) 23 24 (fontified nil)) . -1498) (1492 . 1498) (#("                        " 0 24 (fontified nil)) . -1461) (1455 . 1461) (#("                    " 0 20 (fontified nil)) . -1423) (1421 . 1423) (#("                    " 0 20 (fontified nil)) . -1385) (1383 . 1385) (#("                    " 0 20 (fontified nil)) . -1326) (1324 . 1326) (#("                " 0 16 (fontified nil)) . -1297) (1292 . 1297) 1723) nil (25817 11772 987231 334000) 0 nil])
([nil nil ((#("            } else {
                commands.spawn(PbrBundle {
                    mesh: meshes.add(Mesh::from(shape::Cube { size: 0.1 })),
                    material: material_unvisited.clone(),
                    transform: Transform::from_xyz(
                        (row_i * 3 + 1) as f32 / 10.0,
                        0.0,
                        col_i as f32 / 10.0,
                    ),
                    ..default()
                });
            }
" 0 6 (fontified t) 6 7 (fontified t) 7 14 (fontified t) 14 18 (fontified t face font-lock-keyword-face) 18 21 (fontified t) 21 24 (fontified t) 24 52 (fontified t) 52 61 (fontified t face font-lock-type-face) 61 64 (fontified t) 64 84 (fontified t) 84 88 (fontified t face font-lock-variable-name-face) 88 101 (fontified t) 101 105 (fontified t face font-lock-type-face) 105 112 (fontified t) 112 117 (fontified t face font-lock-constant-face) 117 119 (fontified t) 119 123 (fontified t face font-lock-type-face) 123 126 (fontified t) 126 130 (fontified t face font-lock-variable-name-face) 130 141 (fontified t) 141 161 (fontified t) 161 169 (fontified t face font-lock-variable-name-face) 169 198 (fontified t) 198 199 (fontified t) 199 219 (fontified t) 219 228 (fontified t face font-lock-variable-name-face) 228 230 (fontified t) 230 239 (fontified t face font-lock-type-face) 239 250 (fontified t) 250 275 (fontified t) 275 291 (fontified t) 291 293 (fontified t face font-lock-keyword-face) 293 294 (fontified t) 294 297 (fontified t face font-lock-type-face) 297 305 (fontified t) 305 328 (fontified t) 328 329 (fontified t) 329 330 (fontified t) 330 331 (fontified t) 331 334 (fontified t) 334 357 (fontified t) 357 358 (fontified t) 358 359 (fontified t) 359 365 (fontified t) 365 367 (fontified t face font-lock-keyword-face) 367 368 (fontified t) 368 371 (fontified t face font-lock-type-face) 371 378 (fontified t) 378 400 (fontified t) 400 403 (fontified t) 403 435 (fontified t) 435 455 (fontified t) 455 469 (fontified t)) . 1558) (undo-tree-id387 . -468) (undo-tree-id388 . -468) (undo-tree-id389 . 272) (undo-tree-id390 . -19) (undo-tree-id391 . -468) (undo-tree-id392 . -291) (undo-tree-id393 . -196) (undo-tree-id394 . -196) (undo-tree-id395 . -196) (undo-tree-id396 . -468) (undo-tree-id397 . -196) (undo-tree-id398 . -196) (undo-tree-id399 . -196) (undo-tree-id400 . -196) (undo-tree-id401 . -196) (undo-tree-id402 . -196) (undo-tree-id403 . -196) (undo-tree-id404 . -196) (undo-tree-id405 . -196) (undo-tree-id406 . -196) (undo-tree-id407 . -196) (undo-tree-id408 . -196) (undo-tree-id409 . -119) (undo-tree-id410 . -119) (undo-tree-id411 . -62) (undo-tree-id412 . -62) (undo-tree-id413 . -19) (undo-tree-id414 . -19) (undo-tree-id415 . -19) (undo-tree-id416 . -19) (undo-tree-id417 . -469) (undo-tree-id418 . -19) (undo-tree-id419 . -468) (undo-tree-id420 . -19) (undo-tree-id421 . -19) (undo-tree-id422 . -40) (undo-tree-id423 . -40) (undo-tree-id424 . -83) (undo-tree-id425 . -83) (undo-tree-id426 . -160) (undo-tree-id427 . -160) (undo-tree-id428 . -218) (undo-tree-id429 . -218) (undo-tree-id430 . -270) (undo-tree-id431 . -270) (undo-tree-id432 . -325) (undo-tree-id433 . -325) (undo-tree-id434 . -354) (undo-tree-id435 . -354) (undo-tree-id436 . -399) (undo-tree-id437 . -399) (undo-tree-id438 . -422) (undo-tree-id439 . -422) (undo-tree-id440 . -454) (undo-tree-id441 . -454) (undo-tree-id442 . -455) (undo-tree-id443 . -468) (undo-tree-id444 . -468) (undo-tree-id445 . -468) (undo-tree-id446 . -469) 2026) nil (25817 11772 987225 242000) 0 nil])
([nil nil ((1410 . 1413) (#(" " 0 1 (fontified t)) . -1410) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) 1411 (1406 . 1411) (#("i" 0 1 (fontified t)) . -1406) (undo-tree-id384 . -1) (1404 . 1407) (#("i" 0 1 (fontified t)) . -1404) (undo-tree-id385 . -1) (1398 . 1405) (1395 . 1398) (#("i" 0 1 (fontified t)) . -1395) (undo-tree-id386 . -1) (1395 . 1396)) nil (25817 11772 987194 304000) 0 nil])
([nil nil ((1463 . 1473) (1445 . 1463) (#("material" 0 8 (fontified t)) . -1445) (undo-tree-id355 . -8) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -2) (undo-tree-id359 . -2) (undo-tree-id360 . -3) (undo-tree-id361 . -3) (undo-tree-id362 . -4) (undo-tree-id363 . -4) (undo-tree-id364 . -5) (undo-tree-id365 . -5) (undo-tree-id366 . -7) (undo-tree-id367 . -7) (undo-tree-id368 . -8) (undo-tree-id369 . -8) (undo-tree-id370 . -8) (undo-tree-id371 . -8) (undo-tree-id372 . -8) (undo-tree-id373 . -8) (undo-tree-id374 . -8) 1453 (1450 . 1453) (#("i" 0 1 (fontified t)) . -1450) (undo-tree-id375 . -1) (1437 . 1451) (#("," 0 1 (fontified t)) . -1437) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) 1438) nil (25817 11772 987185 718000) 0 nil])
([nil nil ((1292 . 1299) (#("	" 0 1 (fontified t)) . 1292) (1297 . 1298) (1324 . 1340) (#("		" 0 2 (fontified t)) . 1324) (1383 . 1399) (#("		" 0 2 (fontified t)) . 1383) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (1397 . 1398) (1413 . 1434) (1437 . 1454) (1445 . 1466) (1471 . 1488) (1474 . 1490) (#("		" 0 2 (fontified t)) . 1474) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (1508 . 1516) (#("		" 0 2 (fontified t)) . 1508) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (1514 . 1522) (1545 . 1550) (#("		" 0 2 (fontified t)) . 1545) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (1551 . 1562) (1556 . 1558) (#("		" 0 2 (fontified t)) . 1556) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (1562 . 1576) (1583 . 1599) (#("		" 0 2 (fontified t)) . 1583) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (1588 . 1604) (#("		" 0 2 (fontified t)) . 1588) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (1602 . 1610) (#("	" 0 1 (fontified t)) . 1602) (undo-tree-id353 . -1) (undo-tree-id354 . -1) 1472) nil (25817 11772 987165 410000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1433) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . 1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (t 25817 11772 992772 739000)) nil (25817 11785 404494 722000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1445) (undo-tree-id457 . 1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1)) nil (25817 11785 404486 787000) 0 nil])
([nil nil ((1728 . 1729) (t 25817 11785 406106 255000)) nil (25817 11799 274626 698000) 0 nil])
([nil nil ((1734 . 1743)) nil (25817 12004 604010 239000) 0 nil])
([nil nil ((nil fontified t 1397 . 1398) (#("1" 0 1 (fontified t)) . -1397) (1398 . 1399) 1397) nil (25817 12008 248454 7000) 0 nil] [nil nil ((1397 . 1398) (#("1" 0 1 (fontified t)) . 1397) (undo-tree-id474 . -1) (t 25817 11799 272773 129000)) ((1397 . 1398) (#("3" 0 1 (fontified t)) . 1397) (t 25817 11997 712776 69000)) (25817 11997 710168 341000) 0 nil] [nil nil ((1765 . 1782) (1758 . 1765) (t 25817 11799 272773 129000) 1742) ((#("
		    " 0 1 (fontified t) 1 7 (fontified nil)) . 1758) (undo-tree-id467 . -7) (undo-tree-id468 . -7) (undo-tree-id469 . -1) (undo-tree-id470 . -7) (#("ooooooooooooooooo" 0 17 (fontified t)) . 1765) (undo-tree-id471 . -17) (undo-tree-id472 . -16) (undo-tree-id473 . -16)) (25817 11919 792955 592000) 0 nil])
([nil nil ((nil fontified t 1397 . 1398) (t 25817 12008 252776 223000) (#("2" 0 1 (fontified t)) . -1397) (t 25817 12008 252776 223000) (1398 . 1399) 1397 (t 25817 12008 252776 223000)) nil (25817 12344 768651 398000) 0 nil])
nil
nil
([nil nil ((apply -6 1028 1189 undo--wrap-and-run-primitive-undo 1028 1189 ((1111 . 1114) (1032 . 1035) 1182)) (t 25817 12344 769447 875000)) nil (25817 12984 327807 483000) 0 nil])
([nil nil ((#("        println!();
" 0 8 (fontified t) 8 16 (fontified t face rust-builtin-formatting-macro) 16 20 (fontified t)) . 1838) (undo-tree-id653 . -19) (undo-tree-id654 . 20) (undo-tree-id655 . -20)) nil (25817 12984 327806 421000) 0 nil])
([nil nil ((apply -48 1244 1892 undo--wrap-and-run-primitive-undo 1244 1892 ((1881 . 1884) (1862 . 1865) (1831 . 1834) (1809 . 1812) (1755 . 1758) (1727 . 1730) (1673 . 1676) (1622 . 1625) (1600 . 1603) (1550 . 1553) (1522 . 1525) (1474 . 1477) (1427 . 1430) (1351 . 1354) (1309 . 1312) (1252 . 1255) 1244))) nil (25817 12984 327804 86000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1893 . 1894) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -2527) (1885 . 2528) 1873) nil (25817 12984 327803 205000) 0 nil])
([nil nil ((apply 48 1244 1838 undo--wrap-and-run-primitive-undo 1244 1838 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1836) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1820) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1792) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1773) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1722) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1697) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1646) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1598) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1579) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1532) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1507) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1462) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1418) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1345) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1306) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1252) 1244))) nil (25817 12984 327802 23000) 0 nil])
([nil nil ((#("                    material_visited.clone()
" 0 8 (fontified t) 8 20 (fontified t) 20 44 (fontified t) 44 45 (fontified t)) . 1454) (undo-tree-id632 . -44) (undo-tree-id633 . 45) (undo-tree-id634 . -26) (undo-tree-id635 . -45) (undo-tree-id636 . -45) (undo-tree-id637 . -45) (undo-tree-id638 . -45) (undo-tree-id639 . -45) (undo-tree-id640 . -45) (undo-tree-id641 . -45) (undo-tree-id642 . -45) (undo-tree-id643 . -8) (undo-tree-id644 . -8) (undo-tree-id645 . -8) (undo-tree-id646 . -8) (undo-tree-id647 . -26) (undo-tree-id648 . -26) (undo-tree-id649 . -26) (undo-tree-id650 . -26) (undo-tree-id651 . -26) (undo-tree-id652 . -45) 1480) nil (25817 12984 327800 379000) 0 nil])
([nil nil ((#("                } else {
" 0 8 (fontified t) 8 16 (fontified t) 16 18 (fontified t) 18 22 (fontified t face font-lock-keyword-face) 22 24 (fontified t) 24 25 (fontified t)) . 1454) (undo-tree-id613 . -24) (undo-tree-id614 . 25) (undo-tree-id615 . -23) (undo-tree-id616 . -25) (undo-tree-id617 . -25) (undo-tree-id618 . -25) (undo-tree-id619 . -25) (undo-tree-id620 . -25) (undo-tree-id621 . -25) (undo-tree-id622 . -25) (undo-tree-id623 . -25) (undo-tree-id624 . -8) (undo-tree-id625 . -8) (undo-tree-id626 . -23) (undo-tree-id627 . -23) (undo-tree-id628 . 2) (undo-tree-id629 . -24) (undo-tree-id630 . -23) (undo-tree-id631 . -25) 1477) nil (25817 12984 327788 557000) 0 nil])
([nil nil ((#("                    material_unvisited.clone()
" 0 8 (fontified t) 8 20 (fontified t) 20 46 (fontified t) 46 47 (fontified t)) . 1454) (undo-tree-id596 . -46) (undo-tree-id597 . 47) (undo-tree-id598 . -23) (undo-tree-id599 . -47) (undo-tree-id600 . -47) (undo-tree-id601 . -47) (undo-tree-id602 . -47) (undo-tree-id603 . -47) (undo-tree-id604 . -47) (undo-tree-id605 . -47) (undo-tree-id606 . -47) (undo-tree-id607 . -8) (undo-tree-id608 . -8) (undo-tree-id609 . -23) (undo-tree-id610 . -23) (undo-tree-id611 . -23) (undo-tree-id612 . -47) 1477) nil (25817 12984 327778 188000) 0 nil])
([nil nil ((#("                " 0 8 (fontified nil) 8 16 (fontified nil)) . 1453) (undo-tree-id542 . 16) (undo-tree-id543 . -8) (undo-tree-id544 . -8) (#("
" 0 1 (fontified t)) . -1453) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) 1427) nil (25817 12984 327766 806000) 0 nil])
([nil nil ((#("if cell.visited {}" 0 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t) 3 17 (fontified t) 17 18 (fontified t)) . 1436) (undo-tree-id481 . -17) (undo-tree-id482 . 1) (undo-tree-id483 . -17) (undo-tree-id484 . -17) (undo-tree-id485 . -17) (undo-tree-id486 . -17) (undo-tree-id487 . -17) (undo-tree-id488 . -17) (undo-tree-id489 . -17) (undo-tree-id490 . -17) (undo-tree-id491 . -17) (undo-tree-id492 . -17) (undo-tree-id493 . -17) (undo-tree-id494 . -17) (undo-tree-id495 . -17) (undo-tree-id496 . -17) (undo-tree-id497 . -17) (undo-tree-id498 . -17) (undo-tree-id499 . -17) (undo-tree-id500 . -17) (undo-tree-id501 . -17) (undo-tree-id502 . -17) (undo-tree-id503 . -17) (undo-tree-id504 . -17) (undo-tree-id505 . -17) (undo-tree-id506 . -17) (undo-tree-id507 . -17) (undo-tree-id508 . -17) (undo-tree-id509 . -17) (undo-tree-id510 . -17) (undo-tree-id511 . -17) (undo-tree-id512 . -17) (undo-tree-id513 . -17) (undo-tree-id514 . -17) (undo-tree-id515 . -17) (undo-tree-id516 . -17) (undo-tree-id517 . -17) (undo-tree-id518 . -17) (undo-tree-id519 . -17) (undo-tree-id520 . -17) (undo-tree-id521 . -17) (undo-tree-id522 . -17) (undo-tree-id523 . -17) (undo-tree-id524 . -17) (undo-tree-id525 . -17) (undo-tree-id526 . -17) (undo-tree-id527 . -17) (undo-tree-id528 . -17) (undo-tree-id529 . -17) (undo-tree-id530 . -17) (undo-tree-id531 . -17) (undo-tree-id532 . -17) (undo-tree-id533 . -18) (undo-tree-id534 . -18) (undo-tree-id535 . -18) (undo-tree-id536 . -18) (undo-tree-id537 . -17) (undo-tree-id538 . -17) (undo-tree-id539 . -16) (undo-tree-id540 . -16) (undo-tree-id541 . -18)) nil (25817 12984 327890 629000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1482 . 1483) (nil fontified nil 1436 . 1483) (1436 . 1483) 1435) nil (25817 12988 407377 792000) 0 nil] [nil nil ((#("materials.add(Color::rgb(1.0, 1.0, 1.0).into())" 0 14 (fontified t face font-lock-comment-face) 14 19 (fontified t face font-lock-comment-face) 19 47 (fontified t face font-lock-comment-face)) . 1058) (undo-tree-id475 . -46) (undo-tree-id476 . -39) (undo-tree-id477 . -39) (undo-tree-id478 . -39) (undo-tree-id479 . -39) (undo-tree-id480 . -47)) ((1058 . 1105)) (25817 12984 327704 580000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 1553) (undo-tree-id692 . 1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (t 25817 12988 409457 408000)) nil (25817 13012 643087 94000) 0 nil])
nil
([nil nil ((#("(" 0 1 (fontified t)) . 1628) (undo-tree-id688 . 1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1)) nil (25817 13012 643084 79000) 0 nil])
([nil nil ((#("* " 0 2 (fontified t)) . 1559) (undo-tree-id686 . -1) (undo-tree-id687 . -2)) nil (25817 13012 643080 963000) 0 nil])
([nil nil ((#("3 " 0 2 (fontified t)) . 1559) (undo-tree-id684 . -1) (undo-tree-id685 . -2)) nil (25817 13012 643079 550000) 0 nil])
([nil nil ((#("+ " 0 2 (fontified t)) . 1559) (undo-tree-id682 . -1) (undo-tree-id683 . -2)) nil (25817 13012 643077 687000) 0 nil])
([nil nil ((#("1) " 0 3 (fontified t)) . 1559) (undo-tree-id680 . -2) (undo-tree-id681 . -3)) nil (25817 13012 643075 653000) 0 nil])
([nil nil ((#("* " 0 2 (fontified t)) . 1625) (undo-tree-id678 . -1) (undo-tree-id679 . -2)) nil (25817 13012 643073 469000) 0 nil])
([nil nil ((#("3 " 0 2 (fontified t)) . 1625) (undo-tree-id676 . -1) (undo-tree-id677 . -2)) nil (25817 13012 643070 734000) 0 nil])
([nil nil ((#("+ " 0 2 (fontified t)) . 1625) (undo-tree-id674 . -1) (undo-tree-id675 . -2)) nil (25817 13012 643068 630000) 0 nil])
([nil nil ((#("1) " 0 3 (fontified t)) . 1625) (undo-tree-id672 . -2) (undo-tree-id673 . -3)) nil (25817 13012 643066 125000) 0 nil])
([nil nil ((#("
                    " 0 1 (fontified t) 1 9 (fontified t) 9 13 (fontified t) 13 21 (fontified t)) . 1532) (undo-tree-id656 . -21) (undo-tree-id657 . -21) (undo-tree-id658 . -21) (undo-tree-id659 . -21) (undo-tree-id660 . -21) (#("
                  " 0 1 (fontified t) 1 6 (fontified t) 6 9 (fontified t) 9 10 (fontified t) 10 19 (fontified t)) . 1573) (#(" " 0 1 (fontified t)) . 1593) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (#("
                  " 0 1 (fontified t) 1 3 (fontified t) 3 7 (fontified t) 7 9 (fontified t) 9 19 (fontified t)) . 1598) (undo-tree-id665 . -1) (#(" " 0 1 (fontified t)) . 1618) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (#(",
                " 0 1 (fontified t) 1 2 (fontified t) 2 10 (fontified t) 10 18 (fontified t)) . 1638) (undo-tree-id671 . 17) 1625) nil (25817 13012 643057 629000) 0 nil])
([nil nil ((206 . 207) (#("    " 0 4 (fontified nil)) . -205) (undo-tree-id887 . -4) (undo-tree-id888 . -4) (undo-tree-id889 . -4) (undo-tree-id890 . -4) (209 . 210) (204 . 209) (199 . 204) (#("i" 0 1 (fontified t face font-lock-type-face)) . -199) (undo-tree-id891 . -1) (198 . 200) (193 . 198) (192 . 193) (188 . 192) (183 . 188) (178 . 183) (173 . 178) (170 . 173) (#("u" 0 1 (fontified t)) . -170) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (#("p" 0 1 (fontified t)) . -171) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) 172 (170 . 172) (165 . 170) (153 . 165) (152 . 153) (151 . 152) (t 25817 13012 642791 102000) 150) nil (25817 13309 163174 174000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 207) (undo-tree-id879 . 1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1)) nil (25817 13309 163145 831000) 0 nil])
([nil nil ((#("enum Walls {
    Up,
    Down,
    Left,
    Right,
}

" 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 10 (fontified t face font-lock-type-face) 10 13 (fontified t) 13 17 (fontified t) 17 19 (fontified t face font-lock-type-face) 19 21 (fontified t) 21 25 (fontified t) 25 29 (fontified t face font-lock-type-face) 29 31 (fontified t) 31 35 (fontified t) 35 39 (fontified t face font-lock-type-face) 39 41 (fontified t) 41 45 (fontified t) 45 50 (fontified t face font-lock-type-face) 50 52 (fontified t) 52 54 (fontified t) 54 55 (fontified t)) . 153) (undo-tree-id780 . -54) (undo-tree-id781 . -54) (undo-tree-id782 . 1) (undo-tree-id783 . -54) (undo-tree-id784 . -54) (undo-tree-id785 . -54) (undo-tree-id786 . -54) (undo-tree-id787 . -54) (undo-tree-id788 . -54) (undo-tree-id789 . -54) (undo-tree-id790 . -54) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -2) (undo-tree-id794 . -2) (undo-tree-id795 . -3) (undo-tree-id796 . -3) (undo-tree-id797 . -4) (undo-tree-id798 . -4) (undo-tree-id799 . -5) (undo-tree-id800 . -5) (undo-tree-id801 . -5) (undo-tree-id802 . -5) (undo-tree-id803 . -6) (undo-tree-id804 . -6) (undo-tree-id805 . -7) (undo-tree-id806 . -7) (undo-tree-id807 . 43) (undo-tree-id808 . -17) (undo-tree-id809 . -17) (undo-tree-id810 . -17) (undo-tree-id811 . -17) (undo-tree-id812 . -17) (undo-tree-id813 . -17) (undo-tree-id814 . -19) (undo-tree-id815 . -20) (undo-tree-id816 . -20) (undo-tree-id817 . 35) (undo-tree-id818 . -25) (undo-tree-id819 . -25) (undo-tree-id820 . -27) (undo-tree-id821 . -27) (undo-tree-id822 . 25) (undo-tree-id823 . -35) (undo-tree-id824 . -35) (undo-tree-id825 . 15) (undo-tree-id826 . -45) (undo-tree-id827 . -45) (undo-tree-id828 . -46) (undo-tree-id829 . -46) (undo-tree-id830 . -48) (undo-tree-id831 . -48) (undo-tree-id832 . 4) (undo-tree-id833 . -52) (undo-tree-id834 . -52) (undo-tree-id835 . -53) (undo-tree-id836 . -53) (undo-tree-id837 . -53) (undo-tree-id838 . -53) (undo-tree-id839 . 2) (undo-tree-id840 . -54) (undo-tree-id841 . -54) (undo-tree-id842 . -54) (undo-tree-id843 . -54) (undo-tree-id844 . -54) (undo-tree-id845 . -54) (undo-tree-id846 . -54) (undo-tree-id847 . -54) (undo-tree-id848 . -54) (undo-tree-id849 . -54) (undo-tree-id850 . -52) (undo-tree-id851 . -52) (undo-tree-id852 . -41) (undo-tree-id853 . -41) (undo-tree-id854 . -31) (undo-tree-id855 . -31) (undo-tree-id856 . -31) (undo-tree-id857 . -31) (undo-tree-id858 . -21) (undo-tree-id859 . -21) (undo-tree-id860 . -13) (undo-tree-id861 . -13) (undo-tree-id862 . -55) (undo-tree-id863 . -54) (undo-tree-id864 . -13) (undo-tree-id865 . -13) (undo-tree-id866 . -21) (undo-tree-id867 . -21) (undo-tree-id868 . -31) (undo-tree-id869 . -31) (undo-tree-id870 . -41) (undo-tree-id871 . -41) (undo-tree-id872 . -52) (undo-tree-id873 . -52) (undo-tree-id874 . -54) (undo-tree-id875 . -54) (undo-tree-id876 . -54) (undo-tree-id877 . -54) (undo-tree-id878 . -55) 207) nil (25817 13309 163137 536000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23 . 24) (#("
" 0 1 (fontified nil)) . -78) (23 . 79)) nil (25817 13309 163092 962000) 0 nil])
([nil nil ((121 . 131) (#("&" 0 1 (fontified t)) . -121) (undo-tree-id753 . -1) (undo-tree-id754 . -1) 122 (114 . 122) (110 . 114) (110 . 111) (#("    visited: bool,
" 0 4 (fontified t) 4 11 (fontified t face font-lock-variable-name-face) 11 13 (fontified t) 13 17 (fontified t face font-lock-type-face) 17 19 (fontified t)) . 110) (undo-tree-id755 . -18) (undo-tree-id756 . -5) (undo-tree-id757 . -19) (undo-tree-id758 . -19) (undo-tree-id759 . -17) (undo-tree-id760 . -17) (undo-tree-id761 . -19) (undo-tree-id762 . -19) (undo-tree-id763 . -19) (undo-tree-id764 . -19) (undo-tree-id765 . -17) (undo-tree-id766 . -17) (undo-tree-id767 . -17) (undo-tree-id768 . -17) (undo-tree-id769 . -19) (undo-tree-id770 . -19) (undo-tree-id771 . -19) (undo-tree-id772 . -19) (undo-tree-id773 . -19) (undo-tree-id774 . -19) (undo-tree-id775 . -5) (undo-tree-id776 . -5) (undo-tree-id777 . -5) (undo-tree-id778 . -19) (undo-tree-id779 . -19) 115) nil (25817 13309 163090 367000) 0 nil])
([nil nil ((185 . 190) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -185) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) 186 (185 . 186) (#("visited" 0 7 (fontified t face font-lock-variable-name-face)) . 185) (undo-tree-id746 . -6) (undo-tree-id747 . -5) (undo-tree-id748 . -5) (undo-tree-id749 . -5) (undo-tree-id750 . -5) (undo-tree-id751 . -7) (undo-tree-id752 . -7)) nil (25817 13309 163074 818000) 0 nil])
([nil nil ((213 . 216) (192 . 213) (#("false" 0 5 (fontified t face font-lock-keyword-face)) . 192) (undo-tree-id739 . -4) (undo-tree-id740 . -5) (undo-tree-id741 . -5)) nil (25817 13309 163065 881000) 0 nil])
([nil nil ((199 . 204) (#("true" 0 4 (fontified t face font-lock-keyword-face)) . 199) (undo-tree-id728 . -3) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -2) (undo-tree-id732 . -2) (undo-tree-id733 . -3) (undo-tree-id734 . -3) (undo-tree-id735 . -4) (undo-tree-id736 . -4) (undo-tree-id737 . -4) (undo-tree-id738 . -4)) nil (25817 13309 163062 204000) 0 nil])
([nil nil ((206 . 211) (#("true" 0 4 (fontified t face font-lock-keyword-face)) . 206) (undo-tree-id717 . -3) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -2) (undo-tree-id721 . -2) (undo-tree-id722 . -3) (undo-tree-id723 . -3) (undo-tree-id724 . -4) (undo-tree-id725 . -4) (undo-tree-id726 . -4) (undo-tree-id727 . -4)) nil (25817 13309 163053 879000) 0 nil])
([nil nil ((213 . 218) (#("true" 0 4 (fontified t face font-lock-keyword-face)) . 213) (undo-tree-id696 . -3) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -2) (undo-tree-id700 . -2) (undo-tree-id701 . -3) (undo-tree-id702 . -3) (undo-tree-id703 . -4) (undo-tree-id704 . -4) (undo-tree-id705 . -4) (undo-tree-id706 . -4) (undo-tree-id707 . -4) (undo-tree-id708 . -4) (undo-tree-id709 . -4) (undo-tree-id710 . -4) (undo-tree-id711 . -4) (undo-tree-id712 . -4) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -4) (undo-tree-id716 . -4)) nil (25817 13309 162471 797000) 0 nil])
([nil nil ((126 . 127) (#("," 0 1 (fontified t)) . 126) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (t 25817 13309 166128 827000)) nil (25817 13323 150150 595000) 0 nil])
([nil nil ((184 . 195) (185 . 186) (219 . 228) 126) nil (25817 13323 150136 729000) 0 nil])
([nil nil ((#("    grid.grid[0][0].visited = true;
    grid.stack.push((0, 0));
    grid.visited_cells += 1;

" 0 30 (fontified t) 30 34 (fontified t face font-lock-keyword-face) 34 37 (fontified t) 37 65 (fontified t) 65 95 (fontified t)) . 809) (undo-tree-id904 . -94) (undo-tree-id905 . -94) (undo-tree-id906 . -16) (undo-tree-id907 . -94) (undo-tree-id908 . -94) (undo-tree-id909 . -20) (undo-tree-id910 . -27) (undo-tree-id911 . -20) (undo-tree-id912 . -27) (undo-tree-id913 . -16) (undo-tree-id914 . -95) (undo-tree-id915 . -16) (undo-tree-id916 . -94) (undo-tree-id917 . -16) (undo-tree-id918 . -16) (undo-tree-id919 . -52) (undo-tree-id920 . -52) (undo-tree-id921 . -81) (undo-tree-id922 . -81) (undo-tree-id923 . -94) (undo-tree-id924 . -94) (undo-tree-id925 . -94) (undo-tree-id926 . -94) (undo-tree-id927 . -95) 903 (t 25817 13323 152795 700000)) nil (25817 13340 712321 633000) 0 nil])
([nil nil ((apply -39 2289 2617 undo--wrap-and-run-primitive-undo 2289 2617 ((2611 . 2614) (2602 . 2605) (2579 . 2582) (2566 . 2569) (2549 . 2552) (2517 . 2520) (2493 . 2496) (2461 . 2464) (2428 . 2431) (2399 . 2402) (2361 . 2364) (2328 . 2331) (2289 . 2292) 2577)) (t 25817 13340 712795 961000)) nil (25817 13360 434439 109000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 2790) (undo-tree-id933 . 1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1)) nil (25817 13360 434437 576000) 0 nil])
([nil nil ((#(", print_grid" 0 2 (fontified t) 2 12 (fontified t)) . 2802) (undo-tree-id931 . -11) (undo-tree-id932 . -12)) nil (25817 13360 434433 198000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 2802) (undo-tree-id928 . 1) (undo-tree-id929 . -1) (undo-tree-id930 . -1)) nil (25817 13360 434427 577000) 0 nil])
([nil nil ((1307 . 1312) (#("\\" 0 1 (fontified t)) . -1307) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (#("/" 0 1 (fontified t)) . -1308) (undo-tree-id983 . -1) (undo-tree-id984 . -1) 1309 (1308 . 1309) (#(" " 0 1 (fontified t)) . -1308) (undo-tree-id985 . -1) (undo-tree-id986 . -1) 1309 (1307 . 1309) (1301 . 1307) (t 25817 13360 436129 587000) 1276) nil (25817 13618 667487 571000) 0 nil])
([nil nil ((1403 . 1406) (#("Cube" 0 4 (fontified t face font-lock-type-face)) . 1403) (undo-tree-id976 . -3) (undo-tree-id977 . -4) (undo-tree-id978 . -4)) nil (25817 13618 667481 69000) 0 nil])
([nil nil ((1478 . 1479) (1458 . 1478) (#("i" 0 1 (fontified t)) . -1458) (undo-tree-id937 . -1) (1457 . 1459) (1448 . 1457) (1434 . 1448) (#("i" 0 1 (fontified t)) . -1434) (undo-tree-id938 . -1) (1427 . 1435) (1410 . 1427) (#("i" 0 1 (fontified t)) . -1410) (undo-tree-id939 . -1) (1409 . 1411) (#("s" 0 1 (fontified t)) . -1409) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (#("i" 0 1 (fontified t)) . -1410) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (#("z" 0 1 (fontified t)) . -1411) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (#("e" 0 1 (fontified t)) . -1412) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (#(":" 0 1 (fontified t)) . -1413) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (#(" " 0 1 (fontified t)) . -1414) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (#("0" 0 1 (fontified t)) . -1415) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (#("." 0 1 (fontified t)) . -1416) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (#("1" 0 1 (fontified t)) . -1417) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) 1418) nil (25817 13618 667474 837000) 0 nil])
([nil nil ((1302 . 1306) (#("	" 0 1 (fontified t)) . 1302) (1307 . 1311) (1408 . 1418) (1409 . 1419) (1420 . 1428) (1421 . 1433) (1432 . 1438) (1433 . 1447) (1444 . 1448) (1445 . 1461) (1456 . 1459) (1457 . 1474) (1468 . 1469) (1469 . 1488) (1479 . 1496) 1478) nil (25817 13618 667438 910000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1443) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (t 25817 13618 669466 746000)) nil (25817 13792 272245 114000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1443) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1)) nil (25817 13792 272242 920000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1443) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1)) nil (25817 13792 272238 51000) 0 nil])
([nil nil ((1443 . 1448) (#("col" 0 3 (fontified t)) . -1443) (undo-tree-id1001 . -3) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -2) (undo-tree-id1005 . -2) (undo-tree-id1006 . -3) (undo-tree-id1007 . -3) (undo-tree-id1008 . -3) (undo-tree-id1009 . -3) (undo-tree-id1010 . -3) 1446 (1443 . 1446)) nil (25817 13792 272235 516000) 0 nil])
([nil nil ((1477 . 1482) (#("col" 0 3 (fontified nil)) . 1477) (1477 . 1480)) nil (25817 13792 272227 982000) 0 nil])
([nil nil ((1482 . 1485)) nil (25817 13792 272227 50000) 0 nil])
([nil nil ((1448 . 1455)) nil (25817 13792 272226 409000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1588) (undo-tree-id999 . -1) (undo-tree-id1000 . -1)) nil (25817 13792 272225 317000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1588) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1)) nil (25817 13792 272222 371000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1588) (undo-tree-id989 . -1) (undo-tree-id990 . -1)) nil (25817 13792 272216 611000) 0 nil])
([nil nil ((1592 . 1593) (#("i" 0 1 (fontified t)) . -1592) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (1588 . 1593)) nil (25817 13792 272212 874000) 0 nil])
([nil nil ((1622 . 1627)) nil (25817 13792 272203 276000) 0 nil])
([nil nil ((1627 . 1630)) nil (25817 13792 272199 408000) 0 nil])
([nil nil ((1593 . 1600) (t 25817 13792 279469 316000)) nil (25817 13806 622671 441000) 0 nil])
([nil nil ((1493 . 1496) (#("=" 0 1 (fontified t)) . -1493) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (#("3" 0 1 (fontified t)) . -1494) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (#("2" 0 1 (fontified t)) . -1495) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) 1496 (1489 . 1496)) nil (25817 13813 991001 940000) 0 nil] [nil nil ((nil rear-nonsticky nil 1489 . 1490) (nil fontified nil 1489 . 1490) (1489 . 1490) 1488) ((#("0" 0 1 (fontified nil rear-nonsticky nil)) . 1489) (nil rear-nonsticky t 1489 . 1490)) (25817 13806 622579 258000) 0 nil] [nil nil ((nil rear-nonsticky nil 1489 . 1490) (nil fontified nil 1489 . 1490) (1489 . 1490) 1488) ((#("0" 0 1 (fontified nil rear-nonsticky nil)) . 1489) (nil rear-nonsticky t 1489 . 1490)) (25817 13805 845832 769000) 0 nil])
([nil nil ((1645 . 1648) (#("=" 0 1 (fontified nil)) . -1645) (undo-tree-id1023 . -1) (#("3" 0 1 (fontified nil)) . -1646) (undo-tree-id1024 . -1) (#("2" 0 1 (fontified nil)) . -1647) (undo-tree-id1025 . -1) 1648 (1641 . 1648)) nil (25817 13813 990992 933000) 0 nil])
nil
nil
([nil nil ((#("1" 0 1 (fontified t)) . 797) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (t 25817 13813 992802 971000)) nil (25817 13856 961897 774000) 0 nil])
([nil nil ((797 . 798) (#("6" 0 1 (fontified t)) . 797) (undo-tree-id1037 . -1)) nil (25817 13856 961891 683000) 0 nil])
([nil nil ((801 . 802) (#("6" 0 1 (fontified t)) . 801) (undo-tree-id1036 . -1)) nil (25817 13856 961889 48000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 800) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1)) nil (25817 14111 849758 842000) 0 nil])
([nil nil ((1497 . 1498) (#("1" 0 1 (fontified t)) . 1497) (undo-tree-id1082 . -1)) nil (25817 14120 770729 128000) 0 nil] [nil nil ((1497 . 1498) (#("1" 0 1 (fontified t)) . 1497) (t 25817 13856 966136 941000)) ((1497 . 1498) (#("0" 0 1 (fontified t)) . 1497)) (25817 14111 287149 841000) 0 nil])
([nil nil ((1499 . 1500) (#("0" 0 1 (fontified t)) . 1499) (undo-tree-id1081 . -1)) nil (25817 14120 770727 234000) 0 nil])
([nil nil ((1499 . 1500) (#("0" 0 1 (fontified t)) . 1499)) ((1499 . 1500) (#("9" 0 1 (fontified t)) . 1499)) (25817 14110 841516 243000) 0 nil])
([nil nil ((1651 . 1652) (#("0" 0 1 (fontified t)) . 1651) (undo-tree-id1080 . -1)) nil (25817 14120 770724 780000) 0 nil])
([nil nil ((1651 . 1652) (#("0" 0 1 (fontified t)) . 1651)) ((1651 . 1652) (#("9" 0 1 (fontified t)) . 1651)) (25817 14110 347318 284000) 0 nil])
([nil nil ((1649 . 1650) (#("1" 0 1 (fontified t)) . 1649) (undo-tree-id1079 . -1)) nil (25817 14120 770719 920000) 0 nil])
([nil nil ((1649 . 1650) (#("1" 0 1 (fontified t)) . 1649)) ((1649 . 1650) (#("0" 0 1 (fontified t)) . 1649)) (25817 14110 201349 57000) 0 nil])
([nil nil ((#("                    min_z: row_i as f32,
" 0 2 (fontified t) 2 3 (fontified t) 3 20 (fontified t) 20 25 (fontified t face font-lock-variable-name-face) 25 33 (fontified t) 33 35 (fontified t face font-lock-keyword-face) 35 36 (fontified t) 36 39 (fontified t face font-lock-type-face) 39 40 (fontified t) 40 41 (fontified t)) . 1566) (undo-tree-id1107 . -40) (undo-tree-id1108 . 2) (undo-tree-id1109 . -32) (undo-tree-id1110 . -39) (undo-tree-id1111 . -39) (undo-tree-id1112 . -39) (undo-tree-id1113 . -39) (undo-tree-id1114 . -39) (undo-tree-id1115 . -39) (undo-tree-id1116 . -41) 1605 (t 25817 14120 772807 513000)) nil (25817 14247 832022 237000) 0 nil])
([nil nil ((1458 . 1459) (#(" " 0 1 (fontified t)) . -1458) (undo-tree-id1051 . -1) (undo-tree-id1053 . -1) 1459 (1453 . 1459) (t 25817 14040 772806 330000)) ((#(" - 0. " 0 1 (fontified nil) 1 2 (fontified nil) 2 5 (fontified nil) 5 6 (fontified nil)) . 1453) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (1458 . 1459) (#("1" 0 1 (fontified t)) . 1458)) (25817 14110 31005 72000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1474 . 1475) (#("
" 0 1 (fontified nil)) . -1495) (1454 . 1496) 1453) nil (25817 14247 832015 785000) 0 nil])
([nil nil ((1616 . 1617) (#(" " 0 1 (fontified nil face font-lock-type-face)) . -1616) 1617 (1611 . 1617)) ((#(" - 0. " 0 1 (fontified nil) 1 2 (fontified nil) 2 5 (fontified nil) 5 6 (fontified nil face font-lock-type-face)) . 1611) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (1616 . 1617) (#("1" 0 1 (fontified t)) . 1616)) (25817 14109 884027 436000) 0 nil])
([nil nil ((#("                    max_z: row_i as f32 + 0.5,
" 0 1 (fontified t) 1 20 (fontified t) 20 25 (fontified t face font-lock-variable-name-face) 25 33 (fontified t) 33 35 (fontified t face font-lock-keyword-face) 35 36 (fontified t) 36 39 (fontified t face font-lock-type-face) 39 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 47 (fontified t)) . 1607) (undo-tree-id1083 . -46) (undo-tree-id1084 . 47) (undo-tree-id1085 . -42) (undo-tree-id1086 . -42) (undo-tree-id1087 . -42) (undo-tree-id1088 . -20) (undo-tree-id1089 . -42) (undo-tree-id1090 . -42) (undo-tree-id1091 . -42) (undo-tree-id1092 . -42) (undo-tree-id1093 . -42) (undo-tree-id1094 . -42) (undo-tree-id1095 . -42) (undo-tree-id1096 . -42) (undo-tree-id1097 . -42) (undo-tree-id1098 . -42) (undo-tree-id1099 . -39) (undo-tree-id1100 . -39) (undo-tree-id1101 . -20) (undo-tree-id1102 . -20) (undo-tree-id1103 . -20) (undo-tree-id1104 . -20) (undo-tree-id1105 . -20) (undo-tree-id1106 . -47) 1627) nil (25817 14247 832013 371000) 0 nil])
([nil nil ((1612 . 1613) (#(")" 0 1 (fontified t)) . 1612) (undo-tree-id1057 . 1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (1612 . 1613) (#("-" 0 1 (fontified t)) . 1612) (undo-tree-id1060 . -1) (t 25817 14066 956140 49000)) ((1612 . 1613) (#(")" 0 1 (fontified nil)) . 1612) (1612 . 1613) (#("+" 0 1 (fontified t)) . 1612)) (25817 14109 691690 638000) 0 nil] [nil nil ((1612 . 1613) (#("-" 0 1 (fontified t)) . 1612) (undo-tree-id1055 . -1) (t 25817 14066 956140 49000)) ((1612 . 1613) (#(")" 0 1 (fontified t)) . 1612)) (25817 14072 426601 107000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1562 . 1563) (#("
" 0 1 (fontified nil)) . -1589) (1542 . 1590) 1515) nil (25817 14247 831990 378000) 0 nil])
([nil nil ((1454 . 1455) (#("-" 0 1 (fontified t)) . 1454) (undo-tree-id1056 . -1)) ((1454 . 1455) (#("+" 0 1 (fontified t)) . 1454) (t 25817 14076 302806 856000)) (25817 14076 298603 779000) 0 nil])
nil
([nil nil ((1453 . 1459)) nil (25817 14247 831988 704000) 0 nil])
nil
([nil nil ((1500 . 1506)) nil (25817 14247 831984 897000) 0 nil])
([nil nil ((1599 . 1600) (#("6" 0 1 (fontified t)) . 1599) (undo-tree-id1118 . -1) (1599 . 1600) (#("5" 0 1 (fontified t)) . 1599) (undo-tree-id1119 . -1) (t 25817 14247 836142 728000)) nil (25817 14258 73063 571000) 0 nil])
([nil nil ((1552 . 1553) (#("5" 0 1 (fontified t)) . 1552) (undo-tree-id1117 . -1)) nil (25817 14258 73057 179000) 0 nil])
([nil nil ((1458 . 1459) (#("1" 0 1 (fontified t)) . 1458) (undo-tree-id1125 . -1) (t 25817 14258 76142 880000)) nil (25817 14280 907678 149000) 0 nil])
([nil nil ((1505 . 1506) (#("1" 0 1 (fontified t)) . 1505) (undo-tree-id1124 . -1)) nil (25817 14280 907676 135000) 0 nil])
([nil nil ((1552 . 1553) (#("8" 0 1 (fontified t)) . 1552) (undo-tree-id1123 . -1)) nil (25817 14280 907674 211000) 0 nil])
([nil nil ((1599 . 1600) (#("8" 0 1 (fontified t)) . 1599) (undo-tree-id1122 . -1)) nil (25817 14280 907672 568000) 0 nil])
([nil nil ((1550 . 1551) (#("0" 0 1 (fontified t)) . 1550) (undo-tree-id1121 . -1)) nil (25817 14280 907670 214000) 0 nil])
([nil nil ((1597 . 1598) (#("0" 0 1 (fontified t)) . 1597) (undo-tree-id1120 . -1)) nil (25817 14334 614997 688000) 0 nil])
([nil nil ((1550 . 1551) (#("1" 0 1 (fontified t)) . 1550) (undo-tree-id1133 . -1)) nil (25817 14343 259627 191000) 0 nil] [nil nil ((1661 . 1662) (#("1" 0 1 (fontified t)) . 1661) (undo-tree-id1129 . -1) (t 25817 14280 909476 550000)) ((1661 . 1662) (#("0" 0 1 (fontified t)) . 1661)) (25817 14334 145229 601000) 0 nil])
([nil nil ((1597 . 1598) (#("1" 0 1 (fontified t)) . 1597) (undo-tree-id1132 . -1)) nil (25817 14343 259625 507000) 0 nil])
([nil nil ((1663 . 1664) (#("0" 0 1 (fontified t)) . 1663) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1)) ((1663 . 1664) (#("5" 0 1 (fontified t)) . 1663) (t 25817 14329 229477 265000)) (25817 14329 227295 817000) 0 nil])
([nil nil ((1552 . 1553) (#("0" 0 1 (fontified t)) . 1552) (undo-tree-id1131 . -1)) nil (25817 14343 259623 173000) 0 nil])
nil
([nil nil ((1599 . 1600) (#("0" 0 1 (fontified t)) . 1599) (undo-tree-id1130 . -1)) nil (25817 14343 259577 858000) 0 nil])
([nil nil ((1552 . 1553) (#("9" 0 1 (fontified t)) . 1552) (undo-tree-id1135 . -1) (t 25817 14343 266144 141000)) nil (25817 14662 480708 908000) 0 nil])
([nil nil ((1599 . 1600) (#("9" 0 1 (fontified t)) . 1599) (undo-tree-id1254 . -1)) nil (25817 14740 884748 421000) 0 nil] [nil nil ((1599 . 1600) (#("9" 0 1 (fontified t)) . 1599)) ((1599 . 1600) (#("0" 0 1 (fontified t)) . 1599) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1)) (25817 14662 333689 112000) 0 nil])
([nil nil ((#(" + 0.0" 0 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 1594) (undo-tree-id1227 . -5) (undo-tree-id1228 . -5) (undo-tree-id1229 . -5) (undo-tree-id1230 . -5) (undo-tree-id1231 . -5) (undo-tree-id1232 . -5) (undo-tree-id1233 . -3) (undo-tree-id1234 . -3) (undo-tree-id1235 . -3) (undo-tree-id1236 . -3) (undo-tree-id1237 . -3) (undo-tree-id1238 . -3) (undo-tree-id1239 . -3) (undo-tree-id1240 . -3) (undo-tree-id1241 . -3) (undo-tree-id1242 . -3) (undo-tree-id1243 . -3) (undo-tree-id1244 . -3) (undo-tree-id1245 . -3) (undo-tree-id1246 . -3) (undo-tree-id1247 . -3) (undo-tree-id1248 . -3) (undo-tree-id1249 . -5) (undo-tree-id1250 . -5) (undo-tree-id1251 . -5) (undo-tree-id1252 . -5) (undo-tree-id1253 . -6)) nil (25817 14740 884746 117000) 0 nil])
([nil nil ((1458 . 1459) (#("0" 0 1 (fontified t)) . 1458) (undo-tree-id1165 . -1)) ((1458 . 1459) (#("1" 0 1 (fontified t)) . 1458) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1)) (25817 14662 187787 753000) 0 nil] [nil nil ((1599 . 1600) (#("0" 0 1 (fontified t)) . 1599) (undo-tree-id1137 . -1) (t 25817 14447 222812 345000)) ((1599 . 1600) (#("1" 0 1 (fontified t)) . 1599)) (25817 14474 361298 697000) 0 nil])
([nil nil ((#(" + 0.0" 0 5 (fontified t) 5 6 (fontified t)) . 1500) (undo-tree-id1219 . -5) (undo-tree-id1220 . -6) (undo-tree-id1221 . -6) (undo-tree-id1222 . -6) (undo-tree-id1223 . -6) (undo-tree-id1224 . -6) (undo-tree-id1225 . -6) (undo-tree-id1226 . -6)) nil (25817 14740 884730 738000) 0 nil])
([nil nil ((1466 . 1474) (#("i" 0 1 (fontified t)) . -1466) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (1459 . 1467)) ((#(" * col_i" 0 7 (fontified nil) 7 8 (fontified nil)) . 1459) (undo-tree-id1173 . -8) (1466 . 1467) (#("i as f32" 0 2 (fontified t) 2 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 8 (fontified t face font-lock-type-face)) . 1466)) (25817 14662 63941 203000) 0 nil])
([nil nil ((1552 . 1553) (#("0" 0 1 (fontified t)) . 1552) (undo-tree-id1136 . -1)) ((1552 . 1553) (#("1" 0 1 (fontified t)) . 1552) (t 25817 14455 612812 471000)) (25817 14455 609600 121000) 0 nil])
([nil nil ((#(" + 0.0" 0 5 (fontified t) 5 6 (fontified t)) . 1453) (undo-tree-id1216 . -5) (undo-tree-id1217 . -5) (undo-tree-id1218 . -6)) nil (25817 14740 884543 507000) 0 nil])
([nil nil ((1521 . 1536)) ((#(" * col_i as f32" 0 3 (fontified t) 3 6 (fontified t) 6 9 (fontified t) 9 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 15 (fontified t face font-lock-type-face)) . 1521) (undo-tree-id1169 . -4) (undo-tree-id1170 . -4) (undo-tree-id1171 . -4) (undo-tree-id1172 . -4)) (25817 14661 916476 684000) 0 nil])
nil
([nil nil ((#(" + 0.0" 0 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 1535) (undo-tree-id1206 . -5) (undo-tree-id1207 . -3) (undo-tree-id1208 . 2) (undo-tree-id1209 . -3) (undo-tree-id1210 . -3) (undo-tree-id1211 . -6) (undo-tree-id1212 . -6) (undo-tree-id1213 . -4) (undo-tree-id1214 . -4) (undo-tree-id1215 . -6)) nil (25817 14740 884540 812000) 0 nil])
([nil nil ((1583 . 1598)) ((#(" * col_i as f32" 0 9 (fontified t) 9 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 15 (fontified t face font-lock-type-face)) . 1583)) (25817 14661 792776 168000) 0 nil])
([nil nil ((1466 . 1467) (#("i" 0 1 (fontified t)) . -1466) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (1453 . 1467) (#("e" 0 1 (fontified t)) . -1453) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (#(" " 0 1 (fontified t)) . -1454) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) 1455 (1453 . 1455)) nil (25817 14740 884534 490000) 0 nil])
([nil nil ((1645 . 1660)) ((#(" * col_i as f32" 0 3 (fontified t) 3 6 (fontified t) 6 9 (fontified t) 9 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 15 (fontified t face font-lock-type-face)) . 1645) (undo-tree-id1166 . 9) (undo-tree-id1167 . -5) (undo-tree-id1168 . -5)) (25817 14661 645622 511000) 0 nil])
([nil nil ((1508 . 1522) (#("e" 0 1 (fontified nil face font-lock-type-face)) . -1508) (undo-tree-id1194 . -1) (#(" " 0 1 (fontified nil face font-lock-type-face)) . -1509) (undo-tree-id1195 . -1) 1510 (1508 . 1510)) nil (25817 14740 884527 527000) 0 nil])
([nil nil ((1524 . 1527) (#("col" 0 3 (fontified t)) . 1524) (undo-tree-id1156 . -2) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -3) (undo-tree-id1162 . -3)) ((1524 . 1527) (#("row" 0 3 (fontified t)) . 1524)) (25817 14661 522793 880000) 0 nil])
([nil nil ((1517 . 1520) (#("col" 0 3 (fontified t)) . 1517) (undo-tree-id1189 . -2) (undo-tree-id1190 . -3) (undo-tree-id1191 . -3) (undo-tree-id1192 . -3) (undo-tree-id1193 . -3)) nil (25817 14740 884524 832000) 0 nil])
([nil nil ((1648 . 1651) (#("col" 0 3 (fontified t)) . 1648) (undo-tree-id1151 . -2) (undo-tree-id1152 . -2) (undo-tree-id1153 . -2) (undo-tree-id1154 . -3) (undo-tree-id1155 . -3)) ((1648 . 1651) (#("row" 0 3 (fontified t)) . 1648)) (25817 14661 352572 595000) 0 nil])
([nil nil ((1467 . 1474)) nil (25817 14740 884520 153000) 0 nil])
([nil nil ((1520 . 1521) (#("0" 0 1 (fontified t)) . 1520) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1)) ((1520 . 1521) (#("1" 0 1 (fontified t)) . 1520)) (25817 14661 228555 535000) 0 nil])
([nil nil ((1529 . 1536)) nil (25817 14740 884519 392000) 0 nil])
([nil nil ((1582 . 1583) (#("0" 0 1 (fontified t)) . 1582) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1)) ((1582 . 1583) (#("1" 0 1 (fontified t)) . 1582)) (25817 14661 81792 621000) 0 nil])
([nil nil ((1582 . 1583) (#("*" 0 1 (fontified t)) . -1582) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) 1583 (1582 . 1583) (#("*" 0 1 (fontified t)) . -1582) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) 1583 (1577 . 1583)) nil (25817 14740 884517 759000) 0 nil])
([nil nil ((1644 . 1645) (#("0" 0 1 (fontified t)) . 1644) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1)) ((1644 . 1645) (#("1" 0 1 (fontified t)) . 1644)) (25817 14660 958624 684000) 0 nil])
([nil nil ((1629 . 1630) (#("*" 0 1 (fontified nil face font-lock-type-face)) . -1629) (undo-tree-id1181 . -1) 1630 (1629 . 1630) (#("*" 0 1 (fontified nil face font-lock-type-face)) . -1629) (undo-tree-id1182 . -1) 1630 (1624 . 1630)) nil (25817 14740 884508 872000) 0 nil])
([nil nil ((1580 . 1581) (#("0" 0 1 (fontified t)) . 1580) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1)) ((1580 . 1581) (#("1" 0 1 (fontified t)) . 1580)) (25817 14660 811943 272000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1603 . 1604) (nil fontified nil 1583 . 1604) (1583 . 1604) 1582) nil (25817 14740 884497 641000) 0 nil])
([nil nil ((1642 . 1643) (#("0" 0 1 (fontified t)) . 1642) (undo-tree-id1138 . -1)) ((1642 . 1643) (#("1" 0 1 (fontified t)) . 1642) (t 25817 14622 96148 271000)) (25817 14622 93910 173000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1671 . 1672) (nil fontified nil 1651 . 1672) (1651 . 1672) 1650) nil (25817 14740 884492 111000) 0 nil])
nil
([nil nil ((#("row" 0 3 (fontified t)) . 1592) (undo-tree-id1255 . -2) (undo-tree-id1256 . -3) (undo-tree-id1257 . -3) (t 25817 14740 889483 365000)) nil (25817 14798 373750 991000) 0 nil])
([nil nil ((1592 . 1595)) nil (25817 14798 373737 696000) 0 nil])
([nil nil ((1466 . 1477) (#("i" 0 1 (fontified t)) . -1466) (undo-tree-id1326 . -1) (1456 . 1467) (t 25817 14798 376150 882000)) nil (25817 14966 980294 71000) 0 nil])
([nil nil ((1538 . 1559)) nil (25817 14966 980292 628000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1559) (undo-tree-id1323 . 1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1)) nil (25817 14966 980291 836000) 0 nil])
([nil nil ((1538 . 1539)) nil (25817 14966 980289 923000) 0 nil])
([nil nil ((1545 . 1548) (#("col" 0 3 (fontified t)) . 1545) (undo-tree-id1320 . -2) (undo-tree-id1321 . -3) (undo-tree-id1322 . -3)) nil (25817 14966 980288 931000) 0 nil])
([nil nil ((#("col_i as f32 + 1.0 + 0.1 * col_i as f32" 0 6 (fontified t) 6 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 12 (fontified t face font-lock-type-face) 12 18 (fontified t) 18 33 (fontified t) 33 35 (fontified t face font-lock-keyword-face) 35 36 (fontified t) 36 38 (fontified t face font-lock-type-face) 38 39 (rear-nonsticky t fontified t face font-lock-type-face)) . 1607) (undo-tree-id1287 . -38) (undo-tree-id1288 . -5) (undo-tree-id1289 . -12) (undo-tree-id1290 . -12) (undo-tree-id1291 . -12) (undo-tree-id1292 . -12) (undo-tree-id1293 . -17) (undo-tree-id1294 . -17) (undo-tree-id1295 . -18) (undo-tree-id1296 . -30) (undo-tree-id1297 . -30) (undo-tree-id1298 . -18) (undo-tree-id1299 . -30) (undo-tree-id1300 . -30) (undo-tree-id1301 . -30) (undo-tree-id1302 . -30) (undo-tree-id1303 . -30) (undo-tree-id1304 . -30) (undo-tree-id1305 . -30) (undo-tree-id1306 . -30) (undo-tree-id1307 . -18) (undo-tree-id1308 . -18) (undo-tree-id1309 . -18) (undo-tree-id1310 . -18) (undo-tree-id1311 . -18) (undo-tree-id1312 . -18) (undo-tree-id1313 . -17) (undo-tree-id1314 . -17) (undo-tree-id1315 . -17) (undo-tree-id1316 . -17) (undo-tree-id1317 . -23) (undo-tree-id1318 . -23) (undo-tree-id1319 . -39)) nil (25817 14966 980285 134000) 0 nil])
([nil nil ((#("row_i as f32 + 1.0 + 0.1 * row_i as f32" 0 6 (fontified t) 6 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 12 (fontified t face font-lock-type-face) 12 18 (fontified t) 18 33 (fontified t) 33 35 (fontified t face font-lock-keyword-face) 35 36 (fontified t) 36 38 (fontified t face font-lock-type-face) 38 39 (rear-nonsticky t fontified t face font-lock-type-face)) . 1636) (undo-tree-id1259 . -12) (undo-tree-id1260 . -18) (undo-tree-id1261 . -38) (undo-tree-id1262 . -12) (undo-tree-id1263 . -12) (undo-tree-id1264 . -12) (undo-tree-id1265 . -12) (undo-tree-id1266 . -12) (undo-tree-id1267 . -12) (undo-tree-id1268 . -12) (undo-tree-id1269 . -12) (undo-tree-id1270 . -12) (undo-tree-id1271 . -12) (undo-tree-id1272 . -12) (undo-tree-id1273 . -12) (undo-tree-id1274 . -12) (undo-tree-id1275 . -12) (undo-tree-id1276 . -12) (undo-tree-id1277 . -12) (undo-tree-id1278 . -12) (undo-tree-id1279 . -12) (undo-tree-id1280 . -12) (undo-tree-id1281 . -12) (undo-tree-id1282 . -12) (undo-tree-id1283 . -12) (undo-tree-id1284 . -12) (undo-tree-id1285 . -18) (undo-tree-id1286 . -39)) nil (25817 14966 980265 267000) 0 nil])
([nil nil ((1608 . 1618) (#("i" 0 1 (fontified t)) . -1608) (undo-tree-id1258 . -1) (1607 . 1609)) nil (25817 14966 980247 213000) 0 nil])
([nil nil ((1647 . 1658)) nil (25817 14966 980235 300000) 0 nil])
([nil nil ((1651 . 1652) (#("x" 0 1 (fontified t)) . 1651) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (t 25817 14966 982820 46000)) nil (25817 14971 999205 448000) 0 nil])
([nil nil ((1328 . 1335) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -1328) (undo-tree-id1404 . -1) (1323 . 1329) (#("m" 0 1 (fontified t)) . -1323) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (#("i" 0 1 (fontified t)) . -1324) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (#("n" 0 1 (fontified t)) . -1325) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) 1326 (1324 . 1326) (#("i" 0 1 (fontified t)) . -1324) (undo-tree-id1431 . -1) (1323 . 1325) (1317 . 1323) (t 25817 14972 2820 121000) 1316) nil (25817 15011 925380 348000) 0 nil])
([nil nil ((#("col_i as f32 + 1.0 * col_i as f32 + 0.1 * col_i as f32" 0 6 (fontified t) 6 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 12 (fontified t face font-lock-type-face) 12 27 (fontified t) 27 29 (fontified t face font-lock-keyword-face) 29 30 (fontified t) 30 33 (fontified t face font-lock-type-face) 33 48 (fontified t) 48 50 (fontified t face font-lock-keyword-face) 50 51 (fontified t) 51 54 (fontified t face font-lock-type-face)) . 1459) (undo-tree-id1400 . -53) (undo-tree-id1401 . -4) (undo-tree-id1402 . -4) (undo-tree-id1403 . -54)) nil (25817 15011 925365 229000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1388 . 1389) (nil fontified nil 1335 . 1389) (1335 . 1389) 1334) nil (25817 15011 925362 124000) 0 nil])
([nil nil ((1389 . 1390)) nil (25817 15011 925360 931000) 0 nil])
([nil nil ((1401 . 1408) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -1401) (undo-tree-id1399 . -1) (1396 . 1402) (1390 . 1396) 1389) nil (25817 15011 925359 859000) 0 nil])
([nil nil ((#("row_i as f32 + 1.0 * row_i as f32 + 0.1 * row_i as f32" 0 6 (fontified t) 6 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 12 (fontified t face font-lock-type-face) 12 27 (fontified t) 27 29 (fontified t face font-lock-keyword-face) 29 30 (fontified t) 30 33 (fontified t face font-lock-type-face) 33 48 (fontified t) 48 50 (fontified t face font-lock-keyword-face) 50 51 (fontified t) 51 54 (fontified t face font-lock-type-face)) . 1561) (undo-tree-id1391 . -53) (undo-tree-id1392 . -12) (undo-tree-id1393 . -12) (undo-tree-id1394 . -53) (undo-tree-id1395 . -53) (undo-tree-id1396 . -4) (undo-tree-id1397 . -4) (undo-tree-id1398 . -54)) nil (25817 15011 925357 916000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1461 . 1462) (nil fontified nil 1408 . 1462) (1408 . 1462) 1407) nil (25817 15011 925353 387000) 0 nil])
([nil nil ((1462 . 1463)) nil (25817 15011 925352 265000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1585) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (#(" " 0 1 (fontified t)) . -1586) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (#("m" 0 1 (fontified t)) . -1587) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (#("i" 0 1 (fontified t)) . -1588) (undo-tree-id1389 . -1) 1589 (1588 . 1589) (#("i" 0 1 (fontified t)) . -1588) (undo-tree-id1390 . -1) (1587 . 1589)) nil (25817 15011 925348 819000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . 1612) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1)) nil (25817 15011 925323 962000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1612) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1)) nil (25817 15011 925320 626000) 0 nil])
([nil nil ((1318 . 1326) (#("	" 0 1 (fontified t)) . 1318) (1391 . 1399) (#("	" 0 1 (fontified t)) . 1391) 1612) nil (25817 15011 925139 747000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . 1355) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (t 25817 15011 929487 379000)) nil (25817 15076 85011 543000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1355) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1)) nil (25817 15076 85009 839000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 1355) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1)) nil (25817 15076 85008 236000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1355) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1)) nil (25817 15076 85006 663000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1355) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1)) nil (25817 15076 85005 30000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1355) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1)) nil (25817 15076 85003 137000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 1355) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1)) nil (25817 15076 85001 424000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1355) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1)) nil (25817 15076 84999 690000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 1355) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1)) nil (25817 15076 84997 887000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 1355) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1)) nil (25817 15076 84996 244000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 1355) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1)) nil (25817 15076 84994 511000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 1355) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1)) nil (25817 15076 84992 347000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 1355) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1)) nil (25817 15076 84990 303000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1355) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1)) nil (25817 15076 84988 529000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-keyword-face)) . 1355) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1)) nil (25817 15076 84986 936000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 1355) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1)) nil (25817 15076 84985 243000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1355) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1)) nil (25817 15076 84983 400000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face font-lock-type-face)) . 1355) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1)) nil (25817 15076 84981 476000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . 1355) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1)) nil (25817 15076 84979 252000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 1355) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1)) nil (25817 15076 84977 328000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1355) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1)) nil (25817 15076 485744 962000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . 1414) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1)) nil (25817 15080 297607 670000) 0 nil] [nil nil ((#("+" 0 1 (fontified t)) . 1355) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1)) ((1355 . 1356)) (25817 15076 85088 417000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1414) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1)) nil (25817 15080 297605 596000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1355) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1)) ((1355 . 1356)) (25817 15076 84968 452000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 1414) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1)) nil (25817 15080 297603 923000) 0 nil])
nil
([nil nil ((#("." 0 1 (fontified t)) . 1414) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1)) nil (25817 15080 297602 199000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1414) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1)) nil (25817 15080 297600 416000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1414) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1)) nil (25817 15080 297598 773000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 1414) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1)) nil (25817 15080 297597 40000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1414) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1)) nil (25817 15080 297594 836000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 1414) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1)) nil (25817 16174 209120 244000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 1414)) ((1414 . 1415)) (25817 16175 590424 526000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . 1414)) ((1414 . 1415)) (25817 16175 760105 789000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 1414)) ((1414 . 1415)) (25817 16175 930304 171000) 0 nil])
([nil nil ((#("            let min_x = col_i as f32 + 0.1 * col_i as f32;
            let min_z = row_i as f32 i as f32 + 0.1 * row_i as f32;
" 0 8 (fontified t) 8 12 (fontified t) 12 15 (fontified t face font-lock-keyword-face) 15 16 (fontified t) 16 21 (fontified t face font-lock-variable-name-face) 21 24 (fontified t) 24 30 (fontified t) 30 32 (fontified t face font-lock-keyword-face) 32 33 (fontified t) 33 36 (fontified t face font-lock-type-face) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 42 (fontified t) 42 51 (fontified t) 51 53 (fontified t face font-lock-keyword-face) 53 54 (fontified t) 54 56 (fontified t face font-lock-type-face) 56 57 (rear-nonsticky t fontified t face font-lock-type-face) 57 58 (fontified t) 58 59 (fontified t) 59 67 (fontified t) 67 71 (fontified t) 71 74 (fontified t face font-lock-keyword-face) 74 75 (fontified t) 75 80 (fontified t face font-lock-variable-name-face) 80 83 (fontified t) 83 89 (fontified t) 89 91 (fontified t face font-lock-keyword-face) 91 92 (fontified t) 92 95 (fontified t face font-lock-type-face) 95 96 (fontified t) 96 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t face font-lock-keyword-face) 99 100 (fontified t face font-lock-keyword-face) 100 101 (fontified t) 101 102 (fontified t face font-lock-type-face) 102 103 (fontified t face font-lock-type-face) 103 104 (fontified t face font-lock-type-face) 104 105 (fontified t) 105 106 (fontified t) 106 107 (fontified t) 107 108 (fontified t) 108 110 (fontified t) 110 119 (fontified t) 119 121 (fontified t face font-lock-keyword-face) 121 122 (fontified t) 122 124 (fontified t face font-lock-type-face) 124 125 (rear-nonsticky t fontified t face font-lock-type-face) 125 126 (fontified t) 126 127 (fontified t)) . 1318) (undo-tree-id2286 . -96) (undo-tree-id2287 . -126) (undo-tree-id2288 . -37) (undo-tree-id2289 . -96) (undo-tree-id2290 . -24) (undo-tree-id2291 . -40) (undo-tree-id2292 . -40) (undo-tree-id2293 . -79) (undo-tree-id2294 . -79) (undo-tree-id2295 . -96) (undo-tree-id2296 . -79) (undo-tree-id2297 . -79) (undo-tree-id2298 . -96) (undo-tree-id2299 . -96) (undo-tree-id2300 . -96) (undo-tree-id2301 . -96) (undo-tree-id2302 . -37) (undo-tree-id2303 . -37) (undo-tree-id2304 . -127) (undo-tree-id2305 . -37) (undo-tree-id2306 . -96) (undo-tree-id2307 . -37) (undo-tree-id2308 . -37) (undo-tree-id2309 . -59) (undo-tree-id2310 . -96) (undo-tree-id2311 . -96) (undo-tree-id2312 . -96) (undo-tree-id2313 . -127) 1414) nil (25817 16216 285584 827000) 0 nil] [nil nil ((#("i" 0 1 (fontified t)) . 1414) (undo-tree-id1495 . -1)) ((1414 . 1415)) (25817 16173 691111 392000) 0 nil])
([nil nil ((#("            // Up
" 0 4 (fontified t) 4 8 (fontified t) 8 12 (fontified t) 12 15 (fontified t face font-lock-comment-delimiter-face) 15 17 (fontified t face font-lock-comment-face) 17 18 (fontified t face font-lock-comment-face)) . 1300) (undo-tree-id2251 . -18) (undo-tree-id2252 . -17) (undo-tree-id2253 . -18) (undo-tree-id2254 . -18) (undo-tree-id2255 . -18) (undo-tree-id2256 . -18) (undo-tree-id2257 . -18) (undo-tree-id2258 . -18) (undo-tree-id2259 . -18) (undo-tree-id2260 . -18) (undo-tree-id2261 . -16) (undo-tree-id2262 . -16) (undo-tree-id2263 . -16) (undo-tree-id2264 . -18) (undo-tree-id2265 . -18) (undo-tree-id2266 . -18) (undo-tree-id2267 . -18) (undo-tree-id2268 . -18) (undo-tree-id2269 . -18) (undo-tree-id2270 . -18) (undo-tree-id2271 . -18) (undo-tree-id2272 . -18) (undo-tree-id2273 . -18) (undo-tree-id2274 . -18) (undo-tree-id2275 . -18) (undo-tree-id2276 . -16) (undo-tree-id2277 . -16) (undo-tree-id2278 . -16) (undo-tree-id2279 . -16) (undo-tree-id2280 . -16) (undo-tree-id2281 . -16) (undo-tree-id2282 . -16) (undo-tree-id2283 . -16) (undo-tree-id2284 . -16) (undo-tree-id2285 . -18) 1316) nil (25817 16216 285570 660000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1414) (undo-tree-id1493 . -1)) ((1414 . 1415)) (25817 16173 544091 175000) 0 nil])
([nil nil ((1390 . 1394) (#("Box" 0 3 (fontified t face font-lock-type-face)) . 1390) (undo-tree-id2232 . -2) (undo-tree-id2233 . -3) (undo-tree-id2234 . -3) (undo-tree-id2235 . -3) (undo-tree-id2236 . -3) (undo-tree-id2237 . -3) (undo-tree-id2238 . -3) (undo-tree-id2239 . -3) (undo-tree-id2240 . -3) (undo-tree-id2241 . -3) (undo-tree-id2242 . -3) (undo-tree-id2243 . -3) (undo-tree-id2244 . -3) (undo-tree-id2245 . -3) (undo-tree-id2246 . -3) (undo-tree-id2247 . -3) (undo-tree-id2248 . -3) (undo-tree-id2249 . -3) (undo-tree-id2250 . -3)) nil (25817 16216 285552 626000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-keyword-face)) . 1414) (undo-tree-id1491 . -1)) ((1414 . 1415)) (25817 16173 397147 11000) 0 nil])
([nil nil ((#("                    min_x,
                    min_z,
                    max_x: min_x + 1.0,
                    max_z: min_z + 1.0,
                    min_y: 0.0,
                    max_y: 1.0,
" 0 9 (fontified t) 9 10 (fontified t) 10 20 (fontified t) 20 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 29 (fontified t) 29 30 (fontified t) 30 46 (fontified t) 46 47 (rear-nonsticky t fontified t) 47 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 61 (fontified t) 61 62 (fontified t) 62 74 (fontified t) 74 79 (fontified t face font-lock-variable-name-face) 79 89 (fontified t) 89 90 (fontified t) 90 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 94 (fontified t) 94 95 (fontified t) 95 113 (fontified t) 113 114 (rear-nonsticky t fontified t) 114 119 (fontified t face font-lock-variable-name-face) 119 125 (fontified t) 125 126 (fontified t) 126 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 133 (fontified t) 133 134 (fontified t) 134 139 (fontified t) 139 140 (fontified t) 140 154 (fontified t) 154 159 (fontified t face font-lock-variable-name-face) 159 165 (fontified t) 165 166 (fontified t) 166 169 (fontified t) 169 170 (fontified t) 170 186 (fontified t) 186 191 (fontified t face font-lock-variable-name-face) 191 193 (fontified t) 193 194 (fontified t) 194 195 (fontified t) 195 196 (fontified t) 196 197 (fontified t) 197 198 (fontified t)) . 1397) (undo-tree-id2220 . -121) (undo-tree-id2221 . -197) (undo-tree-id2222 . -198) (undo-tree-id2223 . -81) (undo-tree-id2224 . -52) (undo-tree-id2225 . -81) (undo-tree-id2226 . -121) (undo-tree-id2227 . -182) (undo-tree-id2228 . -182) (undo-tree-id2229 . -16) (undo-tree-id2230 . -16) (undo-tree-id2231 . -198) 1395) nil (25817 16216 285303 189000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 1414) (undo-tree-id1489 . -1)) ((1414 . 1415)) (25817 16173 250118 608000) 0 nil])
([nil nil ((#("                " 0 15 (fontified nil) 15 16 (fontified nil)) . 1396) (#("
" 0 1 (fontified t)) . -1396) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) 1358) nil (25817 16216 285295 604000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1414) (undo-tree-id1487 . -1)) ((1414 . 1415)) (25817 16173 103106 17000) 0 nil])
([nil nil ((1401 . 1407) (#(" " 0 1 (fontified t)) . -1401) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) 1402 (1398 . 1402) (#("i" 0 1 (fontified t)) . -1398) (undo-tree-id2206 . -1) (1396 . 1399)) nil (25817 16216 285286 748000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face font-lock-type-face)) . 1414) (undo-tree-id1485 . -1)) ((1414 . 1415)) (25817 16172 957094 110000) 0 nil])
([nil nil ((1546 . 1553) (#(" " 0 1 (fontified t)) . -1546) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (#("/" 0 1 (fontified t)) . -1547) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (#(" " 0 1 (fontified t)) . -1548) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (#("1" 0 1 (fontified t)) . -1549) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (#("0" 0 1 (fontified t)) . -1550) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (#("." 0 1 (fontified t)) . -1551) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (#("0" 0 1 (fontified t)) . -1552) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) 1553) nil (25817 16216 285756 880000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . 1414) (undo-tree-id1483 . -1)) ((1414 . 1415)) (25817 16172 810291 522000) 0 nil])
([nil nil ((1572 . 1579) (#(" " 0 1 (fontified nil)) . -1572) (undo-tree-id2316 . 1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (#("/" 0 1 (fontified nil)) . -1573) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (#(" " 0 1 (fontified nil)) . -1574) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (#("1" 0 1 (fontified nil)) . -1575) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (#("0" 0 1 (fontified nil)) . -1576) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (#("." 0 1 (fontified nil)) . -1577) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (#("0" 0 1 (fontified t)) . -1578) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) 1579) nil (25817 16219 537015 650000) 0 nil] [nil nil ((1565 . 1572) (#(" " 0 1 (fontified nil)) . -1565) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (#("a" 0 1 (fontified nil face font-lock-keyword-face)) . -1566) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (#("s" 0 1 (fontified nil face font-lock-keyword-face)) . -1567) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (#(" " 0 1 (fontified nil)) . -1568) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (#("f" 0 1 (fontified nil face font-lock-type-face)) . -1569) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (#("3" 0 1 (fontified nil face font-lock-type-face)) . -1570) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (#("2" 0 1 (fontified t face font-lock-type-face)) . -1571) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) 1572) ((1565 . 1572) (#(" * 0.11" 0 7 (fontified t)) . 1565) (undo-tree-id2314 . -6) (undo-tree-id2315 . -6)) (25817 16216 285257 914000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 1414) (undo-tree-id1481 . -1)) ((1414 . 1415)) (25817 16172 663350 203000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1546) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (#("s" 0 1 (fontified t)) . -1547) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) 1548 (1545 . 1548) (#("2" 0 1 (fontified t face font-lock-type-face)) . -1545) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (#(" " 0 1 (fontified t)) . -1546) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (#("*" 0 1 (fontified t)) . -1547) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (#(" " 0 1 (fontified t)) . -1548) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (#("0" 0 1 (fontified t)) . -1549) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (#("." 0 1 (fontified t)) . -1550) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (#("1" 0 1 (fontified t)) . -1551) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (#("1" 0 1 (fontified t)) . -1552) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) 1553 (t 25817 16219 542838 603000)) nil (25817 16251 428156 678000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . 1414) (undo-tree-id1479 . -1)) ((1414 . 1415)) (25817 16172 540455 27000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1565) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1)) nil (25817 16251 428131 902000) 0 nil])
([nil nil ((1355 . 1356) (#("+" 0 1 (fontified t)) . 1355) (undo-tree-id1533 . -1)) ((1355 . 1356) (#("*" 0 1 (fontified t)) . 1355)) (25817 16172 393120 131000) 0 nil] [nil nil ((1621 . 1622) (#("1" 0 1 (fontified t)) . 1621) (undo-tree-id1523 . -1) (t 25817 15080 299488 392000)) ((1621 . 1622) (#("0" 0 1 (fontified t)) . 1621)) (25817 15194 31810 542000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 1565) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1)) nil (25817 16251 428130 78000) 0 nil])
([nil nil ((#(" * col_i as f32" 0 9 (fontified t) 9 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 14 (fontified t face font-lock-type-face) 14 15 (rear-nonsticky t fontified t face font-lock-type-face)) . 1360) (undo-tree-id1531 . -14) (undo-tree-id1532 . -15)) ((1360 . 1375)) (25817 16172 246165 777000) 0 nil])
([nil nil ((1623 . 1624) (#("0" 0 1 (fontified t)) . 1623) (undo-tree-id1522 . -1)) ((1623 . 1624) (#("8" 0 1 (fontified t)) . 1623)) (25817 15193 654597 580000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1565) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1)) nil (25817 16251 428128 415000) 0 nil])
([nil nil ((#(" * row_i as f32" 0 9 (fontified t) 9 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 14 (fontified t face font-lock-type-face) 14 15 (rear-nonsticky t fontified t face font-lock-type-face)) . 1404) (undo-tree-id1529 . -14) (undo-tree-id1530 . -15)) ((1404 . 1419)) (25817 16172 100405 283000) 0 nil])
([nil nil ((1663 . 1664) (#("0" 0 1 (fontified t)) . 1663) (undo-tree-id1521 . -1)) ((1663 . 1664) (#("8" 0 1 (fontified t)) . 1663)) (25817 15193 507792 147000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1565) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1)) nil (25817 16251 428126 622000) 0 nil])
([nil nil ((1399 . 1400) (#("+" 0 1 (fontified t)) . 1399) (undo-tree-id1528 . -1)) ((1399 . 1400) (#("*" 0 1 (fontified t)) . 1399)) (25817 16171 814434 816000) 0 nil])
([nil nil ((1661 . 1662) (#("1" 0 1 (fontified t)) . 1661) (undo-tree-id1520 . -1)) ((1661 . 1662) (#("0" 0 1 (fontified t)) . 1661) (t 25817 15187 536156 649000)) (25817 15187 530199 854000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1565) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1)) nil (25817 16251 428124 508000) 0 nil])
([nil nil ((1357 . 1358) (#("0" 0 1 (fontified t)) . 1357) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1)) ((1357 . 1358) (#("1" 0 1 (fontified t)) . 1357)) (25817 16171 667199 396000) 0 nil])
nil
([nil nil ((#("1" 0 1 (fontified t)) . 1565) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1)) nil (25817 16251 428121 352000) 0 nil])
([nil nil ((1401 . 1402) (#("0" 0 1 (fontified t)) . 1401)) ((1401 . 1402) (#("1" 0 1 (fontified t)) . 1401)) (25817 16171 544680 857000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 1565) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1)) nil (25817 16251 428109 259000) 0 nil])
([nil nil ((#("            let min_x = col_i as f32 * 1.1;
            let min_z = row_i as f32 * 1.1;
" 0 8 (fontified t) 8 12 (fontified t) 12 15 (fontified t face font-lock-keyword-face) 15 16 (fontified t) 16 21 (fontified t face font-lock-variable-name-face) 21 24 (fontified t) 24 30 (fontified t) 30 32 (fontified t face font-lock-keyword-face) 32 33 (fontified t) 33 36 (fontified t face font-lock-type-face) 36 37 (fontified t) 37 38 (fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 52 (fontified t) 52 56 (fontified t) 56 59 (fontified t face font-lock-keyword-face) 59 60 (fontified t) 60 65 (fontified t face font-lock-variable-name-face) 65 68 (fontified t) 68 74 (fontified t) 74 76 (fontified t face font-lock-keyword-face) 76 77 (fontified t) 77 80 (fontified t face font-lock-type-face) 80 81 (fontified t) 81 82 (fontified t) 82 83 (fontified t) 83 84 (fontified t) 84 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t)) . 1318) (undo-tree-id1791 . -64) (undo-tree-id1792 . -87) (undo-tree-id1793 . -20) (undo-tree-id1794 . -64) (undo-tree-id1795 . -24) (undo-tree-id1797 . -39) (undo-tree-id1798 . -39) (undo-tree-id1799 . -64) (undo-tree-id1800 . -64) (undo-tree-id1802 . -64) (undo-tree-id1804 . -64) (undo-tree-id1805 . -64) (undo-tree-id1806 . -64) (undo-tree-id1808 . -64) (undo-tree-id1810 . -64) (undo-tree-id1812 . -20) (undo-tree-id1814 . -20) (undo-tree-id1816 . -20) (undo-tree-id1817 . -64) (undo-tree-id1819 . -20) (undo-tree-id1821 . -64) (undo-tree-id1823 . -64) 1382 (t 25817 15244 562824 161000)) ((1318 . 1406)) (25817 16171 374495 910000) 0 nil])
([nil nil ((1546 . 1553) (t 25817 16251 436172 409000)) nil (25817 52517 351199 625000) 0 nil])
([nil nil ((#("            // Up
" 0 4 (fontified t) 4 8 (fontified t) 8 12 (fontified t) 12 15 (fontified t face font-lock-comment-delimiter-face) 15 17 (fontified t face font-lock-comment-face) 17 18 (fontified t face font-lock-comment-face)) . 1300) (undo-tree-id1756 . -18) (undo-tree-id1757 . -17) (undo-tree-id1758 . -18) (undo-tree-id1759 . -18) (undo-tree-id1760 . -18) (undo-tree-id1761 . -18) (undo-tree-id1763 . -18) (undo-tree-id1764 . -18) (undo-tree-id1765 . -18) (undo-tree-id1766 . -16) (undo-tree-id1768 . -18) (undo-tree-id1770 . -18) (undo-tree-id1771 . -18) (undo-tree-id1772 . -18) (undo-tree-id1774 . -18) (undo-tree-id1776 . -18) (undo-tree-id1778 . -18) (undo-tree-id1780 . -18) (undo-tree-id1782 . -18) (undo-tree-id1784 . -18) (undo-tree-id1786 . -16) (undo-tree-id1788 . -16) (undo-tree-id1790 . -18) 1316) ((1300 . 1318)) (25817 16170 973548 169000) 0 nil])
([nil nil ((1558 . 1559) (1553 . 1558)) nil (25817 52527 815688 160000) 0 nil] [nil nil ((1553 . 1554)) ((#(")" 0 1 (fontified t)) . 1553)) (25817 52516 916768 278000) 0 nil])
([nil nil ((#("                    min_x,
                    min_z,
                    max_x: min_x + 1.0,
                    max_z: min_z + 1.0,
                    min_y: 0.0,
                    max_y: 1.0,
" 0 9 (fontified t) 9 10 (fontified t) 10 20 (fontified t) 20 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 29 (fontified t) 29 30 (fontified t) 30 46 (fontified t) 46 47 (rear-nonsticky t fontified t) 47 52 (fontified t) 52 53 (fontified t) 53 54 (fontified t) 54 61 (fontified t) 61 62 (fontified t) 62 74 (fontified t) 74 79 (fontified t face font-lock-variable-name-face) 79 89 (fontified t) 89 90 (fontified t) 90 91 (fontified t) 91 92 (fontified t) 92 93 (fontified t) 93 94 (fontified t) 94 95 (fontified t) 95 113 (fontified t) 113 114 (rear-nonsticky t fontified t) 114 119 (fontified t face font-lock-variable-name-face) 119 125 (fontified t) 125 126 (fontified t) 126 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 133 (fontified t) 133 134 (fontified t) 134 139 (fontified t) 139 140 (fontified t) 140 154 (fontified t) 154 159 (fontified t face font-lock-variable-name-face) 159 165 (fontified t) 165 166 (fontified t) 166 169 (fontified t) 169 170 (fontified t) 170 186 (fontified t) 186 191 (fontified t face font-lock-variable-name-face) 191 193 (fontified t) 193 194 (fontified t) 194 195 (fontified t) 195 196 (fontified t) 196 197 (fontified t) 197 198 (fontified t)) . 1396) (undo-tree-id1718 . -121) (undo-tree-id1719 . -182) (undo-tree-id1720 . -197) (undo-tree-id1721 . 173) (undo-tree-id1722 . -16) (undo-tree-id1723 . -182) (undo-tree-id1724 . -198) (undo-tree-id1725 . -81) (undo-tree-id1726 . -52) (undo-tree-id1727 . -81) (undo-tree-id1728 . -121) (undo-tree-id1729 . -182) (undo-tree-id1731 . -16) (undo-tree-id1733 . -43) (undo-tree-id1735 . -16) (undo-tree-id1737 . -16) (undo-tree-id1739 . -16) (undo-tree-id1740 . -182) (undo-tree-id1742 . -16) (undo-tree-id1744 . -43) (undo-tree-id1746 . -70) (undo-tree-id1748 . -110) (undo-tree-id1750 . -150) (undo-tree-id1752 . -182) (undo-tree-id1754 . -182) 1578) ((1396 . 1594)) (25817 16170 826467 179000) 0 nil])
([nil nil ((1578 . 1582)) nil (25817 52527 815687 178000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1534) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (#("s" 0 1 (fontified t)) . -1535) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (#("s" 0 1 (fontified t)) . -1536) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) 1537 (1534 . 1537)) ((#("sss" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 1534) (1534 . 1537)) (25817 52516 916632 313000) 0 nil])
([nil nil ((#("                " 0 15 (fontified nil) 15 16 (fontified nil)) . 1395) (undo-tree-id1681 . 16) (undo-tree-id1682 . 16) (undo-tree-id1684 . -16) (#("
" 0 1 (fontified t)) . -1395) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1698 . -1) (undo-tree-id1700 . -1) (undo-tree-id1702 . -1) (undo-tree-id1704 . -1) (undo-tree-id1706 . -1) (undo-tree-id1708 . -1) (undo-tree-id1710 . -1) (undo-tree-id1712 . -1) (undo-tree-id1714 . -1) (undo-tree-id1716 . -1) 1355) ((1395 . 1396) (1395 . 1411)) (25817 16170 656929 285000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -1580) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (#(" " 0 1 (fontified t)) . -1581) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) 1582) nil (25817 52527 815684 884000) 0 nil])
nil
([nil nil ((1448 . 1462) (1443 . 1448) (#("row" 0 3 (fontified t)) . -1443) (undo-tree-id1552 . -3) (undo-tree-id1554 . -1) (undo-tree-id1556 . -2) (undo-tree-id1558 . -3) (undo-tree-id1560 . -3) 1446 (1443 . 1446) (1435 . 1443) (#("0" 0 1 (fontified t)) . -1435) (undo-tree-id1562 . -1) 1436 (1422 . 1436) (#("i" 0 1 (fontified t)) . -1422) (undo-tree-id1564 . -1) (1418 . 1423) (1414 . 1418) (#("N" 0 1 (fontified t face font-lock-type-face)) . -1414) (undo-tree-id1566 . -1) (undo-tree-id1568 . -1) (undo-tree-id1570 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -1415) (undo-tree-id1572 . -1) (undo-tree-id1574 . -1) (undo-tree-id1576 . -1) (#("w" 0 1 (fontified t face font-lock-type-face)) . -1416) (undo-tree-id1578 . -1) (undo-tree-id1580 . -1) (#("(" 0 1 (fontified t)) . -1417) (undo-tree-id1582 . -1) (undo-tree-id1584 . -1) 1418 (1412 . 1418) (1408 . 1412) (#("Vec" 0 3 (fontified t face font-lock-type-face)) . -1408) (undo-tree-id1586 . -3) (undo-tree-id1588 . -3) (undo-tree-id1590 . -3) 1411 (1393 . 1411) (#(" " 0 1 (fontified t)) . -1393) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1605 . -1) (undo-tree-id1607 . -1) (undo-tree-id1609 . -1) (undo-tree-id1611 . -1) (undo-tree-id1613 . -1) (undo-tree-id1615 . -1) (undo-tree-id1617 . -1) (undo-tree-id1619 . -1) (undo-tree-id1621 . -1) (undo-tree-id1623 . -1) (undo-tree-id1625 . -1) (undo-tree-id1627 . -1) (undo-tree-id1629 . -1) (undo-tree-id1631 . -1) (#("{" 0 1 (fontified t)) . -1394) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1645 . -1) (undo-tree-id1647 . -1) (undo-tree-id1649 . -1) (undo-tree-id1651 . -1) (undo-tree-id1653 . -1) (undo-tree-id1655 . -1) (undo-tree-id1657 . -1) (undo-tree-id1659 . -1) (undo-tree-id1661 . -1) (undo-tree-id1663 . -1) (undo-tree-id1665 . -1) (undo-tree-id1667 . -1) (undo-tree-id1669 . -1) (undo-tree-id1671 . -1) (#("}" 0 1 (fontified t)) . -1395) (undo-tree-id1673 . 1) (undo-tree-id1674 . 1) (undo-tree-id1675 . -1) (undo-tree-id1676 . 1) (undo-tree-id1677 . -1) (undo-tree-id1679 . -1) 1396) ((1393 . 1396) (#("::from_corners(Vec" 0 15 (fontified nil) 15 18 (fontified nil face font-lock-type-face)) . 1393) (undo-tree-id1950 . -15) (undo-tree-id1951 . -15) (undo-tree-id1952 . -15) (undo-tree-id1953 . -15) (undo-tree-id1954 . -15) (undo-tree-id1955 . -15) (undo-tree-id1956 . -15) (undo-tree-id1957 . -15) (undo-tree-id1958 . -18) (undo-tree-id1959 . -15) (undo-tree-id1960 . -15) (undo-tree-id1961 . -15) (undo-tree-id1962 . -15) (undo-tree-id1963 . -15) (undo-tree-id1964 . -15) (undo-tree-id1965 . -15) (undo-tree-id1966 . -15) (undo-tree-id1967 . -15) (undo-tree-id1968 . -15) (undo-tree-id1969 . -15) (undo-tree-id1970 . -15) (undo-tree-id1971 . -15) (undo-tree-id1972 . 4) (undo-tree-id1973 . -15) (undo-tree-id1974 . -15) (1408 . 1411) (#("Vec3" 0 4 (fontified nil face font-lock-type-face)) . 1408) (undo-tree-id1975 . -4) (undo-tree-id1976 . -4) (undo-tree-id1977 . -4) (undo-tree-id1978 . -4) (undo-tree-id1979 . -4) (undo-tree-id1980 . -4) (undo-tree-id1981 . -4) (undo-tree-id1982 . -4) (undo-tree-id1983 . -4) (undo-tree-id1984 . -4) (undo-tree-id1985 . -4) (undo-tree-id1986 . -4) (undo-tree-id1987 . -4) (undo-tree-id1988 . -4) (undo-tree-id1989 . -4) (undo-tree-id1990 . -4) (undo-tree-id1991 . -4) (undo-tree-id1992 . -4) (undo-tree-id1993 . -4) (undo-tree-id1994 . -4) (undo-tree-id1995 . -4) (undo-tree-id1996 . -4) (undo-tree-id1997 . -4) (#("::New(" 0 2 (fontified nil) 2 3 (fontified nil face font-lock-type-face) 3 4 (fontified nil face font-lock-type-face) 4 5 (fontified nil face font-lock-type-face) 5 6 (fontified nil)) . 1412) (undo-tree-id1998 . -2) (undo-tree-id1999 . -2) (undo-tree-id2000 . -2) (undo-tree-id2001 . -2) (undo-tree-id2002 . -2) (undo-tree-id2003 . -2) (undo-tree-id2004 . -2) (undo-tree-id2005 . -2) (undo-tree-id2006 . -6) (undo-tree-id2007 . -2) (undo-tree-id2008 . -2) (undo-tree-id2009 . -2) (undo-tree-id2010 . -2) (undo-tree-id2011 . -2) (undo-tree-id2012 . -2) (undo-tree-id2013 . -2) (undo-tree-id2014 . -2) (undo-tree-id2015 . -2) (undo-tree-id2016 . -2) (undo-tree-id2017 . -2) (undo-tree-id2018 . -2) (undo-tree-id2019 . -2) (undo-tree-id2020 . -2) (1414 . 1418) (#("new(" 0 4 (fontified nil)) . 1414) (undo-tree-id2021 . -4) (undo-tree-id2022 . -4) (undo-tree-id2023 . -4) (undo-tree-id2024 . -4) (undo-tree-id2025 . -4) (undo-tree-id2026 . -4) (undo-tree-id2027 . -4) (undo-tree-id2028 . -4) (undo-tree-id2029 . -4) (undo-tree-id2030 . -4) (undo-tree-id2031 . -4) (undo-tree-id2032 . -4) (undo-tree-id2033 . -4) (undo-tree-id2034 . -4) (undo-tree-id2035 . -4) (undo-tree-id2036 . -4) (undo-tree-id2037 . -4) (undo-tree-id2038 . -4) (undo-tree-id2039 . -4) (undo-tree-id2040 . -4) (undo-tree-id2041 . -4) (undo-tree-id2042 . -4) (undo-tree-id2043 . -4) (#("col_i" 0 4 (fontified nil) 4 5 (fontified nil)) . 1418) (undo-tree-id2044 . -4) (undo-tree-id2045 . -4) (undo-tree-id2046 . -4) (undo-tree-id2047 . -4) (undo-tree-id2048 . -4) (undo-tree-id2049 . -4) (undo-tree-id2050 . -4) (undo-tree-id2051 . -4) (undo-tree-id2052 . -5) (undo-tree-id2053 . -4) (undo-tree-id2054 . -4) (undo-tree-id2055 . -4) (undo-tree-id2056 . -4) (undo-tree-id2057 . -4) (undo-tree-id2058 . -4) (undo-tree-id2059 . -4) (undo-tree-id2060 . -4) (undo-tree-id2061 . -4) (undo-tree-id2062 . -4) (undo-tree-id2063 . -4) (undo-tree-id2064 . -4) (undo-tree-id2065 . -4) (undo-tree-id2066 . -4) (1422 . 1423) (#("i as f32 * 1.0" 0 2 (fontified nil) 2 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil) 5 8 (fontified nil face font-lock-type-face) 8 13 (fontified nil) 13 14 (fontified nil)) . 1422) (undo-tree-id2067 . -13) (undo-tree-id2068 . -13) (undo-tree-id2069 . -13) (undo-tree-id2070 . -13) (undo-tree-id2071 . -13) (undo-tree-id2072 . -13) (undo-tree-id2073 . -13) (undo-tree-id2074 . -13) (undo-tree-id2075 . -14) (undo-tree-id2076 . -13) (undo-tree-id2077 . -13) (undo-tree-id2078 . -13) (undo-tree-id2079 . -13) (undo-tree-id2080 . -13) (undo-tree-id2081 . -13) (undo-tree-id2082 . -13) (undo-tree-id2083 . -13) (undo-tree-id2084 . -13) (undo-tree-id2085 . -13) (undo-tree-id2086 . -13) (undo-tree-id2087 . -13) (undo-tree-id2088 . -13) (undo-tree-id2089 . -13) (1435 . 1436) (#("1, 0.0, " 0 8 (fontified nil)) . 1435) (undo-tree-id2090 . -8) (undo-tree-id2091 . -8) (undo-tree-id2092 . -8) (undo-tree-id2093 . -8) (undo-tree-id2094 . -8) (undo-tree-id2095 . -8) (undo-tree-id2096 . -8) (undo-tree-id2097 . -8) (undo-tree-id2098 . -8) (undo-tree-id2099 . -8) (undo-tree-id2100 . -8) (undo-tree-id2101 . -8) (undo-tree-id2102 . -8) (undo-tree-id2103 . -8) (undo-tree-id2104 . -8) (undo-tree-id2105 . -8) (undo-tree-id2106 . -8) (undo-tree-id2107 . -8) (undo-tree-id2108 . -8) (undo-tree-id2109 . -8) (undo-tree-id2110 . -8) (undo-tree-id2111 . -8) (undo-tree-id2112 . -8) (#("row" 0 3 (fontified nil)) . 1443) (undo-tree-id2113 . -3) (1443 . 1446) (#("row_i" 0 5 (fontified nil)) . 1443) (undo-tree-id2114 . -5) (undo-tree-id2115 . -5) (undo-tree-id2116 . -5) (undo-tree-id2117 . -5) (undo-tree-id2118 . -5) (undo-tree-id2119 . -5) (undo-tree-id2120 . -5) (undo-tree-id2121 . -5) (undo-tree-id2122 . -5) (undo-tree-id2123 . -5) (undo-tree-id2124 . -5) (undo-tree-id2125 . -5) (undo-tree-id2126 . -5) (undo-tree-id2127 . -5) (undo-tree-id2128 . -5) (undo-tree-id2129 . -5) (undo-tree-id2130 . -5) (undo-tree-id2131 . -5) (undo-tree-id2132 . -5) (undo-tree-id2133 . -5) (undo-tree-id2134 . -5) (undo-tree-id2135 . -5) (undo-tree-id2136 . -5) (#(" as f32 * 1.1)" 0 1 (fontified t) 1 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-type-face) 7 14 (fontified t)) . 1448) (undo-tree-id2137 . -14) (undo-tree-id2138 . -14) (undo-tree-id2139 . -14) (undo-tree-id2140 . -14) (undo-tree-id2141 . -14) (undo-tree-id2142 . -14) (undo-tree-id2143 . -14) (undo-tree-id2144 . -14) (undo-tree-id2145 . -14) (undo-tree-id2146 . -14) (undo-tree-id2147 . -14) (undo-tree-id2148 . -14) (undo-tree-id2149 . -14) (undo-tree-id2150 . -14) (undo-tree-id2151 . -14) (undo-tree-id2152 . -14) (undo-tree-id2153 . -14) (undo-tree-id2154 . -14) (undo-tree-id2155 . -14) (undo-tree-id2156 . -14) (undo-tree-id2157 . -14) (undo-tree-id2158 . -14) (undo-tree-id2159 . -14)) (25817 16170 509738 378000) 0 nil])
([nil nil ((1580 . 1591)) nil (25817 52527 815668 353000) 0 nil])
([nil nil ((1527 . 1529) (1509 . 1527) (#("i" 0 1 (fontified t)) . -1509) (undo-tree-id1534 . -1) (1506 . 1510) (1500 . 1506) (1479 . 1500) (1474 . 1479) (#("col" 0 3 (fontified t)) . -1474) (undo-tree-id1536 . -3) (undo-tree-id1538 . -1) (undo-tree-id1540 . -2) (undo-tree-id1542 . -3) (undo-tree-id1544 . -3) 1477 (1468 . 1477) (1464 . 1468) (#("Vec" 0 3 (fontified t face font-lock-type-face)) . -1464) (undo-tree-id1546 . -3) (undo-tree-id1548 . -3) (undo-tree-id1550 . -3) 1467 (1462 . 1467)) ((#(", Vec" 0 1 (fontified nil) 1 2 (fontified nil) 2 5 (fontified nil face font-lock-type-face)) . 1462) (undo-tree-id1833 . -2) (undo-tree-id1834 . -2) (undo-tree-id1835 . -2) (undo-tree-id1836 . -2) (undo-tree-id1837 . -2) (undo-tree-id1838 . -2) (undo-tree-id1839 . -2) (undo-tree-id1840 . -2) (undo-tree-id1841 . -2) (undo-tree-id1842 . -2) (undo-tree-id1843 . -2) (undo-tree-id1844 . -2) (undo-tree-id1845 . -2) (undo-tree-id1846 . -2) (undo-tree-id1847 . -2) (undo-tree-id1848 . -2) (undo-tree-id1849 . -2) (undo-tree-id1850 . -2) (undo-tree-id1851 . -2) (undo-tree-id1852 . -2) (undo-tree-id1853 . -2) (1464 . 1467) (#("Vec3" 0 4 (fontified nil face font-lock-type-face)) . 1464) (undo-tree-id1854 . -4) (undo-tree-id1855 . -4) (undo-tree-id1856 . -4) (undo-tree-id1857 . -4) (undo-tree-id1858 . -4) (undo-tree-id1859 . -4) (undo-tree-id1860 . -4) (undo-tree-id1861 . -4) (undo-tree-id1862 . -4) (undo-tree-id1863 . -4) (undo-tree-id1864 . -4) (undo-tree-id1865 . -4) (undo-tree-id1866 . -4) (undo-tree-id1867 . -4) (undo-tree-id1868 . -4) (undo-tree-id1869 . -4) (undo-tree-id1870 . -4) (undo-tree-id1871 . -4) (undo-tree-id1872 . -4) (undo-tree-id1873 . -4) (undo-tree-id1874 . -4) (#("::new(col" 0 6 (fontified nil) 6 9 (fontified nil)) . 1468) (undo-tree-id1875 . -6) (undo-tree-id1876 . -6) (undo-tree-id1877 . -6) (undo-tree-id1878 . -6) (undo-tree-id1879 . -6) (undo-tree-id1880 . -6) (undo-tree-id1881 . -6) (undo-tree-id1882 . -6) (undo-tree-id1883 . -6) (undo-tree-id1884 . -6) (undo-tree-id1885 . -6) (undo-tree-id1886 . -6) (undo-tree-id1887 . -6) (undo-tree-id1888 . -6) (undo-tree-id1889 . -6) (undo-tree-id1890 . -6) (undo-tree-id1891 . -6) (undo-tree-id1892 . -6) (undo-tree-id1893 . -6) (undo-tree-id1894 . -6) (undo-tree-id1895 . -6) (1474 . 1477) (#("col_i" 0 5 (fontified nil)) . 1474) (undo-tree-id1896 . -5) (undo-tree-id1897 . -5) (undo-tree-id1898 . -5) (undo-tree-id1899 . -5) (undo-tree-id1900 . -5) (undo-tree-id1901 . -5) (undo-tree-id1902 . -5) (undo-tree-id1903 . -5) (undo-tree-id1904 . -5) (undo-tree-id1905 . -5) (undo-tree-id1906 . -5) (undo-tree-id1907 . -5) (undo-tree-id1908 . -5) (undo-tree-id1909 . -5) (undo-tree-id1910 . -5) (undo-tree-id1911 . -5) (undo-tree-id1912 . -5) (undo-tree-id1913 . -5) (undo-tree-id1914 . -5) (undo-tree-id1915 . -5) (undo-tree-id1916 . -5) (#(" as f32 * 1.1 + 1.0, " 0 1 (fontified nil) 1 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil) 4 7 (fontified nil face font-lock-type-face) 7 21 (fontified nil)) . 1479) (undo-tree-id1917 . -21) (undo-tree-id1918 . -21) (undo-tree-id1919 . -21) (undo-tree-id1920 . -21) (undo-tree-id1921 . -21) (undo-tree-id1922 . -21) (undo-tree-id1923 . -21) (undo-tree-id1924 . -21) (undo-tree-id1925 . -21) (undo-tree-id1926 . -21) (undo-tree-id1927 . -21) (undo-tree-id1928 . -21) (undo-tree-id1929 . -21) (undo-tree-id1930 . -21) (undo-tree-id1931 . -21) (undo-tree-id1932 . -21) (undo-tree-id1933 . -21) (undo-tree-id1934 . -21) (undo-tree-id1935 . -21) (undo-tree-id1936 . -21) (undo-tree-id1937 . -21) (#("0.0, r" 0 1 (fontified nil) 1 6 (fontified nil)) . 1500) (undo-tree-id1938 . -6) (undo-tree-id1939 . -6) (undo-tree-id1940 . -6) (#("ow_i" 0 3 (fontified nil) 3 4 (fontified nil)) . 1506) (undo-tree-id1941 . -3) (undo-tree-id1942 . -3) (undo-tree-id1943 . -3) (1509 . 1510) (#("i as f32 * 1.1 + 1" 0 2 (fontified nil) 2 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil) 5 8 (fontified nil face font-lock-type-face) 8 18 (fontified nil)) . 1509) (undo-tree-id1944 . -18) (undo-tree-id1945 . -18) (undo-tree-id1946 . -18) (#(".0" 0 2 (fontified t)) . 1527) (undo-tree-id1947 . -2) (undo-tree-id1948 . -2) (undo-tree-id1949 . -2)) (25817 16170 340471 553000) 0 nil])
([nil nil ((1534 . 1555) (1560 . 1579) (1561 . 1562) (1565 . 1584) (1566 . 1567) (1591 . 1609)) nil (25817 52577 250681 988000) 0 nil])
([nil nil ((1531 . 1533) (t 25817 15902 299500 571000)) ((#("))" 0 2 (fontified t)) . 1531) (undo-tree-id1827 . -1) (undo-tree-id1828 . 1) (undo-tree-id1829 . -2) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1)) (25817 16169 177283 583000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . 1568) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1)) nil (25817 52584 805744 783000) 0 nil] [nil nil ((1403 . 1404) (#("1" 0 1 (fontified t)) . 1403) (undo-tree-id2427 . 1) (undo-tree-id2428 . -1) (t 25817 52527 823376 711000)) ((1403 . 1404) (#("0" 0 1 (fontified t)) . 1403)) (25817 52577 103888 986000) 0 nil])
([nil nil ((1408 . 1429) (1463 . 1472) (1464 . 1475) (1530 . 1548) 1532) ((#(",
                " 0 2 (fontified nil) 2 18 (fontified t)) . 1530) (#("           " 0 11 (fontified nil)) . 1464) (#("
        " 0 1 (fontified nil) 1 9 (fontified t)) . 1463) (undo-tree-id1826 . -1) (#("
                    " 0 21 (fontified t)) . 1408)) (25817 16168 707540 622000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1568) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1)) nil (25817 52584 805742 759000) 0 nil])
([nil nil ((1405 . 1406) (#("0" 0 1 (fontified t)) . 1405) (undo-tree-id2426 . -1)) ((1405 . 1406) (#("1" 0 1 (fontified t)) . 1405) (t 25817 52541 803376 917000)) (25817 52541 797163 823000) 0 nil])
([nil nil ((1541 . 1542) (#("0" 0 1 (fontified t)) . 1541) (undo-tree-id1825 . -1) (t 25817 15914 36167 410000)) ((1541 . 1542) (#("1" 0 1 (fontified t)) . 1541) (t 25817 15928 509500 958000)) (25817 15928 503689 916000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 1568) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1)) nil (25817 52584 805741 66000) 0 nil])
nil
nil
([nil nil ((#("0" 0 1 (fontified t)) . 1568) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1)) nil (25817 52584 805739 42000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1568) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1)) nil (25817 52584 805737 289000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1568) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1)) nil (25817 52584 805734 804000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1568) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1)) nil (25817 52584 805732 931000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . 1633) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1)) nil (25817 52584 805731 17000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1633) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1)) nil (25817 52584 805729 83000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 1633) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1)) nil (25817 52584 805727 200000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1633) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1)) nil (25817 52584 805725 366000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 1633) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1)) nil (25817 52584 805723 513000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1633) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1)) nil (25817 52584 805721 249000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1633) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1)) nil (25817 52584 805718 303000) 0 nil])
([nil nil ((#("
                    " 0 1 (fontified t) 1 21 (fontified t)) . 1534) (#("
                  " 0 1 (fontified t) 1 19 (fontified t)) . 1574) (#(" " 0 1 (fontified t)) . 1594) (#("
                  " 0 1 (fontified t) 1 19 (fontified t)) . 1599) (undo-tree-id2429 . -1) (#(" " 0 1 (fontified t)) . 1619) (#(",
                " 0 2 (fontified t) 2 18 (fontified t)) . 1638) 1633) nil (25817 52649 485903 134000) 0 nil])
([nil nil ((#("    // let material_visited = materials.add(Color::rgb(1.0, 1.0, 1.0).into());
    // let material_unvisited = materials.add(Color::rgb(0.0, 0.0, 1.0).into());
" 0 4 (fontified t) 4 7 (fontified t face font-lock-comment-delimiter-face) 7 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 27 (fontified t face font-lock-comment-face) 27 30 (fontified t face font-lock-comment-face) 30 44 (fontified t face font-lock-comment-face) 44 49 (fontified t face font-lock-comment-face) 49 77 (fontified t face font-lock-comment-face) 77 78 (fontified t face font-lock-comment-face) 78 79 (fontified t face font-lock-comment-face) 79 82 (fontified t) 82 83 (rear-nonsticky t fontified t) 83 86 (fontified t face font-lock-comment-delimiter-face) 86 89 (fontified t face font-lock-comment-face) 89 90 (fontified t face font-lock-comment-face) 90 108 (fontified t face font-lock-comment-face) 108 111 (fontified t face font-lock-comment-face) 111 125 (fontified t face font-lock-comment-face) 125 130 (fontified t face font-lock-comment-face) 130 136 (fontified t face font-lock-comment-face) 136 137 (fontified t face font-lock-comment-face) 137 141 (fontified t face font-lock-comment-face) 141 142 (fontified t face font-lock-comment-face) 142 158 (fontified t face font-lock-comment-face) 158 159 (fontified t face font-lock-comment-face) 159 160 (fontified t face font-lock-comment-face)) . 1030) (undo-tree-id2535 . -160) (undo-tree-id2536 . -79) (undo-tree-id2537 . -159) (undo-tree-id2538 . -79) (undo-tree-id2539 . -158) (undo-tree-id2540 . -160) (undo-tree-id2541 . -79) (undo-tree-id2542 . -160) (undo-tree-id2543 . -160) (undo-tree-id2544 . -160) (undo-tree-id2545 . -160) (undo-tree-id2546 . -160) (undo-tree-id2547 . -160) (undo-tree-id2548 . -79) (undo-tree-id2549 . -79) (undo-tree-id2550 . -160) (undo-tree-id2551 . -79) (undo-tree-id2552 . -79) (undo-tree-id2553 . -79) (undo-tree-id2554 . -79) (undo-tree-id2555 . -79) (undo-tree-id2556 . -160) 1109 (t 25817 52584 810044 221000)) nil (25817 52659 989413 883000) 0 nil] [nil nil ((apply 6 1030 1184 undo--wrap-and-run-primitive-undo 1030 1184 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1110) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -1034) 1190)) (t 25817 52584 810044 221000)) ((apply -6 1030 1190 undo--wrap-and-run-primitive-undo 1030 1190 ((1034 . 1037) (1110 . 1113) 1858))) (25817 52649 485666 840000) 0 nil] [nil nil ((#("        // for (col_i, cell) in row.iter().enumerate() {
        //     commands.spawn(PbrBundle {
        //         mesh: meshes.add(Mesh::from(shape::Cube { size: 0.1 })),
        //         material: if cell.visited {
        //             material_visited.clone()
        //         } else {
        //             material_unvisited.clone()
        //         },
        //         transform: Transform::from_xyz(
        //             (row_i * 3 + 1) as f32 / 10.0,
        //             0.0,
        //             (col_i * 3 + 1) as f32 / 10.0,
        //         ),
        //         ..default()
        //     });
        // }
" 0 7 (fontified t) 7 8 (rear-nonsticky t fontified t) 8 10 (fontified t face font-lock-comment-delimiter-face) 10 11 (fontified t face font-lock-comment-delimiter-face) 11 14 (fontified t face font-lock-comment-face) 14 18 (fontified t face font-lock-comment-face) 18 29 (fontified t face font-lock-comment-face) 29 31 (fontified t face font-lock-comment-face) 31 40 (fontified t face font-lock-comment-face) 40 57 (fontified t face font-lock-comment-face) 57 64 (fontified t) 64 65 (fontified t) 65 68 (fontified t face font-lock-comment-delimiter-face) 68 71 (fontified t face font-lock-comment-delimiter-face) 71 72 (fontified t face font-lock-comment-delimiter-face) 72 87 (fontified t face font-lock-comment-face) 87 96 (fontified t face font-lock-comment-face) 96 99 (fontified t face font-lock-comment-face) 99 107 (fontified t) 107 110 (fontified t face font-lock-comment-delimiter-face) 110 118 (fontified t face font-lock-comment-delimiter-face) 118 122 (fontified t face font-lock-comment-face) 122 135 (fontified t face font-lock-comment-face) 135 139 (fontified t face font-lock-comment-face) 139 146 (fontified t face font-lock-comment-face) 146 151 (fontified t face font-lock-comment-face) 151 153 (fontified t face font-lock-comment-face) 153 157 (fontified t face font-lock-comment-face) 157 160 (fontified t face font-lock-comment-face) 160 164 (fontified t face font-lock-comment-face) 164 168 (fontified t face font-lock-comment-face) 168 169 (fontified t face font-lock-comment-face) 169 175 (fontified t face font-lock-comment-face) 175 183 (fontified t) 183 186 (fontified t face font-lock-comment-delimiter-face) 186 194 (fontified t face font-lock-comment-delimiter-face) 194 196 (fontified t face font-lock-comment-face) 196 202 (fontified t face font-lock-comment-face) 202 204 (fontified t face font-lock-comment-face) 204 206 (fontified t face font-lock-comment-face) 206 207 (fontified t face font-lock-comment-face) 207 221 (fontified t face font-lock-comment-face) 221 222 (fontified t face font-lock-comment-face) 222 230 (fontified t) 230 233 (fontified t face font-lock-comment-delimiter-face) 233 245 (fontified t face font-lock-comment-delimiter-face) 245 269 (fontified t face font-lock-comment-face) 269 270 (fontified t face font-lock-comment-face) 270 278 (fontified t) 278 281 (fontified t face font-lock-comment-delimiter-face) 281 289 (fontified t face font-lock-comment-delimiter-face) 289 291 (fontified t face font-lock-comment-face) 291 295 (fontified t face font-lock-comment-face) 295 297 (fontified t face font-lock-comment-face) 297 298 (fontified t face font-lock-comment-face) 298 306 (fontified t) 306 309 (fontified t face font-lock-comment-delimiter-face) 309 321 (fontified t face font-lock-comment-delimiter-face) 321 347 (fontified t face font-lock-comment-face) 347 348 (fontified t face font-lock-comment-face) 348 356 (fontified t) 356 359 (fontified t face font-lock-comment-delimiter-face) 359 367 (fontified t face font-lock-comment-delimiter-face) 367 369 (fontified t face font-lock-comment-face) 369 370 (fontified t face font-lock-comment-face) 370 378 (fontified t) 378 381 (fontified t face font-lock-comment-delimiter-face) 381 389 (fontified t face font-lock-comment-delimiter-face) 389 398 (fontified t face font-lock-comment-face) 398 400 (fontified t face font-lock-comment-face) 400 408 (fontified t face font-lock-comment-face) 408 409 (fontified t face font-lock-comment-face) 409 417 (fontified t face font-lock-comment-face) 417 420 (fontified t face font-lock-comment-face) 420 421 (fontified t face font-lock-comment-face) 421 429 (fontified t) 429 432 (fontified t face font-lock-comment-delimiter-face) 432 436 (fontified t face font-lock-comment-delimiter-face) 436 444 (fontified t face font-lock-comment-delimiter-face) 444 460 (fontified t face font-lock-comment-face) 460 462 (fontified t face font-lock-comment-face) 462 463 (fontified t face font-lock-comment-face) 463 466 (fontified t face font-lock-comment-face) 466 474 (fontified t face font-lock-comment-face) 474 475 (fontified t face font-lock-comment-face) 475 480 (fontified t) 480 483 (fontified t) 483 486 (fontified t face font-lock-comment-delimiter-face) 486 487 (fontified t face font-lock-comment-delimiter-face) 487 498 (fontified t face font-lock-comment-delimiter-face) 498 499 (fontified t face font-lock-comment-face) 499 502 (fontified t face font-lock-comment-face) 502 503 (fontified t face font-lock-comment-face) 503 505 (fontified t) 505 509 (fontified t) 509 511 (fontified t) 511 514 (fontified t face font-lock-comment-delimiter-face) 514 526 (fontified t face font-lock-comment-delimiter-face) 526 527 (fontified t face font-lock-comment-face) 527 535 (fontified t face font-lock-comment-face) 535 542 (fontified t face font-lock-comment-face) 542 544 (fontified t face font-lock-comment-face) 544 545 (fontified t face font-lock-comment-face) 545 548 (fontified t face font-lock-comment-face) 548 551 (fontified t face font-lock-comment-face) 551 555 (fontified t face font-lock-comment-face) 555 556 (fontified t face font-lock-comment-face) 556 557 (fontified t face font-lock-comment-face) 557 565 (fontified t) 565 568 (fontified t face font-lock-comment-delimiter-face) 568 576 (fontified t face font-lock-comment-delimiter-face) 576 579 (fontified t face font-lock-comment-face) 579 587 (fontified t) 587 590 (fontified t face font-lock-comment-delimiter-face) 590 598 (fontified t face font-lock-comment-delimiter-face) 598 610 (fontified t face font-lock-comment-face) 610 618 (fontified t) 618 621 (fontified t face font-lock-comment-delimiter-face) 621 625 (fontified t face font-lock-comment-delimiter-face) 625 626 (fontified t face font-lock-comment-face) 626 629 (fontified t face font-lock-comment-face) 629 637 (fontified t) 637 640 (fontified t face font-lock-comment-delimiter-face) 640 641 (fontified t face font-lock-comment-face) 641 642 (fontified t face font-lock-comment-face)) . 1634) (undo-tree-id2458 . -641) (undo-tree-id2459 . -641) (undo-tree-id2460 . -55) (undo-tree-id2461 . -641) (undo-tree-id2462 . -641) (undo-tree-id2463 . -55) (undo-tree-id2464 . -55) (undo-tree-id2465 . -642) (undo-tree-id2466 . -55) (undo-tree-id2467 . -641) (undo-tree-id2468 . -55) (undo-tree-id2469 . -55) (undo-tree-id2470 . -98) (undo-tree-id2471 . -98) (undo-tree-id2472 . -154) (undo-tree-id2473 . -154) (undo-tree-id2474 . -221) (undo-tree-id2475 . -221) (undo-tree-id2476 . -269) (undo-tree-id2477 . -269) (undo-tree-id2478 . -297) (undo-tree-id2479 . -297) (undo-tree-id2480 . -347) (undo-tree-id2481 . -347) (undo-tree-id2482 . -369) (undo-tree-id2483 . -369) (undo-tree-id2484 . -420) (undo-tree-id2485 . -420) (undo-tree-id2486 . -474) (undo-tree-id2487 . -474) (undo-tree-id2488 . -502) (undo-tree-id2489 . -502) (undo-tree-id2490 . -556) (undo-tree-id2491 . -556) (undo-tree-id2492 . -578) (undo-tree-id2493 . -578) (undo-tree-id2494 . -609) (undo-tree-id2495 . -609) (undo-tree-id2496 . -628) (undo-tree-id2497 . -628) (undo-tree-id2498 . -641) (undo-tree-id2499 . -641) (undo-tree-id2500 . -629) (undo-tree-id2501 . -641) (undo-tree-id2502 . -641) (undo-tree-id2503 . -641) (undo-tree-id2504 . -642) 2275 (t 25817 52584 810044 221000)) ((1634 . 2276)) (25817 52638 626108 650000) 0 nil])
([nil nil ((#("        // for (col_i, cell) in row.iter().enumerate() {
        //     commands.spawn(PbrBundle {
        //         mesh: meshes.add(Mesh::from(shape::Cube { size: 0.1 })),
        //         material: if cell.visited {
        //             material_visited.clone()
        //         } else {
        //             material_unvisited.clone()
        //         },
        //         transform: Transform::from_xyz(
        //             (row_i * 3 + 1) as f32 / 10.0,
        //             0.0,
        //             (col_i * 3 + 1) as f32 / 10.0,
        //         ),
        //         ..default()
        //     });
        // }
" 0 7 (fontified t) 7 8 (rear-nonsticky t fontified t) 8 10 (fontified t face font-lock-comment-delimiter-face) 10 11 (fontified t face font-lock-comment-delimiter-face) 11 14 (fontified t face font-lock-comment-face) 14 18 (fontified t face font-lock-comment-face) 18 29 (fontified t face font-lock-comment-face) 29 31 (fontified t face font-lock-comment-face) 31 40 (fontified t face font-lock-comment-face) 40 57 (fontified t face font-lock-comment-face) 57 64 (fontified t) 64 65 (fontified t) 65 68 (fontified t face font-lock-comment-delimiter-face) 68 71 (fontified t face font-lock-comment-delimiter-face) 71 72 (fontified t face font-lock-comment-delimiter-face) 72 87 (fontified t face font-lock-comment-face) 87 96 (fontified t face font-lock-comment-face) 96 99 (fontified t face font-lock-comment-face) 99 107 (fontified t) 107 110 (fontified t face font-lock-comment-delimiter-face) 110 118 (fontified t face font-lock-comment-delimiter-face) 118 122 (fontified t face font-lock-comment-face) 122 135 (fontified t face font-lock-comment-face) 135 139 (fontified t face font-lock-comment-face) 139 146 (fontified t face font-lock-comment-face) 146 151 (fontified t face font-lock-comment-face) 151 153 (fontified t face font-lock-comment-face) 153 157 (fontified t face font-lock-comment-face) 157 160 (fontified t face font-lock-comment-face) 160 164 (fontified t face font-lock-comment-face) 164 168 (fontified t face font-lock-comment-face) 168 169 (fontified t face font-lock-comment-face) 169 175 (fontified t face font-lock-comment-face) 175 183 (fontified t) 183 186 (fontified t face font-lock-comment-delimiter-face) 186 194 (fontified t face font-lock-comment-delimiter-face) 194 196 (fontified t face font-lock-comment-face) 196 202 (fontified t face font-lock-comment-face) 202 204 (fontified t face font-lock-comment-face) 204 206 (fontified t face font-lock-comment-face) 206 207 (fontified t face font-lock-comment-face) 207 221 (fontified t face font-lock-comment-face) 221 222 (fontified t face font-lock-comment-face) 222 230 (fontified t) 230 233 (fontified t face font-lock-comment-delimiter-face) 233 245 (fontified t face font-lock-comment-delimiter-face) 245 269 (fontified t face font-lock-comment-face) 269 270 (fontified t face font-lock-comment-face) 270 278 (fontified t) 278 281 (fontified t face font-lock-comment-delimiter-face) 281 289 (fontified t face font-lock-comment-delimiter-face) 289 291 (fontified t face font-lock-comment-face) 291 295 (fontified t face font-lock-comment-face) 295 297 (fontified t face font-lock-comment-face) 297 298 (fontified t face font-lock-comment-face) 298 306 (fontified t) 306 309 (fontified t face font-lock-comment-delimiter-face) 309 321 (fontified t face font-lock-comment-delimiter-face) 321 347 (fontified t face font-lock-comment-face) 347 348 (fontified t face font-lock-comment-face) 348 356 (fontified t) 356 359 (fontified t face font-lock-comment-delimiter-face) 359 367 (fontified t face font-lock-comment-delimiter-face) 367 369 (fontified t face font-lock-comment-face) 369 370 (fontified t face font-lock-comment-face) 370 378 (fontified t) 378 381 (fontified t face font-lock-comment-delimiter-face) 381 389 (fontified t face font-lock-comment-delimiter-face) 389 398 (fontified t face font-lock-comment-face) 398 400 (fontified t face font-lock-comment-face) 400 408 (fontified t face font-lock-comment-face) 408 409 (fontified t face font-lock-comment-face) 409 417 (fontified t face font-lock-comment-face) 417 420 (fontified t face font-lock-comment-face) 420 421 (fontified t face font-lock-comment-face) 421 429 (fontified t) 429 432 (fontified t face font-lock-comment-delimiter-face) 432 436 (fontified t face font-lock-comment-delimiter-face) 436 444 (fontified t face font-lock-comment-delimiter-face) 444 460 (fontified t face font-lock-comment-face) 460 462 (fontified t face font-lock-comment-face) 462 463 (fontified t face font-lock-comment-face) 463 466 (fontified t face font-lock-comment-face) 466 474 (fontified t face font-lock-comment-face) 474 475 (fontified t face font-lock-comment-face) 475 480 (fontified t) 480 483 (fontified t) 483 486 (fontified t face font-lock-comment-delimiter-face) 486 487 (fontified t face font-lock-comment-delimiter-face) 487 498 (fontified t face font-lock-comment-delimiter-face) 498 499 (fontified t face font-lock-comment-face) 499 502 (fontified t face font-lock-comment-face) 502 503 (fontified t face font-lock-comment-face) 503 505 (fontified t) 505 509 (fontified t) 509 511 (fontified t) 511 514 (fontified t face font-lock-comment-delimiter-face) 514 526 (fontified t face font-lock-comment-delimiter-face) 526 527 (fontified t face font-lock-comment-face) 527 535 (fontified t face font-lock-comment-face) 535 542 (fontified t face font-lock-comment-face) 542 544 (fontified t face font-lock-comment-face) 544 545 (fontified t face font-lock-comment-face) 545 548 (fontified t face font-lock-comment-face) 548 551 (fontified t face font-lock-comment-face) 551 555 (fontified t face font-lock-comment-face) 555 556 (fontified t face font-lock-comment-face) 556 557 (fontified t face font-lock-comment-face) 557 565 (fontified t) 565 568 (fontified t face font-lock-comment-delimiter-face) 568 576 (fontified t face font-lock-comment-delimiter-face) 576 579 (fontified t face font-lock-comment-face) 579 587 (fontified t) 587 590 (fontified t face font-lock-comment-delimiter-face) 590 598 (fontified t face font-lock-comment-delimiter-face) 598 610 (fontified t face font-lock-comment-face) 610 618 (fontified t) 618 621 (fontified t face font-lock-comment-delimiter-face) 621 625 (fontified t face font-lock-comment-delimiter-face) 625 626 (fontified t face font-lock-comment-face) 626 629 (fontified t face font-lock-comment-face) 629 637 (fontified t) 637 640 (fontified t face font-lock-comment-delimiter-face) 640 641 (fontified t face font-lock-comment-face) 641 642 (fontified t face font-lock-comment-face)) . 1474) (undo-tree-id2522 . -629) (undo-tree-id2523 . -641) (undo-tree-id2524 . -629) (undo-tree-id2525 . -629) (undo-tree-id2526 . -642) (undo-tree-id2527 . -629) (undo-tree-id2528 . -642) (undo-tree-id2529 . -642) (undo-tree-id2530 . -629) (undo-tree-id2531 . -629) (undo-tree-id2532 . -629) (undo-tree-id2533 . -629) (undo-tree-id2534 . -642) 2103) nil (25817 52659 989399 366000) 0 nil])
nil
nil
([nil nil ((#("// fn print_grid(grid: Query<&Grid>) {
//     let grid = grid.single();
//     for row in grid.grid.clone() {
//         for cell in row {
//             if cell.visited {
//                 print!(\"X\");
//             } else {
//                 print!(\"#\");
//             }
//         }
//         println!();
//     }
// }
" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 5 (fontified t face font-lock-comment-face) 5 6 (fontified t face font-lock-comment-face) 6 16 (fontified t face font-lock-comment-face) 16 17 (fontified t face font-lock-comment-face) 17 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 23 (fontified t face font-lock-comment-face) 23 28 (fontified t face font-lock-comment-face) 28 29 (fontified t face font-lock-comment-face syntax-table (1)) 29 30 (fontified t face font-lock-comment-face) 30 34 (fontified t face font-lock-comment-face) 34 35 (fontified t face font-lock-comment-face syntax-table (1)) 35 39 (fontified t face font-lock-comment-face) 39 42 (fontified t face font-lock-comment-delimiter-face) 42 46 (fontified t face font-lock-comment-delimiter-face) 46 49 (fontified t face font-lock-comment-face) 49 50 (fontified t face font-lock-comment-face) 50 52 (fontified t face font-lock-comment-face) 52 54 (fontified t face font-lock-comment-face) 54 68 (fontified t face font-lock-comment-face) 68 72 (fontified t face font-lock-comment-face) 72 75 (fontified t face font-lock-comment-delimiter-face) 75 79 (fontified t face font-lock-comment-delimiter-face) 79 82 (fontified t face font-lock-comment-face) 82 83 (fontified t face font-lock-comment-face) 83 86 (fontified t face font-lock-comment-face) 86 87 (fontified t face font-lock-comment-face) 87 89 (fontified t face font-lock-comment-face) 89 110 (fontified t face font-lock-comment-face) 110 113 (fontified t face font-lock-comment-delimiter-face) 113 121 (fontified t face font-lock-comment-delimiter-face) 121 124 (fontified t face font-lock-comment-face) 124 125 (fontified t face font-lock-comment-face) 125 129 (fontified t face font-lock-comment-face) 129 130 (fontified t face font-lock-comment-face) 130 132 (fontified t face font-lock-comment-face) 132 139 (fontified t face font-lock-comment-face) 139 142 (fontified t face font-lock-comment-delimiter-face) 142 151 (fontified t face font-lock-comment-delimiter-face) 151 154 (fontified t face font-lock-comment-delimiter-face) 154 156 (fontified t face font-lock-comment-face) 156 172 (fontified t face font-lock-comment-face) 172 175 (fontified t face font-lock-comment-delimiter-face) 175 188 (fontified t face font-lock-comment-delimiter-face) 188 191 (fontified t face font-lock-comment-delimiter-face) 191 197 (fontified t face font-lock-comment-face) 197 198 (fontified t face font-lock-comment-face) 198 201 (fontified t face font-lock-comment-face) 201 204 (fontified t face font-lock-comment-face) 204 207 (fontified t face font-lock-comment-delimiter-face) 207 219 (fontified t face font-lock-comment-delimiter-face) 219 221 (fontified t face font-lock-comment-face) 221 225 (fontified t face font-lock-comment-face) 225 228 (fontified t face font-lock-comment-face) 228 230 (fontified t face font-lock-comment-delimiter-face) 230 231 (fontified t face font-lock-comment-delimiter-face) 231 247 (fontified t face font-lock-comment-delimiter-face) 247 248 (fontified t face font-lock-comment-face) 248 251 (fontified t face font-lock-comment-face) 251 252 (fontified t face font-lock-comment-face) 252 253 (fontified t face font-lock-comment-face) 253 254 (fontified t face font-lock-comment-face) 254 257 (fontified t face font-lock-comment-face) 257 260 (fontified t face font-lock-comment-face) 260 263 (fontified t face font-lock-comment-delimiter-face) 263 266 (fontified t face font-lock-comment-delimiter-face) 266 270 (fontified t face font-lock-comment-delimiter-face) 270 275 (fontified t face font-lock-comment-delimiter-face) 275 277 (fontified t face font-lock-comment-face) 277 280 (fontified t face font-lock-comment-delimiter-face) 280 288 (fontified t face font-lock-comment-delimiter-face) 288 290 (fontified t face font-lock-comment-face) 290 293 (fontified t face font-lock-comment-delimiter-face) 293 301 (fontified t face font-lock-comment-delimiter-face) 301 303 (fontified t face font-lock-comment-face) 303 306 (fontified t face font-lock-comment-face) 306 307 (fontified t face font-lock-comment-face) 307 309 (fontified t face font-lock-comment-face) 309 310 (fontified t face font-lock-comment-face) 310 313 (fontified t face font-lock-comment-face) 313 316 (fontified t face font-lock-comment-delimiter-face) 316 320 (fontified t face font-lock-comment-delimiter-face) 320 322 (fontified t face font-lock-comment-face) 322 325 (fontified t face font-lock-comment-delimiter-face) 325 326 (fontified t face font-lock-comment-face) 326 327 (fontified t face font-lock-comment-face)) . 1483) (undo-tree-id2509 . -322) (undo-tree-id2510 . -326) (undo-tree-id2511 . -322) (undo-tree-id2512 . -322) (undo-tree-id2513 . -327) (undo-tree-id2514 . -322) (undo-tree-id2515 . -327) (undo-tree-id2516 . -327) (undo-tree-id2517 . -322) (undo-tree-id2518 . -322) (undo-tree-id2519 . -322) (undo-tree-id2520 . -322) (undo-tree-id2521 . -327) 1805) nil (25817 52659 989390 309000) 0 nil])
([nil current ((#("
" 0 1 (fontified t)) . 1483) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . 1) (undo-tree-id2508 . -1)) nil (25817 52659 989378 627000) 0 nil])
nil
