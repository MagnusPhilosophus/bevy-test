(undo-tree-save-format-version . 1)
"9e9f815069d44793ec74f7d0c10aff12544e9f1a"
[nil nil nil nil (25820 34427 274745 115000) 0 nil]
([nil nil ((#("            //grid.grid[current_cell.0][current_cell.1].walls[wall.0 as usize] = false;
            //grid.grid[neighbor.0][neighbor.1].walls[wall.1 as usize] = false;

" 0 12 (fontified t) 12 14 (face font-lock-comment-delimiter-face fontified t) 14 88 (face font-lock-comment-face fontified t) 88 100 (fontified t) 100 102 (face font-lock-comment-delimiter-face fontified t) 102 168 (face font-lock-comment-face fontified t) 168 169 (fontified t)) . 2599) (undo-tree-id0 . -88) (undo-tree-id1 . -88) (undo-tree-id2 . -168) (undo-tree-id3 . -168) (undo-tree-id4 . -169) (undo-tree-id5 . -169) (undo-tree-id6 . -169) (undo-tree-id7 . -169) (undo-tree-id8 . -168) (undo-tree-id9 . -168) (undo-tree-id10 . -88) (undo-tree-id11 . -88) (undo-tree-id12 . -168) (undo-tree-id13 . -168) (undo-tree-id14 . -88) (undo-tree-id15 . -88) (undo-tree-id16 . -168) (undo-tree-id17 . -168) (undo-tree-id18 . -169) (undo-tree-id19 . -168) (undo-tree-id20 . -168) (undo-tree-id21 . -169) (undo-tree-id22 . -88) (undo-tree-id23 . -88) (undo-tree-id24 . -168) (undo-tree-id25 . -168) (undo-tree-id26 . -168) (undo-tree-id27 . -168) (undo-tree-id28 . -88) (undo-tree-id29 . -88) (undo-tree-id30 . -88) (undo-tree-id31 . -88) (undo-tree-id32 . -168) (undo-tree-id33 . -168) (undo-tree-id34 . -168) (undo-tree-id35 . -168) (undo-tree-id36 . -169) (undo-tree-id37 . -168) (undo-tree-id38 . -168) 2767 (t 25820 33918 465217 901000)) nil (25820 35207 528539 946000) 0 nil])
([nil nil ((apply 6 4725 4856 undo--wrap-and-run-primitive-undo 4725 4856 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 4783) (#("// " 0 3 (face font-lock-comment-delimiter-face)) . 4745) 4862))) ((apply -6 4725 4862 undo--wrap-and-run-primitive-undo 4725 4862 ((4745 . 4748) (4783 . 4786) 5869))) (25820 35208 376082 783000) 0 nil])
([nil nil ((apply 6 5732 5863 undo--wrap-and-run-primitive-undo 5732 5863 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 5790) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 5752) 5869))) ((apply -6 5732 5869 undo--wrap-and-run-primitive-undo 5732 5869 ((5752 . 5755) (5790 . 5793) 3891))) (25820 35208 552645 791000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3898 . 3899) (#("
" 0 1 (fontified nil)) . -4889) (3890 . 4890) 3878 (t 25820 35209 718557 401000)) nil (25820 35281 200088 797000) 0 nil] [nil nil ((nil rear-nonsticky nil 3899 . 3900) (#("
" 0 1 (fontified nil)) . -4882) (3891 . 4883) (t 25820 34456 795220 474000)) ((#("
        for (col_i, cell) in row.iter().enumerate() {
            if cell.walls[0] {
                commands.spawn((
                    PbrBundle {
                        mesh: meshes.add(Mesh::from(shape::Box::new(
                            wall_width,
                            wall_height,
                            wall_depth,
                        ))),
                        material: materials.add(Color::rgb(1.0, 0.0, 0.0).into()),
                        transform: Transform::from_xyz(
                            row_i as f32 * (room_size + wall_width) + room_size + wall_width / 2.0,
                            0.0,
                            col_i as f32 * (room_size + wall_width) + (room_size / 2.0),
                        ),
                        ..default()
                    },
                    RigidBody::Fixed,
                    Collider::cuboid(wall_width / 2.0, wall_height / 2.0, wall_depth / 2.0),
                ));
            }
        }
" 0 1 (fontified t) 1 8 (fontified nil) 8 9 (fontified nil rear-nonsticky nil) 9 12 (face font-lock-keyword-face fontified nil) 12 27 (fontified nil) 27 29 (face font-lock-keyword-face fontified nil) 29 55 (fontified nil) 55 67 (fontified t) 67 69 (face font-lock-keyword-face fontified t) 69 70 (fontified t) 70 86 (fontified t) 86 102 (fontified t) 102 119 (fontified t) 119 139 (fontified t) 139 148 (face font-lock-type-face fontified t) 148 151 (fontified t) 151 175 (fontified t) 175 179 (face font-lock-variable-name-face fontified t) 179 192 (fontified t) 192 196 (face font-lock-type-face fontified t) 196 203 (fontified t) 203 208 (face font-lock-constant-face fontified t) 208 210 (fontified t) 210 213 (face font-lock-type-face fontified t) 213 220 (fontified t) 220 248 (fontified t) 248 253 (fontified t) 253 260 (fontified t) 260 288 (fontified t) 288 301 (fontified t) 301 329 (fontified t) 329 341 (fontified t) 341 365 (fontified t) 365 370 (fontified t) 370 394 (fontified t) 394 402 (face font-lock-variable-name-face fontified t) 402 418 (fontified t) 418 423 (face font-lock-type-face fontified t) 423 445 (fontified t) 445 453 (fontified t) 453 477 (fontified t) 477 486 (face font-lock-variable-name-face fontified t) 486 488 (fontified t) 488 497 (face font-lock-type-face fontified t) 497 509 (fontified t) 509 537 (fontified t) 537 543 (fontified t) 543 545 (face font-lock-keyword-face fontified t) 545 546 (fontified t) 546 549 (face font-lock-type-face fontified t) 549 609 (fontified t) 609 637 (fontified t) 637 642 (fontified t) 642 670 (fontified t) 670 676 (fontified t) 676 678 (face font-lock-keyword-face fontified t) 678 679 (fontified t) 679 682 (face font-lock-type-face fontified t) 682 731 (fontified t) 731 755 (fontified t) 755 758 (fontified t) 758 782 (fontified t) 782 794 (fontified t) 794 814 (fontified t) 814 817 (fontified t) 817 837 (fontified t) 837 846 (face font-lock-type-face fontified t) 846 848 (fontified t) 848 853 (face font-lock-type-face fontified t) 853 855 (fontified t) 855 875 (fontified t) 875 883 (face font-lock-type-face fontified t) 883 948 (fontified t) 948 964 (fontified t) 964 968 (fontified t) 968 982 (fontified t) 982 991 (fontified nil) 991 992 (fontified nil)) . 3891) (undo-tree-id421 . -642) (undo-tree-id422 . -1) (undo-tree-id423 . -16) (undo-tree-id424 . -948) (undo-tree-id425 . -1) (undo-tree-id426 . -967) (undo-tree-id427 . -9) (undo-tree-id428 . -9) (undo-tree-id429 . -63) (undo-tree-id430 . -63) (undo-tree-id431 . -94) (undo-tree-id432 . -94) (undo-tree-id433 . -127) (undo-tree-id434 . -127) (undo-tree-id435 . -159) (undo-tree-id436 . -159) (undo-tree-id437 . -228) (undo-tree-id438 . -228) (undo-tree-id439 . -268) (undo-tree-id440 . -268) (undo-tree-id441 . -309) (undo-tree-id442 . -309) (undo-tree-id443 . -349) (undo-tree-id444 . -349) (undo-tree-id445 . -378) (undo-tree-id446 . -378) (undo-tree-id447 . -461) (undo-tree-id448 . -461) (undo-tree-id449 . -517) (undo-tree-id450 . -517) (undo-tree-id451 . -617) (undo-tree-id452 . -617) (undo-tree-id453 . -517) (undo-tree-id454 . -517) (undo-tree-id455 . -517) (undo-tree-id456 . -517) (undo-tree-id457 . -461) (undo-tree-id458 . -461) (undo-tree-id459 . -378) (undo-tree-id460 . -378) (undo-tree-id461 . -349) (undo-tree-id462 . -349) (undo-tree-id463 . -309) (undo-tree-id464 . -309) (undo-tree-id465 . -268) (undo-tree-id466 . -268) (undo-tree-id467 . -228) (undo-tree-id468 . -228) (undo-tree-id469 . -159) (undo-tree-id470 . -159) (undo-tree-id471 . -127) (undo-tree-id472 . -127) (undo-tree-id473 . -94) (undo-tree-id474 . -94) (undo-tree-id475 . -63) (undo-tree-id476 . -63) (undo-tree-id477 . -9) (undo-tree-id478 . -9) (undo-tree-id479 . 992) (undo-tree-id480 . -16) (undo-tree-id481 . -16) (undo-tree-id482 . -16) (undo-tree-id483 . -16) (undo-tree-id484 . -16) (undo-tree-id485 . -16) (undo-tree-id486 . -70) (undo-tree-id487 . -70) (undo-tree-id488 . -101) (undo-tree-id489 . -101) (undo-tree-id490 . -134) (undo-tree-id491 . -134) (undo-tree-id492 . -166) (undo-tree-id493 . -166) (undo-tree-id494 . -166) (undo-tree-id495 . -166) (undo-tree-id496 . -235) (undo-tree-id497 . -235) (undo-tree-id498 . -275) (undo-tree-id499 . -275) (undo-tree-id500 . -316) (undo-tree-id501 . -316) (undo-tree-id502 . -356) (undo-tree-id503 . -356) (undo-tree-id504 . -385) (undo-tree-id505 . -385) (undo-tree-id506 . -468) (undo-tree-id507 . -468) (undo-tree-id508 . -524) (undo-tree-id509 . -524) (undo-tree-id510 . -624) (undo-tree-id511 . -624) (undo-tree-id512 . -657) (undo-tree-id513 . -657) (undo-tree-id514 . -746) (undo-tree-id515 . -746) (undo-tree-id516 . -773) (undo-tree-id517 . -773) (undo-tree-id518 . -809) (undo-tree-id519 . -809) (undo-tree-id520 . -832) (undo-tree-id521 . -832) (undo-tree-id522 . -870) (undo-tree-id523 . -870) (undo-tree-id524 . -963) (undo-tree-id525 . -963) (undo-tree-id526 . -980) (undo-tree-id527 . -980) (undo-tree-id528 . -980) (undo-tree-id529 . -980) (undo-tree-id530 . -991) (undo-tree-id531 . -991) (undo-tree-id532 . -957) (undo-tree-id533 . -957) (undo-tree-id534 . -957) (undo-tree-id535 . -957) (undo-tree-id536 . -864) (undo-tree-id537 . -864) (undo-tree-id538 . -826) (undo-tree-id539 . -826) (undo-tree-id540 . -803) (undo-tree-id541 . -803) (undo-tree-id542 . -767) (undo-tree-id543 . -767) (undo-tree-id544 . -740) (undo-tree-id545 . -740) (undo-tree-id546 . -651) (undo-tree-id547 . -651) (undo-tree-id548 . -618) (undo-tree-id549 . -618) (undo-tree-id550 . -518) (undo-tree-id551 . -518) (undo-tree-id552 . -462) (undo-tree-id553 . -462) (undo-tree-id554 . -379) (undo-tree-id555 . -379) (undo-tree-id556 . -350) (undo-tree-id557 . -350) (undo-tree-id558 . -310) (undo-tree-id559 . -310) (undo-tree-id560 . -269) (undo-tree-id561 . -269) (undo-tree-id562 . -229) (undo-tree-id563 . -229) (undo-tree-id564 . -160) (undo-tree-id565 . -160) (undo-tree-id566 . -128) (undo-tree-id567 . -128) (undo-tree-id568 . -95) (undo-tree-id569 . -95) (undo-tree-id570 . -817) (undo-tree-id571 . -817) (undo-tree-id572 . -370) (undo-tree-id573 . -370) (undo-tree-id574 . -642) (undo-tree-id575 . -642) (undo-tree-id576 . -948) (undo-tree-id577 . -642) (undo-tree-id578 . -642) (undo-tree-id579 . -642) (undo-tree-id580 . -642) (undo-tree-id581 . -642) (undo-tree-id582 . -642) (undo-tree-id583 . -370) (undo-tree-id584 . -948) (undo-tree-id585 . -948) (undo-tree-id586 . -990) (undo-tree-id587 . -990) (undo-tree-id588 . -70) (undo-tree-id589 . -55) (undo-tree-id590 . -70) (undo-tree-id591 . -70) (undo-tree-id592 . -70) (undo-tree-id593 . -70) (undo-tree-id594 . -70) (4882 . 4883) (nil rear-nonsticky t 3899 . 3900)) (25820 35205 208316 389000) 0 nil])
([nil nil ((#("        for (col_i, cell) in row.iter().enumerate() {
            if cell.walls[Walls::South as usize] {
" 0 7 (fontified t) 7 8 (rear-nonsticky t fontified t) 8 11 (face font-lock-keyword-face fontified t) 11 26 (fontified t) 26 28 (face font-lock-keyword-face fontified t) 28 66 (fontified t) 66 68 (face font-lock-keyword-face fontified t) 68 80 (fontified t) 80 85 (face font-lock-type-face fontified t) 85 87 (fontified t) 87 92 (face font-lock-type-face fontified t) 92 93 (fontified t) 93 95 (face font-lock-keyword-face fontified t) 95 96 (fontified t) 96 101 (face font-lock-type-face fontified t) 101 105 (fontified t)) . 3891) (undo-tree-id923 . -62) (undo-tree-id924 . -8) (undo-tree-id925 . -62) (undo-tree-id926 . -104) (undo-tree-id927 . -8) (undo-tree-id928 . -8) (undo-tree-id929 . -8) (undo-tree-id930 . -8) (undo-tree-id931 . -54) (undo-tree-id932 . -62) (undo-tree-id933 . -62) (undo-tree-id934 . -62) (undo-tree-id935 . -62) (undo-tree-id936 . -105) 3953) nil (25820 35281 200087 75000) 0 nil])
([nil nil ((3894 . 3900) (#("/" 0 1 (face font-lock-doc-face fontified t)) . -3894) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (#("/" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -3895) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -3896) (undo-tree-id392 . -1) (undo-tree-id393 . -1) 3897 (3892 . 3897) (3891 . 3892)) ((#("	" 0 1 (fontified nil)) . 3891) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (#("//// " 0 2 (face font-lock-comment-delimiter-face fontified nil) 2 3 (face font-lock-doc-face fontified nil) 3 4 (face font-lock-comment-delimiter-face fontified nil) 4 5 (face font-lock-comment-delimiter-face fontified nil)) . 3892) (undo-tree-id419 . -4) (undo-tree-id420 . -4) (3894 . 3897) (#(" South" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 6 (face font-lock-comment-face fontified t)) . 3894)) (25820 35203 416005 464000) 0 nil])
([nil nil ((#("            }
        }
" 0 23 (fontified t) 23 24 (fontified t)) . 4761) (undo-tree-id709 . -22) (undo-tree-id710 . -8) (undo-tree-id711 . -22) (undo-tree-id712 . -23) (undo-tree-id713 . -24) (undo-tree-id714 . -24) (undo-tree-id715 . -24) (undo-tree-id716 . -24) (undo-tree-id717 . -24) (undo-tree-id718 . -24) (undo-tree-id719 . -24) (undo-tree-id720 . -24) (undo-tree-id721 . -24) (undo-tree-id722 . -24) (undo-tree-id723 . -24) (undo-tree-id724 . -24) (undo-tree-id725 . -24) (undo-tree-id726 . -24) (undo-tree-id727 . -24) (undo-tree-id728 . -24) (undo-tree-id729 . -24) (undo-tree-id730 . -24) (undo-tree-id731 . -24) (undo-tree-id732 . -24) (undo-tree-id733 . -24) (undo-tree-id734 . -24) (undo-tree-id735 . -24) (undo-tree-id736 . -24) (undo-tree-id737 . -24) (undo-tree-id738 . -24) (undo-tree-id739 . -24) (undo-tree-id740 . -24) (undo-tree-id741 . -24) (undo-tree-id742 . -24) (undo-tree-id743 . -24) (undo-tree-id744 . -24) (undo-tree-id745 . -24) (undo-tree-id746 . -24) (undo-tree-id747 . -24) (undo-tree-id748 . -24) (undo-tree-id749 . -24) (undo-tree-id750 . -24) (undo-tree-id751 . -24) (undo-tree-id752 . -24) (undo-tree-id753 . -24) (undo-tree-id754 . -24) (undo-tree-id755 . -24) (undo-tree-id756 . -24) (undo-tree-id757 . -24) (undo-tree-id758 . -24) (undo-tree-id759 . -24) (undo-tree-id760 . -24) (undo-tree-id761 . -24) (undo-tree-id762 . -24) (undo-tree-id763 . -24) (undo-tree-id764 . -24) (undo-tree-id765 . -24) (undo-tree-id766 . -24) (undo-tree-id767 . -24) (undo-tree-id768 . -24) (undo-tree-id769 . -24) (undo-tree-id770 . -24) (undo-tree-id771 . -24) (undo-tree-id772 . -24) (undo-tree-id773 . -24) (undo-tree-id774 . -24) (undo-tree-id775 . -24) (undo-tree-id776 . -24) (undo-tree-id777 . -24) (undo-tree-id778 . -24) (undo-tree-id779 . -24) (undo-tree-id780 . -24) (undo-tree-id781 . -24) (undo-tree-id782 . -24) (undo-tree-id783 . -24) (undo-tree-id784 . -24) (undo-tree-id785 . -24) (undo-tree-id786 . -24) (undo-tree-id787 . -24) (undo-tree-id788 . -24) (undo-tree-id789 . -24) (undo-tree-id790 . -24) (undo-tree-id791 . -24) (undo-tree-id792 . -24) (undo-tree-id793 . -24) (undo-tree-id794 . -24) (undo-tree-id795 . -24) (undo-tree-id796 . -24) (undo-tree-id797 . -24) (undo-tree-id798 . -24) (undo-tree-id799 . -24) (undo-tree-id800 . -24) (undo-tree-id801 . -24) (undo-tree-id802 . -24) (undo-tree-id803 . -24) (undo-tree-id804 . -24) (undo-tree-id805 . -24) (undo-tree-id806 . -24) (undo-tree-id807 . -24) (undo-tree-id808 . -24) (undo-tree-id809 . -24) (undo-tree-id810 . -24) (undo-tree-id811 . -24) (undo-tree-id812 . -24) (undo-tree-id813 . -24) (undo-tree-id814 . -24) (undo-tree-id815 . -24) (undo-tree-id816 . -24) (undo-tree-id817 . -24) (undo-tree-id818 . -24) (undo-tree-id819 . -24) (undo-tree-id820 . -24) (undo-tree-id821 . -24) (undo-tree-id822 . -24) (undo-tree-id823 . -24) (undo-tree-id824 . -24) (undo-tree-id825 . -24) (undo-tree-id826 . -24) (undo-tree-id827 . -24) (undo-tree-id828 . -24) (undo-tree-id829 . -24) (undo-tree-id830 . -24) (undo-tree-id831 . -24) (undo-tree-id832 . -24) (undo-tree-id833 . -24) (undo-tree-id834 . -24) (undo-tree-id835 . -24) (undo-tree-id836 . -24) (undo-tree-id837 . -24) (undo-tree-id838 . -24) (undo-tree-id839 . -24) (undo-tree-id840 . -24) (undo-tree-id841 . -24) (undo-tree-id842 . -24) (undo-tree-id843 . -24) (undo-tree-id844 . -24) (undo-tree-id845 . -24) (undo-tree-id846 . -24) (undo-tree-id847 . -24) (undo-tree-id848 . -24) (undo-tree-id849 . -24) (undo-tree-id850 . -24) (undo-tree-id851 . -24) (undo-tree-id852 . -24) (undo-tree-id853 . -24) (undo-tree-id854 . -24) (undo-tree-id855 . -24) (undo-tree-id856 . -24) (undo-tree-id857 . -24) (undo-tree-id858 . -24) (undo-tree-id859 . -24) (undo-tree-id860 . -24) (undo-tree-id861 . -24) (undo-tree-id862 . -24) (undo-tree-id863 . -24) (undo-tree-id864 . -24) (undo-tree-id865 . -24) (undo-tree-id866 . -24) (undo-tree-id867 . -24) (undo-tree-id868 . -24) (undo-tree-id869 . -24) (undo-tree-id870 . -24) (undo-tree-id871 . -24) (undo-tree-id872 . -24) (undo-tree-id873 . -24) (undo-tree-id874 . -24) (undo-tree-id875 . -24) (undo-tree-id876 . -24) (undo-tree-id877 . -24) (undo-tree-id878 . -24) (undo-tree-id879 . -24) (undo-tree-id880 . -24) (undo-tree-id881 . -24) (undo-tree-id882 . -24) (undo-tree-id883 . -24) (undo-tree-id884 . -24) (undo-tree-id885 . -24) (undo-tree-id886 . -24) (undo-tree-id887 . -24) (undo-tree-id888 . -24) (undo-tree-id889 . -24) (undo-tree-id890 . -24) (undo-tree-id891 . -24) (undo-tree-id892 . -24) (undo-tree-id893 . -24) (undo-tree-id894 . -24) (undo-tree-id895 . -24) (undo-tree-id896 . -24) (undo-tree-id897 . -24) (undo-tree-id898 . -24) (undo-tree-id899 . -24) (undo-tree-id900 . -24) (undo-tree-id901 . -24) (undo-tree-id902 . -24) (undo-tree-id903 . -24) (undo-tree-id904 . -24) (undo-tree-id905 . -24) (undo-tree-id906 . -24) (undo-tree-id907 . -24) (undo-tree-id908 . -24) (undo-tree-id909 . -24) (undo-tree-id910 . -24) (undo-tree-id911 . -24) (undo-tree-id912 . -8) (undo-tree-id913 . -8) (undo-tree-id914 . -8) (undo-tree-id915 . -8) (undo-tree-id916 . -14) (undo-tree-id917 . -22) (undo-tree-id918 . -24) (undo-tree-id919 . -22) (undo-tree-id920 . -22) (undo-tree-id921 . -22) (undo-tree-id922 . -24) 4783) nil (25820 35281 200071 361000) 0 nil])
([nil nil ((#("        for (col_i, cell) in row.iter().enumerate() {
            if cell.walls[0] {
" 0 7 (fontified t) 7 8 (fontified t rear-nonsticky t) 8 11 (face font-lock-keyword-face fontified t) 11 26 (fontified t) 26 28 (face font-lock-keyword-face fontified t) 28 66 (fontified t) 66 68 (face font-lock-keyword-face fontified t) 68 85 (fontified t)) . 3901) (undo-tree-id360 . -69) (undo-tree-id361 . -15) (undo-tree-id362 . -69) (undo-tree-id363 . -84) (undo-tree-id364 . -8) (undo-tree-id365 . -8) (undo-tree-id366 . -62) (undo-tree-id367 . -62) (undo-tree-id368 . -62) (undo-tree-id369 . -62) (undo-tree-id370 . -8) (undo-tree-id371 . -8) (undo-tree-id372 . -15) (undo-tree-id373 . -15) (undo-tree-id374 . -15) (undo-tree-id375 . -15) (undo-tree-id376 . -15) (undo-tree-id377 . -15) (undo-tree-id378 . -54) (undo-tree-id379 . -69) (undo-tree-id380 . -69) (undo-tree-id381 . -69) (undo-tree-id382 . -69) (undo-tree-id383 . -85) 3970) ((3901 . 3986)) (25820 35202 968453 332000) 0 nil])
([nil nil ((#("                " 0 16 (fontified nil)) . -4405) (undo-tree-id671 . -8) (undo-tree-id672 . -8) (4400 . 4405) (#("                    " 0 20 (fontified nil)) . -4327) (undo-tree-id673 . -8) (undo-tree-id674 . -8) (4325 . 4327) (#("                    " 0 20 (fontified nil)) . -4307) (undo-tree-id675 . -8) (undo-tree-id676 . -8) (4305 . 4307) (#("                    " 0 20 (fontified nil)) . -4302) (undo-tree-id677 . -8) (undo-tree-id678 . -8) (4300 . 4302) (#("                        " 0 24 (fontified nil)) . -4288) (undo-tree-id679 . -8) (undo-tree-id680 . -8) (4282 . 4288) (#("                        " 0 24 (fontified nil)) . -4279) (undo-tree-id681 . -8) (undo-tree-id682 . -8) (4273 . 4279) (#("                            " 0 28 (fontified nil)) . -4212) (undo-tree-id683 . -8) (undo-tree-id684 . -8) (4209 . 4212) (#("                            " 0 28 (fontified nil)) . -4204) (undo-tree-id685 . -8) (undo-tree-id686 . -8) (4201 . 4204) (#("                            " 0 28 (fontified nil)) . -4141) (undo-tree-id687 . -8) (undo-tree-id688 . -8) (4138 . 4141) (#("                        " 0 24 (fontified nil)) . -4106) (undo-tree-id689 . -8) (undo-tree-id690 . -8) (4100 . 4106) (#("                        " 0 24 (fontified nil)) . -4041) (undo-tree-id691 . -8) (undo-tree-id692 . -8) (4035 . 4041) (#("                        " 0 24 (fontified nil)) . -4030) (undo-tree-id693 . -8) (undo-tree-id694 . -8) (4024 . 4030) (#("                            " 0 28 (fontified nil)) . -4012) (undo-tree-id695 . -8) (undo-tree-id696 . -8) (4009 . 4012) (#("                            " 0 28 (fontified nil)) . -3996) (undo-tree-id697 . -8) (undo-tree-id698 . -8) (undo-tree-id699 . -8) (undo-tree-id700 . -8) (3993 . 3996) (#("                            " 0 28 (fontified nil)) . -3981) (undo-tree-id701 . -8) (undo-tree-id702 . -8) (3978 . 3981) (#("                        " 0 24 (fontified nil)) . -3933) (undo-tree-id703 . -8) (undo-tree-id704 . -8) (3927 . 3933) (#("                    " 0 20 (fontified nil)) . -3915) (undo-tree-id705 . -8) (undo-tree-id706 . -8) (3913 . 3915) (#("                " 0 16 (fontified nil)) . -3896) (undo-tree-id707 . -8) (undo-tree-id708 . -8) (3891 . 3896)) nil (25820 35281 199728 880000) 0 nil])
([nil nil ((#("            }
        }
" 0 23 (fontified t) 23 24 (fontified t)) . 4783) (undo-tree-id346 . -23) (undo-tree-id347 . -12) (undo-tree-id348 . -23) (undo-tree-id349 . -23) (undo-tree-id350 . -12) (undo-tree-id351 . -12) (undo-tree-id352 . -12) (undo-tree-id353 . -12) (undo-tree-id354 . -14) (undo-tree-id355 . -23) (undo-tree-id356 . -23) (undo-tree-id357 . -23) (undo-tree-id358 . -23) (undo-tree-id359 . -24) 4806) ((4783 . 4807)) (25820 35202 601511 838000) 0 nil])
([nil nil ((#("	    " 0 5 (fontified nil)) . -4403) (undo-tree-id633 . -5) (undo-tree-id634 . -5) (4402 . 4403) (#("		" 0 2 (fontified nil)) . -4329) (undo-tree-id635 . -2) (undo-tree-id636 . -2) (4324 . 4329) (#("		" 0 2 (fontified nil)) . -4306) (undo-tree-id637 . -2) (undo-tree-id638 . -2) (4301 . 4306) (#("		" 0 2 (fontified nil)) . -4298) (undo-tree-id639 . -2) (undo-tree-id640 . -2) (4293 . 4298) (#("		    " 0 6 (fontified nil)) . -4281) (undo-tree-id641 . -6) (undo-tree-id642 . -6) (4279 . 4281) (#("		    " 0 6 (fontified nil)) . -4276) (undo-tree-id643 . -6) (undo-tree-id644 . -6) (4274 . 4276) (#("			" 0 3 (fontified nil)) . -4213) (undo-tree-id645 . -3) (undo-tree-id646 . -3) (4207 . 4213) (#("			" 0 3 (fontified nil)) . -4202) (undo-tree-id647 . -3) (undo-tree-id648 . -3) (4196 . 4202) (#("			" 0 3 (fontified nil)) . -4136) (undo-tree-id649 . -3) (undo-tree-id650 . -3) (4130 . 4136) (#("		    " 0 6 (fontified nil)) . -4098) (undo-tree-id651 . -6) (undo-tree-id652 . -6) (4096 . 4098) (#("		    " 0 6 (fontified nil)) . -4037) (undo-tree-id653 . -6) (undo-tree-id654 . -6) (4035 . 4037) (#("		    " 0 6 (fontified nil)) . -4030) (undo-tree-id655 . -6) (undo-tree-id656 . -6) (4028 . 4030) (#("			" 0 3 (fontified nil)) . -4016) (undo-tree-id657 . -3) (undo-tree-id658 . -3) (4010 . 4016) (#("			" 0 3 (fontified nil)) . -3997) (undo-tree-id659 . -3) (undo-tree-id660 . -3) (undo-tree-id661 . -3) (undo-tree-id662 . -3) (3991 . 3997) (#("			" 0 3 (fontified nil)) . -3979) (undo-tree-id663 . -3) (undo-tree-id664 . -3) (3973 . 3979) (#("		    " 0 6 (fontified nil)) . -3928) (undo-tree-id665 . -6) (undo-tree-id666 . -6) (3926 . 3928) (#("		" 0 2 (fontified nil)) . -3914) (undo-tree-id667 . -2) (undo-tree-id668 . -2) (3909 . 3914) (#("	    " 0 5 (fontified nil)) . -3892) (undo-tree-id669 . -5) (undo-tree-id670 . -5) (3891 . 3892) 4400) nil (25820 35281 199697 574000) 0 nil])
([nil nil ((#("                " 0 16 (fontified nil)) . -4427) (undo-tree-id219 . -9) (undo-tree-id220 . -9) (undo-tree-id221 . -15) (undo-tree-id222 . -15) (undo-tree-id223 . -9) (undo-tree-id224 . -9) (undo-tree-id225 . -9) (undo-tree-id226 . -9) (4422 . 4427) (#("                    " 0 20 (fontified nil)) . -4349) (undo-tree-id227 . -15) (undo-tree-id228 . -15) (undo-tree-id229 . -9) (undo-tree-id230 . -9) (4347 . 4349) (#("                    " 0 20 (fontified nil)) . -4329) (undo-tree-id231 . -15) (undo-tree-id232 . -15) (undo-tree-id233 . -9) (undo-tree-id234 . -9) (4327 . 4329) (#("                    " 0 20 (fontified nil)) . -4324) (undo-tree-id235 . -15) (undo-tree-id236 . -15) (undo-tree-id237 . -9) (undo-tree-id238 . -9) (4322 . 4324) (#("                        " 0 24 (fontified nil)) . -4310) (undo-tree-id239 . -15) (undo-tree-id240 . -15) (undo-tree-id241 . -9) (undo-tree-id242 . -9) (4304 . 4310) (#("                        " 0 24 (fontified nil)) . -4301) (undo-tree-id243 . -15) (undo-tree-id244 . -15) (undo-tree-id245 . -9) (undo-tree-id246 . -9) (4295 . 4301) (#("                            " 0 28 (fontified nil)) . -4234) (undo-tree-id247 . -15) (undo-tree-id248 . -15) (undo-tree-id249 . -9) (undo-tree-id250 . -9) (4231 . 4234) (#("                            " 0 28 (fontified nil)) . -4226) (undo-tree-id251 . -8) (undo-tree-id252 . -8) (undo-tree-id253 . -15) (undo-tree-id254 . -15) (undo-tree-id255 . -9) (undo-tree-id256 . -9) (4223 . 4226) (#("                            " 0 28 (fontified nil)) . -4151) (undo-tree-id257 . -8) (undo-tree-id258 . -8) (undo-tree-id259 . -8) (undo-tree-id260 . -8) (undo-tree-id261 . -8) (undo-tree-id262 . -8) (undo-tree-id263 . -15) (undo-tree-id264 . -15) (undo-tree-id265 . -9) (undo-tree-id266 . -9) (undo-tree-id267 . -8) (4148 . 4151) (#("                        " 0 24 (fontified nil)) . -4116) (undo-tree-id268 . -8) (undo-tree-id269 . -8) (undo-tree-id270 . -8) (undo-tree-id271 . -8) (undo-tree-id272 . -15) (undo-tree-id273 . -15) (undo-tree-id274 . -9) (undo-tree-id275 . -9) (4110 . 4116) (#("                        " 0 24 (fontified nil)) . -4051) (undo-tree-id276 . -8) (undo-tree-id277 . -8) (undo-tree-id278 . -8) (undo-tree-id279 . -8) (undo-tree-id280 . -15) (undo-tree-id281 . -15) (undo-tree-id282 . -9) (undo-tree-id283 . -9) (4045 . 4051) (#("                        " 0 24 (fontified nil)) . -4040) (undo-tree-id284 . -8) (undo-tree-id285 . -8) (undo-tree-id286 . -8) (undo-tree-id287 . -8) (undo-tree-id288 . -15) (undo-tree-id289 . -15) (undo-tree-id290 . -9) (undo-tree-id291 . -9) (4034 . 4040) (#("                            " 0 28 (fontified nil)) . -4022) (undo-tree-id292 . -8) (undo-tree-id293 . -8) (undo-tree-id294 . -8) (undo-tree-id295 . -8) (undo-tree-id296 . -15) (undo-tree-id297 . -15) (undo-tree-id298 . -9) (undo-tree-id299 . -9) (4019 . 4022) (#("                            " 0 28 (fontified nil)) . -4006) (undo-tree-id300 . -8) (undo-tree-id301 . -8) (undo-tree-id302 . -8) (undo-tree-id303 . -8) (undo-tree-id304 . -15) (undo-tree-id305 . -15) (undo-tree-id306 . -9) (undo-tree-id307 . -9) (4003 . 4006) (#("                            " 0 28 (fontified nil)) . -3991) (undo-tree-id308 . -8) (undo-tree-id309 . -8) (undo-tree-id310 . -8) (undo-tree-id311 . -8) (undo-tree-id312 . -15) (undo-tree-id313 . -15) (undo-tree-id314 . -9) (undo-tree-id315 . -9) (3988 . 3991) (#("                        " 0 24 (fontified nil)) . -3943) (undo-tree-id316 . -8) (undo-tree-id317 . -8) (undo-tree-id318 . -8) (undo-tree-id319 . -8) (undo-tree-id320 . -15) (undo-tree-id321 . -15) (undo-tree-id322 . -15) (undo-tree-id323 . -15) (undo-tree-id324 . -9) (undo-tree-id325 . -9) (3937 . 3943) (#("                    " 0 20 (fontified nil)) . -3925) (undo-tree-id326 . -8) (undo-tree-id327 . -8) (undo-tree-id328 . -8) (undo-tree-id329 . -8) (undo-tree-id330 . -15) (undo-tree-id331 . -15) (undo-tree-id332 . -9) (undo-tree-id333 . -9) (3923 . 3925) (#("                " 0 16 (fontified nil)) . -3906) (undo-tree-id334 . -9) (undo-tree-id335 . -8) (undo-tree-id336 . -8) (undo-tree-id337 . -8) (undo-tree-id338 . -8) (undo-tree-id339 . -15) (undo-tree-id340 . -15) (undo-tree-id341 . -9) (undo-tree-id342 . -9) (undo-tree-id343 . -9) (undo-tree-id344 . -9) (undo-tree-id345 . -9) (3901 . 3906) 3910) ((#("	    " 0 5 (fontified nil)) . 3901) (undo-tree-id416 . -2) (3906 . 3922) (#("		" 0 2 (fontified nil)) . 3923) (3925 . 3945) (#("		    " 0 6 (fontified nil)) . 3937) (3943 . 3967) (#("			" 0 3 (fontified nil)) . 3988) (3991 . 4019) (#("			" 0 3 (fontified nil)) . 4003) (4006 . 4034) (#("			" 0 3 (fontified nil)) . 4019) (4022 . 4050) (#("		    " 0 6 (fontified nil)) . 4034) (4040 . 4064) (#("		    " 0 6 (fontified nil)) . 4045) (4051 . 4075) (#("		    " 0 6 (fontified nil)) . 4110) (4116 . 4140) (#("			" 0 3 (fontified nil)) . 4148) (4151 . 4179) (#("			" 0 3 (fontified nil)) . 4223) (4226 . 4254) (#("			" 0 3 (fontified nil)) . 4231) (4234 . 4262) (#("		    " 0 6 (fontified nil)) . 4295) (4301 . 4325) (#("		    " 0 6 (fontified nil)) . 4304) (4310 . 4334) (#("		" 0 2 (fontified nil)) . 4322) (4324 . 4344) (#("		" 0 2 (fontified nil)) . 4327) (4329 . 4349) (#("		" 0 2 (fontified nil)) . 4347) (4349 . 4369) (#("	    " 0 5 (fontified nil)) . 4422) (4427 . 4443)) (25820 35202 73656 354000) 0 nil])
([nil nil ((3892 . 3900) (3890 . 3892) 3878) nil (25820 35281 199435 419000) 0 nil])
([nil nil ((#("	    " 0 5 (fontified nil)) . -4425) (undo-tree-id96 . -5) (undo-tree-id97 . -5) (undo-tree-id98 . -5) (undo-tree-id99 . -5) (undo-tree-id100 . -5) (undo-tree-id101 . -5) (4424 . 4425) (#("		" 0 2 (fontified nil)) . -4351) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (4346 . 4351) (#("		" 0 2 (fontified nil)) . -4328) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (4323 . 4328) (#("		" 0 2 (fontified nil)) . -4320) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (4315 . 4320) (#("		    " 0 6 (fontified nil)) . -4303) (undo-tree-id114 . -6) (undo-tree-id115 . -6) (undo-tree-id116 . -6) (undo-tree-id117 . -6) (4301 . 4303) (#("		    " 0 6 (fontified nil)) . -4298) (undo-tree-id118 . -6) (undo-tree-id119 . -6) (undo-tree-id120 . -6) (undo-tree-id121 . -6) (4296 . 4298) (#("			" 0 3 (fontified nil)) . -4235) (undo-tree-id122 . -3) (undo-tree-id123 . -3) (undo-tree-id124 . -3) (undo-tree-id125 . -3) (4229 . 4235) (#("			" 0 3 (fontified nil)) . -4224) (undo-tree-id126 . -3) (undo-tree-id127 . -3) (undo-tree-id128 . -3) (undo-tree-id129 . -3) (undo-tree-id130 . -3) (undo-tree-id131 . -3) (4218 . 4224) (#("			" 0 3 (fontified nil)) . -4146) (undo-tree-id132 . -3) (undo-tree-id133 . -3) (undo-tree-id134 . -3) (undo-tree-id135 . -3) (undo-tree-id136 . -3) (undo-tree-id137 . -3) (undo-tree-id138 . -3) (undo-tree-id139 . -3) (undo-tree-id140 . -3) (undo-tree-id141 . -3) (undo-tree-id142 . -3) (4140 . 4146) (#("		    " 0 6 (fontified nil)) . -4108) (undo-tree-id143 . -6) (undo-tree-id144 . -6) (undo-tree-id145 . -6) (undo-tree-id146 . -6) (undo-tree-id147 . -6) (undo-tree-id148 . -6) (undo-tree-id149 . -6) (undo-tree-id150 . -6) (4106 . 4108) (#("		    " 0 6 (fontified nil)) . -4047) (undo-tree-id151 . -6) (undo-tree-id152 . -6) (undo-tree-id153 . -6) (undo-tree-id154 . -6) (undo-tree-id155 . -6) (undo-tree-id156 . -6) (undo-tree-id157 . -6) (undo-tree-id158 . -6) (4045 . 4047) (#("		    " 0 6 (fontified nil)) . -4040) (undo-tree-id159 . -6) (undo-tree-id160 . -6) (undo-tree-id161 . -6) (undo-tree-id162 . -6) (undo-tree-id163 . -6) (undo-tree-id164 . -6) (undo-tree-id165 . -6) (undo-tree-id166 . -6) (4038 . 4040) (#("			" 0 3 (fontified nil)) . -4026) (undo-tree-id167 . -3) (undo-tree-id168 . -3) (undo-tree-id169 . -3) (undo-tree-id170 . -3) (undo-tree-id171 . -3) (undo-tree-id172 . -3) (undo-tree-id173 . -3) (undo-tree-id174 . -3) (4020 . 4026) (#("			" 0 3 (fontified nil)) . -4007) (undo-tree-id175 . -3) (undo-tree-id176 . -3) (undo-tree-id177 . -3) (undo-tree-id178 . -3) (undo-tree-id179 . -3) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -3) (4001 . 4007) (#("			" 0 3 (fontified nil)) . -3989) (undo-tree-id183 . -3) (undo-tree-id184 . -3) (undo-tree-id185 . -3) (undo-tree-id186 . -3) (undo-tree-id187 . -3) (undo-tree-id188 . -3) (undo-tree-id189 . -3) (undo-tree-id190 . -3) (3983 . 3989) (#("		    " 0 6 (fontified nil)) . -3938) (undo-tree-id191 . -6) (undo-tree-id192 . -6) (undo-tree-id193 . -6) (undo-tree-id194 . -6) (undo-tree-id195 . -6) (undo-tree-id196 . -6) (undo-tree-id197 . -6) (undo-tree-id198 . -6) (undo-tree-id199 . -6) (undo-tree-id200 . -6) (3936 . 3938) (#("		" 0 2 (fontified nil)) . -3924) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (3919 . 3924) (#("	    " 0 5 (fontified nil)) . -3902) (undo-tree-id209 . -2) (undo-tree-id210 . -5) (undo-tree-id211 . -5) (undo-tree-id212 . -5) (undo-tree-id213 . -5) (undo-tree-id214 . -5) (undo-tree-id215 . -5) (undo-tree-id216 . -5) (undo-tree-id217 . -5) (undo-tree-id218 . -2) (3901 . 3902) 4422) ((#("	" 0 1 (fontified nil)) . 3901) (3902 . 3907) (#("	    " 0 1 (fontified nil) 1 5 (fontified nil)) . 3919) (3924 . 3926) (#("		" 0 2 (fontified nil)) . 3936) (3938 . 3944) (#("		    " 0 2 (fontified nil) 2 6 (fontified nil)) . 3983) (3989 . 3992) (#("		    " 0 2 (fontified nil) 2 6 (fontified nil)) . 4001) (4007 . 4010) (#("		    " 0 2 (fontified nil) 2 6 (fontified nil)) . 4020) (4026 . 4029) (#("		" 0 2 (fontified nil)) . 4038) (4040 . 4046) (#("		" 0 2 (fontified nil)) . 4045) (4047 . 4053) (#("		" 0 2 (fontified nil)) . 4106) (4108 . 4114) (#("		    " 0 2 (fontified nil) 2 6 (fontified nil)) . 4140) (4146 . 4149) (#("		    " 0 2 (fontified nil) 2 6 (fontified nil)) . 4218) (4224 . 4227) (#("		    " 0 2 (fontified nil) 2 6 (fontified nil)) . 4229) (undo-tree-id406 . -6) (undo-tree-id407 . -6) (undo-tree-id408 . -6) (undo-tree-id409 . -6) (undo-tree-id410 . -6) (undo-tree-id411 . -6) (undo-tree-id412 . -6) (undo-tree-id413 . -6) (undo-tree-id414 . -6) (undo-tree-id415 . -6) (4235 . 4238) (#("		" 0 2 (fontified nil)) . 4296) (4298 . 4304) (#("		" 0 2 (fontified nil)) . 4301) (4303 . 4309) (#("	    " 0 1 (fontified nil) 1 5 (fontified nil)) . 4315) (4320 . 4322) (#("	    " 0 1 (fontified nil) 1 5 (fontified nil)) . 4323) (4328 . 4330) (#("	    " 0 1 (fontified nil) 1 5 (fontified nil)) . 4346) (4351 . 4353) (#("	" 0 1 (fontified nil)) . 4424) (4425 . 4430)) (25820 35201 625755 889000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3999) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (#("*" 0 1 (fontified t)) . -4000) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (#(" " 0 1 (fontified t)) . -4001) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) 4002 (3999 . 4002)) nil (25820 35281 199433 894000) 0 nil])
([nil nil ((3891 . 3899) (#("	" 0 1 (fontified t)) . 3891) (3901 . 3909) (#("	" 0 1 (fontified t)) . 3901) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (3919 . 3927) (#("	" 0 1 (fontified t)) . 3919) (3936 . 3952) (#("		" 0 2 (fontified t)) . 3936) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (3983 . 3989) (#("		" 0 2 (fontified t)) . 3983) (3989 . 3999) (4001 . 4006) (#("		" 0 2 (fontified t)) . 4001) (4007 . 4018) (4020 . 4025) (#("		" 0 2 (fontified t)) . 4020) (4026 . 4037) (4038 . 4054) (#("		" 0 2 (fontified t)) . 4038) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (4045 . 4061) (#("		" 0 2 (fontified t)) . 4045) (undo-tree-id66 . -2) (undo-tree-id67 . -2) (undo-tree-id68 . -2) (undo-tree-id69 . -2) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (4106 . 4122) (#("		" 0 2 (fontified t)) . 4106) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (4140 . 4143) (#("		" 0 2 (fontified t)) . 4140) (4146 . 4159) (4218 . 4220) (#("		" 0 2 (fontified t)) . 4218) (4224 . 4238) (4229 . 4231) (#("		" 0 2 (fontified t)) . 4229) (4235 . 4249) (4296 . 4312) (#("		" 0 2 (fontified t)) . 4296) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (4301 . 4317) (#("		" 0 2 (fontified t)) . 4301) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (4315 . 4316) (#("	" 0 1 (fontified t)) . 4315) (4320 . 4327) (4323 . 4324) (#("	" 0 1 (fontified t)) . 4323) (4328 . 4335) (#("	" 0 1 (fontified t)) . 4346) (4351 . 4359) (4424 . 4432) (#("	" 0 1 (fontified t)) . 4424) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) 4045) ((4424 . 4425) (#("        " 0 8 (fontified t)) . 4424) (#("        " 0 8 (fontified nil)) . 4351) (4346 . 4347) (#("       " 0 7 (fontified nil)) . 4328) (4323 . 4324) (#(" " 0 1 (fontified t)) . 4323) (#("       " 0 7 (fontified nil)) . 4320) (4315 . 4316) (#(" " 0 1 (fontified t)) . 4315) (4301 . 4303) (#("                " 0 16 (fontified t)) . 4301) (4296 . 4298) (#("                " 0 16 (fontified t)) . 4296) (#("              " 0 14 (fontified nil)) . 4235) (undo-tree-id394 . -14) (undo-tree-id395 . -14) (undo-tree-id396 . -14) (undo-tree-id397 . -14) (undo-tree-id398 . -14) (undo-tree-id399 . -14) (undo-tree-id400 . -14) (undo-tree-id401 . -14) (undo-tree-id402 . -14) (undo-tree-id403 . -14) (undo-tree-id404 . -14) (undo-tree-id405 . -14) (4229 . 4231) (#("  " 0 2 (fontified t)) . 4229) (#("              " 0 14 (fontified nil)) . 4224) (4218 . 4220) (#("  " 0 2 (fontified t)) . 4218) (#("             " 0 13 (fontified nil)) . 4146) (4140 . 4142) (#("   " 0 3 (fontified t)) . 4140) (4106 . 4108) (#("                " 0 16 (fontified t)) . 4106) (4045 . 4047) (#("                " 0 16 (fontified t)) . 4045) (4038 . 4040) (#("                " 0 16 (fontified t)) . 4038) (#("           " 0 11 (fontified nil)) . 4026) (4020 . 4022) (#("     " 0 5 (fontified t)) . 4020) (#("           " 0 11 (fontified nil)) . 4007) (4001 . 4003) (#("     " 0 5 (fontified t)) . 4001) (#("          " 0 10 (fontified nil)) . 3989) (3983 . 3985) (#("      " 0 6 (fontified t)) . 3983) (3936 . 3938) (#("                " 0 16 (fontified t)) . 3936) (3919 . 3920) (#("        " 0 8 (fontified t)) . 3919) (3901 . 3902) (#("        " 0 8 (fontified t)) . 3901) (3891 . 3892) (#("        " 0 8 (fontified t)) . 3891) (t 25820 35190 35223 972000)) (25820 35190 35401 579000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . 1574) (undo-tree-id619 . -1) (undo-tree-id620 . -1)) nil (25820 35281 199425 606000) 0 nil])
nil
([nil nil ((#("3" 0 1 (fontified t)) . 1577) (undo-tree-id617 . -1) (undo-tree-id618 . -1)) nil (25820 35281 199423 381000) 0 nil])
([nil nil ((3997 . 4001)) nil (25820 35281 199421 104000) 0 nil])
([nil nil ((3889 . 3897) (#("	" 0 1 (fontified t)) . 3889) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (3899 . 3907) (#("	" 0 1 (fontified t)) . 3899) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (3917 . 3925) (#("	" 0 1 (fontified t)) . 3917) (3934 . 3950) (#("		" 0 2 (fontified t)) . 3934) (undo-tree-id599 . -2) (undo-tree-id600 . -2) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (3981 . 3987) (#("		" 0 2 (fontified t)) . 3981) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (3987 . 3997) (4003 . 4008) (#("		" 0 2 (fontified t)) . 4003) (4009 . 4020) (4022 . 4027) (#("		" 0 2 (fontified t)) . 4022) (4028 . 4039) (4040 . 4056) (#("		" 0 2 (fontified t)) . 4040) (undo-tree-id605 . -2) (undo-tree-id606 . -2) (4047 . 4063) (#("		" 0 2 (fontified t)) . 4047) (undo-tree-id607 . -2) (undo-tree-id608 . -2) (4108 . 4124) (#("		" 0 2 (fontified t)) . 4108) (undo-tree-id609 . -2) (undo-tree-id610 . -2) (4142 . 4145) (#("		" 0 2 (fontified t)) . 4142) (4148 . 4161) (4208 . 4210) (#("		" 0 2 (fontified t)) . 4208) (4214 . 4228) (4219 . 4221) (#("		" 0 2 (fontified t)) . 4219) (4225 . 4239) (4286 . 4302) (#("		" 0 2 (fontified t)) . 4286) (undo-tree-id611 . -2) (undo-tree-id612 . -2) (4291 . 4307) (#("		" 0 2 (fontified t)) . 4291) (undo-tree-id613 . -2) (undo-tree-id614 . -2) (4305 . 4306) (#("	" 0 1 (fontified t)) . 4305) (4310 . 4317) (4313 . 4314) (#("	" 0 1 (fontified t)) . 4313) (4318 . 4325) (#("	" 0 1 (fontified t)) . 4336) (4341 . 4349) (4414 . 4422) (#("	" 0 1 (fontified t)) . 4414) (undo-tree-id615 . -1) (undo-tree-id616 . -1) 4000) nil (25820 35281 199414 768000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 4281) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (t 25820 35281 198557 747000)) nil (25820 35303 82196 390000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 4281) (undo-tree-id958 . -1) (undo-tree-id959 . -1)) nil (25820 35303 82194 301000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . 4281) (undo-tree-id956 . -1) (undo-tree-id957 . -1)) nil (25820 35303 82192 256000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 4281) (undo-tree-id954 . -1) (undo-tree-id955 . -1)) nil (25820 35303 82190 65000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 4281) (undo-tree-id952 . -1) (undo-tree-id953 . -1)) nil (25820 35303 82188 112000) 0 nil])
([nil nil ((4281 . 4282)) nil (25820 35303 82186 299000) 0 nil])
([nil nil ((4382 . 4383)) nil (25820 35303 82185 789000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 4383) (undo-tree-id949 . 1) (undo-tree-id950 . -1) (undo-tree-id951 . -1)) nil (25820 35303 82185 98000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 4383) (undo-tree-id946 . 1) (undo-tree-id947 . -1) (undo-tree-id948 . -1)) nil (25820 35303 82182 402000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 4383) (undo-tree-id943 . 1) (undo-tree-id944 . -1) (undo-tree-id945 . -1)) nil (25820 35303 82179 221000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 4383) (undo-tree-id940 . 1) (undo-tree-id941 . -1) (undo-tree-id942 . -1)) nil (25820 35303 82175 427000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 4383) (undo-tree-id937 . 1) (undo-tree-id938 . -1) (undo-tree-id939 . -1)) nil (25820 35303 82169 288000) 0 nil])
([nil nil ((4050 . 4052) (t 25820 35303 81891 181000)) nil (25820 35312 759089 921000) 0 nil])
([nil nil ((#(" * 2.0" 0 6 (fontified t)) . 4046) (undo-tree-id962 . -5) (undo-tree-id963 . -5) (undo-tree-id964 . -5) (undo-tree-id965 . -5) (undo-tree-id966 . -5) (undo-tree-id967 . -5) (undo-tree-id968 . -5) (undo-tree-id969 . -5) (undo-tree-id970 . -5) (undo-tree-id971 . -5) (undo-tree-id972 . -5) (undo-tree-id973 . -5) (undo-tree-id974 . -5) (undo-tree-id975 . -5) (undo-tree-id976 . -5) (undo-tree-id977 . -6) (t 25820 35312 758557 891000)) nil (25820 35337 475569 549000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4116 . 4117) (nil fontified nil 4111 . 4117) (4111 . 4117) 4110) nil (25820 35337 475546 354000) 0 nil])
([nil nil ((4283 . 4284) (#("1" 0 1 (fontified t)) . 4283) (undo-tree-id979 . -1) (t 25820 35337 475224 671000)) nil (25820 35359 301311 954000) 0 nil])
([nil nil ((4384 . 4385) (#("1" 0 1 (fontified t)) . 4384) (undo-tree-id978 . -1)) nil (25820 35359 301306 625000) 0 nil])
([nil nil ((4384 . 4385) (#("0" 0 1 (fontified t)) . 4384) (undo-tree-id980 . -1) (t 25820 35359 301891 444000)) nil (25820 35394 866397 390000) 0 nil])
([nil nil ((4384 . 4387) (#("1" 0 1 (fontified t)) . -4384) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) 4385 (t 25820 35394 865224 945000)) nil (25820 35407 333552 32000) 0 nil])
([nil nil ((4386 . 4388) (#("5" 0 1 (fontified t)) . -4386) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) 4387 (t 25820 35407 331891 673000)) nil (25820 35448 181311 75000) 0 nil])
([nil nil ((#("0 as f32 * (room_size + wall_width) - wall_width / 2.0" 0 1 (fontified t) 1 2 (fontified t) 2 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 8 (face font-lock-type-face fontified t) 8 50 (fontified t) 50 54 (fontified t)) . 4283) (undo-tree-id989 . -53) (undo-tree-id990 . -3) (undo-tree-id991 . -3) (undo-tree-id992 . -54) (t 25820 35448 181891 862000)) nil (25820 35479 158529 529000) 0 nil])
([nil nil ((4283 . 4286)) nil (25820 35479 158516 559000) 0 nil])
([nil nil ((4294 . 4300) (4284 . 4294) (#("wall" 0 4 (fontified t)) . -4284) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -2) (undo-tree-id996 . -2) (undo-tree-id997 . -3) (undo-tree-id998 . -3) (undo-tree-id999 . -4) (undo-tree-id1000 . -4) (undo-tree-id1001 . -4) (undo-tree-id1002 . -4) (undo-tree-id1003 . -4) (undo-tree-id1004 . -4) (undo-tree-id1005 . -4) (undo-tree-id1006 . -4) (undo-tree-id1007 . -4) (undo-tree-id1008 . -4) (undo-tree-id1009 . -4) (undo-tree-id1010 . -4) (undo-tree-id1011 . -4) (undo-tree-id1012 . -4) (undo-tree-id1013 . -4) (undo-tree-id1014 . -4) 4288 (4283 . 4288) (#("0" 0 1 (fontified t)) . -4283) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (#("." 0 1 (fontified t)) . -4284) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (#("0" 0 1 (fontified t)) . -4285) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (#(" " 0 1 (fontified t)) . -4286) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) 4287 (4286 . 4287) (t 25820 35479 158558 673000)) nil (25820 35497 16170 788000) 0 nil])
([nil nil ((apply -6 4469 4602 undo--wrap-and-run-primitive-undo 4469 4602 ((4514 . 4517) (4481 . 4484) 4584))) nil (25820 35519 300272 365000) 0 nil])
([nil nil ((4351 . 4352) (t 25820 35519 301892 192000)) nil (25820 35621 942009 686000) 0 nil])
([nil nil ((4372 . 4376) (#("i" 0 1 (fontified t)) . -4372) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (4364 . 4373) (#("+" 0 1 (fontified t)) . -4364) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) 4365 (4353 . 4365) (#("i" 0 1 (fontified t)) . -4353) (undo-tree-id1077 . -1) (4349 . 4354) (#("i" 0 1 (fontified t)) . -4349) (undo-tree-id1078 . -1) (4347 . 4350) (#("0" 0 1 (fontified t)) . -4347) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (#("." 0 1 (fontified t)) . -4348) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (#("4" 0 1 (fontified t)) . -4349) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (#("5" 0 1 (fontified t)) . -4350) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) 4351) nil (25820 35621 942005 762000) 0 nil])
([nil nil ((4347 . 4348)) nil (25820 35621 941961 246000) 0 nil])
([nil nil ((4412 . 4436) 4347) nil (25820 35621 941957 589000) 0 nil])
([nil nil ((4360 . 4365) (4358 . 4360) (t 25820 35621 941892 684000)) nil (25820 35634 611791 673000) 0 nil])
([nil nil ((4370 . 4371) (t 25820 35634 611892 750000)) nil (25820 35667 891045 987000) 0 nil])
([nil nil ((4385 . 4389) (t 25820 35667 891892 910000)) nil (25820 35696 130558 10000) 0 nil])
([nil nil ((4390 . 4391) (4389 . 4390)) nil (25820 35696 130554 346000) 0 nil])
([nil nil ((1574 . 1575) (#("2" 0 1 (fontified t)) . 1574) (undo-tree-id1127 . -1) (t 25820 35696 131893 48000)) nil (25820 35722 547419 803000) 0 nil])
([nil nil ((4121 . 4133) (#("i" 0 1 (fontified t)) . -4121) (undo-tree-id1128 . -1) (4117 . 4122) (#("i" 0 1 (fontified t)) . -4117) (undo-tree-id1129 . -1) (4113 . 4118) (#(" " 0 1 (fontified t)) . -4113) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (#("2" 0 1 (fontified t)) . -4114) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (#("." 0 1 (fontified t)) . -4115) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (#("0" 0 1 (fontified t rear-nonsticky t)) . -4116) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) 4117 (t 25820 35722 548559 839000)) nil (25820 35752 579335 752000) 0 nil])
([nil nil ((4384 . 4393) (#("room" 0 4 (fontified t)) . -4384) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -2) (undo-tree-id1184 . -2) (undo-tree-id1185 . -3) (undo-tree-id1186 . -3) (undo-tree-id1187 . -4) (undo-tree-id1188 . -4) (undo-tree-id1189 . -4) (undo-tree-id1190 . -4) (undo-tree-id1191 . -4) (undo-tree-id1192 . -4) 4388 (4384 . 4388) (#("0" 0 1 (fontified t)) . -4384) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (#("." 0 1 (fontified t)) . -4385) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (#("2" 0 1 (fontified t)) . -4386) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (#("5" 0 1 (fontified t)) . -4387) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) 4388 (t 25820 35752 578559 982000)) nil (25820 35884 183620 130000) 0 nil])
([nil nil ((4420 . 4444) 4392) nil (25820 35884 183583 309000) 0 nil])
([nil nil ((4135 . 4144) (#("room" 0 4 (fontified t)) . -4135) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -2) (undo-tree-id1223 . -2) (undo-tree-id1224 . -3) (undo-tree-id1225 . -3) (undo-tree-id1226 . -4) (undo-tree-id1227 . -4) (undo-tree-id1228 . -4) (undo-tree-id1229 . -4) (undo-tree-id1230 . -4) (undo-tree-id1231 . -4) 4139 (4132 . 4139) (t 25820 35884 185227 290000)) nil (25820 35907 331030 609000) 0 nil])
([nil nil ((4406 . 4412) (#(" " 0 1 (fontified t)) . -4406) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) 4407 (4406 . 4407) (t 25820 35907 331894 61000)) nil (25820 35928 414897 671000) 0 nil])
([nil nil ((3018 . 3019) (#("2" 0 1 (fontified t)) . 3018) (undo-tree-id1235 . -1) (t 25820 35928 415227 501000)) nil (25820 35989 320611 360000) 0 nil])
([nil nil ((3079 . 3080) (#("3" 0 1 (fontified t)) . 3079) (undo-tree-id1236 . -1) (t 25820 35989 321894 441000)) nil (25820 36000 115461 832000) 0 nil])
([nil nil ((3079 . 3080) (#("2" 0 1 (fontified t)) . 3079) (undo-tree-id1238 . -1) (t 25820 36000 115227 829000)) nil (25820 36018 260467 638000) 0 nil])
([nil nil ((3081 . 3082) (#("0" 0 1 (fontified t)) . 3081) (undo-tree-id1237 . -1)) nil (25820 36018 260462 948000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . 4101) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (t 25820 36018 261894 591000)) nil (25820 36085 590288 656000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 4101) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1)) nil (25820 36085 590286 584000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 4101) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1)) nil (25820 36085 590284 432000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 4101) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1)) nil (25820 36085 590282 375000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 4101) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1)) nil (25820 36085 590280 524000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 4101) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1)) nil (25820 36085 590278 610000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 4101) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1)) nil (25820 36085 590276 650000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 4101) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1)) nil (25820 36085 590274 601000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 4101) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1)) nil (25820 36085 590271 328000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 4101) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1)) nil (25820 36085 590269 69000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4101) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1)) nil (25820 36085 590266 197000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 4101) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1)) nil (25820 36085 590263 386000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4101) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1)) nil (25820 36085 590257 932000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 4101) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (t 25820 36085 591894 916000)) nil (25820 36118 837718 781000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 4119) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1)) nil (25820 36118 837715 407000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4119) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1)) nil (25820 36118 837713 510000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 4119) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1)) nil (25820 36118 837711 669000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 4119) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1)) nil (25820 36118 837709 743000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 4119) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1)) nil (25820 36118 837707 844000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 4119) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1)) nil (25820 36118 837705 846000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 4119) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1)) nil (25820 36118 837703 601000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 4119) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1)) nil (25820 36118 837701 142000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 4119) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1)) nil (25820 36118 837698 901000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . 4119) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1)) nil (25820 36118 837696 904000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 4119) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1)) nil (25820 36118 837694 880000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 4119) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1)) nil (25820 36118 837692 753000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4118) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1)) nil (25820 36118 837689 420000) 0 nil])
([nil nil ((4101 . 4113)) nil (25820 36118 837671 671000) 0 nil])
([nil nil ((4112 . 4132)) nil (25820 36118 837667 973000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 4111) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (t 25820 36118 838561 740000)) nil (25820 36125 172931 318000) 0 nil])
([nil nil ((4111 . 4112) (#("                    " 0 19 (fontified nil) 19 20 (fontified nil)) . 4111) (#("
" 0 1 (fontified t)) . -4111) (undo-tree-id1312 . -1) 4110) nil (25820 36125 172925 39000) 0 nil])
([nil nil ((4111 . 4113)) nil (25820 36125 172913 888000) 0 nil])
([nil nil ((#("-wall_width / 2.0" 0 1 (fontified t) 1 17 (fontified t)) . 4297) (undo-tree-id1423 . -16) (undo-tree-id1424 . -17) (t 25820 36125 171895 108000)) nil (25820 36615 435162 246000) 0 nil])
([nil nil ((4297 . 4300)) nil (25820 36615 435160 365000) 0 nil])
([nil nil ((#("                    (grid.width as f32 * room_size / 2.0 - wall_width / 2.0) as f32
" 0 2 (fontified t) 2 6 (fontified t) 6 32 (fontified t) 32 34 (face font-lock-keyword-face fontified t) 34 35 (fontified t) 35 38 (face font-lock-type-face fontified t) 38 41 (fontified t) 41 50 (fontified t) 50 76 (fontified t) 76 77 (fontified t) 77 79 (face font-lock-keyword-face fontified t) 79 80 (fontified t) 80 83 (face font-lock-type-face fontified t) 83 84 (fontified t)) . 4327) (undo-tree-id1405 . -31) (undo-tree-id1406 . 44) (undo-tree-id1407 . -39) (undo-tree-id1408 . -31) (undo-tree-id1409 . -83) (undo-tree-id1410 . -84) (undo-tree-id1411 . -84) (undo-tree-id1412 . -22) (undo-tree-id1413 . -22) (undo-tree-id1414 . -20) (undo-tree-id1415 . -20) (undo-tree-id1416 . -20) (undo-tree-id1417 . -20) (undo-tree-id1418 . -20) (undo-tree-id1419 . -20) (undo-tree-id1420 . -20) (undo-tree-id1421 . -20) (undo-tree-id1422 . -84) 4347) nil (25820 36615 435159 29000) 0 nil])
([nil nil ((#("                        * (room_size + wall_width)
" 0 23 (fontified t) 23 50 (fontified t) 50 51 (fontified t)) . 4327) (undo-tree-id1394 . 51) (undo-tree-id1395 . -50) (undo-tree-id1396 . -51) (undo-tree-id1397 . -51) (undo-tree-id1398 . -20) (undo-tree-id1399 . -20) (undo-tree-id1400 . -20) (undo-tree-id1401 . -20) (undo-tree-id1402 . -20) (undo-tree-id1403 . -20) (undo-tree-id1404 . -51) 4347) nil (25820 36615 435144 665000) 0 nil])
([nil nil ((#("    + (room_size / 2.0)" 0 3 (fontified t) 3 13 (fontified t) 13 23 (fontified t)) . 4347) (undo-tree-id1392 . -22) (undo-tree-id1393 . -23)) nil (25820 36615 435134 857000) 0 nil])
([nil nil ((4347 . 4350)) nil (25820 36615 435132 580000) 0 nil])
([nil nil ((#("wall_depth * grid.width as f32" 0 12 (fontified t) 12 13 (fontified t) 13 24 (fontified t) 24 26 (face font-lock-keyword-face fontified t) 26 27 (fontified t) 27 30 (face font-lock-type-face fontified t)) . 4101) (undo-tree-id1377 . -29) (undo-tree-id1378 . -11) (undo-tree-id1379 . -11) (undo-tree-id1380 . -11) (undo-tree-id1381 . -11) (undo-tree-id1382 . -11) (undo-tree-id1383 . -11) (undo-tree-id1384 . -11) (undo-tree-id1385 . -11) (undo-tree-id1386 . -11) (undo-tree-id1387 . -11) (undo-tree-id1388 . -11) (undo-tree-id1389 . -2) (undo-tree-id1390 . -2) (undo-tree-id1391 . -30)) nil (25820 36615 435131 42000) 0 nil])
([nil nil ((4101 . 4102)) nil (25820 36615 435119 318000) 0 nil])
([nil nil ((4101 . 4111) (#("0" 0 1 (fontified t)) . -4101) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) 4102) nil (25820 36615 435116 841000) 0 nil])
([nil nil ((#("
                    " 0 1 (fontified t) 1 4 (fontified t) 4 8 (fontified t) 8 21 (fontified t)) . 4256) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -21) (undo-tree-id1324 . -21) (undo-tree-id1325 . -21) (undo-tree-id1326 . -21) (undo-tree-id1327 . -21) (undo-tree-id1328 . -21) (undo-tree-id1329 . -21) (undo-tree-id1330 . -21) (#("
                  " 0 1 (fontified t) 1 3 (fontified t) 3 7 (fontified t) 7 19 (fontified t)) . 4281) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (#(" " 0 1 (fontified t)) . 4301) (#("
                  " 0 1 (fontified t) 1 19 (fontified t)) . 4306) (undo-tree-id1337 . -1) (undo-tree-id1338 . 18) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (#(" " 0 1 (fontified t)) . 4326) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (#(",
                " 0 2 (fontified t) 2 18 (fontified t)) . 4330) (undo-tree-id1371 . -2) (undo-tree-id1372 . -2) 4110) nil (25820 36615 434656 591000) 0 nil])
([nil nil ((1574 . 1575) (#("8" 0 1 (fontified t)) . 1574) (undo-tree-id1425 . -1) (t 25820 36615 435230 787000)) nil (25820 36660 462389 414000) 0 nil])
([nil nil ((4326 . 4344) (#("S" 0 1 (face font-lock-type-face fontified t)) . -4326) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) 4327 (4320 . 4327) (4314 . 4320) (t 25820 36660 465231 3000) 4313) nil (25820 36819 207262 266000) 0 nil])
([nil nil ((4315 . 4323) (#("	" 0 1 (fontified t)) . 4315) 4343) nil (25820 36819 207243 501000) 0 nil])
([nil nil ((#("        // South
        commands.spawn((
            PbrBundle {
                mesh: meshes.add(Mesh::from(shape::Box::new(
                    wall_width,
                    wall_height,
                    wall_depth,
                ))),
                material: materials.add(Color::rgb(1.0, 0.0, 0.0).into()),
                transform: Transform::from_xyz(0.0, 0.0, 0.0),
                ..default()
            },
            Name::new(\"South Wall\"),
            // RigidBody::Fixed,
            // Collider::cuboid(wall_width / 2.0, wall_height / 2.0, wall_depth / 2.0),
        ));
" 0 8 (fontified t) 8 11 (face font-lock-comment-delimiter-face fontified t) 11 16 (face font-lock-comment-face fontified t) 16 17 (face font-lock-comment-face fontified t) 17 25 (fontified t) 25 42 (fontified t) 42 50 (fontified t) 50 54 (fontified t) 54 63 (face font-lock-type-face fontified t) 63 66 (fontified t) 66 82 (fontified t) 82 86 (face font-lock-variable-name-face fontified t) 86 99 (fontified t) 99 103 (face font-lock-type-face fontified t) 103 110 (fontified t) 110 115 (face font-lock-constant-face fontified t) 115 117 (fontified t) 117 120 (face font-lock-type-face fontified t) 120 127 (fontified t) 127 133 (fontified t) 133 137 (fontified t) 137 147 (fontified t) 147 159 (fontified t) 159 164 (fontified t) 164 168 (fontified t) 168 179 (fontified t) 179 192 (fontified t) 192 197 (fontified t) 197 201 (fontified t) 201 222 (fontified t) 222 224 (fontified t) 224 240 (fontified t) 240 245 (fontified t) 245 261 (fontified t) 261 269 (face font-lock-variable-name-face fontified t) 269 285 (fontified t) 285 290 (face font-lock-type-face fontified t) 290 320 (fontified t) 320 336 (fontified t) 336 345 (face font-lock-variable-name-face fontified t) 345 347 (fontified t) 347 356 (face font-lock-type-face fontified t) 356 367 (fontified t) 367 370 (fontified t) 370 371 (fontified t) 371 372 (fontified t) 372 376 (fontified t) 376 380 (fontified t) 380 382 (fontified t) 382 383 (fontified t) 383 399 (fontified t) 399 411 (fontified t) 411 412 (fontified t) 412 413 (fontified t) 413 416 (fontified t) 416 423 (fontified t) 423 425 (fontified t) 425 426 (fontified t) 426 434 (fontified t) 434 438 (fontified t) 438 442 (face font-lock-type-face fontified t) 442 448 (fontified t) 448 460 (face font-lock-string-face fontified t) 460 462 (fontified t) 462 463 (fontified t) 463 464 (fontified t) 464 468 (fontified t) 468 475 (fontified t) 475 478 (face font-lock-comment-delimiter-face fontified t) 478 487 (face font-lock-comment-face fontified t) 487 489 (face font-lock-comment-face fontified t) 489 494 (face font-lock-comment-face fontified t) 494 496 (face font-lock-comment-face fontified t) 496 500 (fontified t) 500 508 (fontified t) 508 511 (face font-lock-comment-delimiter-face fontified t) 511 513 (face font-lock-comment-face fontified t) 513 519 (face font-lock-comment-face fontified t) 519 584 (face font-lock-comment-face fontified t) 584 592 (fontified t) 592 596 (fontified t)) . 3889) (undo-tree-id1488 . -594) (undo-tree-id1489 . -594) (undo-tree-id1490 . -10) (undo-tree-id1491 . -595) (undo-tree-id1492 . 134) (undo-tree-id1493 . -596) (undo-tree-id1494 . -596) (undo-tree-id1495 . -212) (undo-tree-id1496 . -596) (undo-tree-id1497 . -596) (undo-tree-id1498 . -584) (undo-tree-id1499 . -212) (undo-tree-id1500 . -444) (undo-tree-id1501 . -444) (undo-tree-id1502 . -444) (undo-tree-id1503 . -444) (undo-tree-id1504 . -461) (undo-tree-id1505 . -461) (undo-tree-id1506 . -461) (undo-tree-id1507 . -461) (undo-tree-id1508 . -461) (undo-tree-id1509 . -461) (undo-tree-id1510 . -461) (undo-tree-id1511 . -461) (undo-tree-id1512 . -461) (undo-tree-id1513 . -461) (undo-tree-id1514 . -461) (undo-tree-id1515 . -461) (undo-tree-id1516 . -461) (undo-tree-id1517 . -461) (undo-tree-id1518 . -461) (undo-tree-id1519 . -494) (undo-tree-id1520 . -494) (undo-tree-id1521 . -531) (undo-tree-id1522 . -531) (undo-tree-id1523 . -594) (undo-tree-id1524 . -594) (undo-tree-id1525 . -596) (undo-tree-id1526 . -596) (undo-tree-id1527 . -596) (undo-tree-id1528 . -596) (undo-tree-id1529 . -594) (undo-tree-id1530 . -594) (undo-tree-id1531 . -531) (undo-tree-id1532 . -531) (undo-tree-id1533 . -494) (undo-tree-id1534 . -494) (undo-tree-id1535 . -461) (undo-tree-id1536 . -461) (undo-tree-id1537 . -424) (undo-tree-id1538 . -424) (undo-tree-id1539 . -409) (undo-tree-id1540 . -409) (undo-tree-id1541 . -355) (undo-tree-id1542 . -355) (undo-tree-id1543 . -280) (undo-tree-id1544 . -280) (undo-tree-id1545 . -243) (undo-tree-id1546 . -243) (undo-tree-id1547 . -222) (undo-tree-id1548 . -222) (undo-tree-id1549 . -190) (undo-tree-id1550 . -190) (undo-tree-id1551 . -157) (undo-tree-id1552 . -157) (undo-tree-id1553 . -101) (undo-tree-id1554 . -101) (undo-tree-id1555 . -64) (undo-tree-id1556 . -64) (undo-tree-id1557 . -40) (undo-tree-id1558 . -40) (undo-tree-id1559 . -15) (undo-tree-id1560 . -15) (undo-tree-id1561 . -15) (undo-tree-id1562 . -15) (undo-tree-id1563 . -40) (undo-tree-id1564 . -40) (undo-tree-id1565 . -64) (undo-tree-id1566 . -64) (undo-tree-id1567 . -101) (undo-tree-id1568 . -101) (undo-tree-id1569 . -157) (undo-tree-id1570 . -157) (undo-tree-id1571 . -190) (undo-tree-id1572 . -190) (undo-tree-id1573 . -222) (undo-tree-id1574 . -222) (undo-tree-id1575 . -243) (undo-tree-id1576 . -243) (undo-tree-id1577 . -280) (undo-tree-id1578 . -280) (undo-tree-id1579 . -355) (undo-tree-id1580 . -355) (undo-tree-id1581 . -409) (undo-tree-id1582 . -409) (undo-tree-id1583 . -424) (undo-tree-id1584 . -424) (undo-tree-id1585 . -461) (undo-tree-id1586 . -461) (undo-tree-id1587 . -424) (undo-tree-id1588 . -424) (undo-tree-id1589 . -461) (undo-tree-id1590 . -461) (undo-tree-id1591 . -494) (undo-tree-id1592 . -494) (undo-tree-id1593 . -531) (undo-tree-id1594 . -531) (undo-tree-id1595 . -594) (undo-tree-id1596 . -594) (undo-tree-id1597 . -596) (undo-tree-id1598 . -596) (undo-tree-id1599 . -594) (undo-tree-id1600 . -594) (undo-tree-id1601 . -594) (undo-tree-id1602 . -594) (undo-tree-id1603 . -506) (undo-tree-id1604 . -506) (undo-tree-id1605 . -473) (undo-tree-id1606 . -473) (undo-tree-id1607 . -436) (undo-tree-id1608 . -436) (undo-tree-id1609 . -421) (undo-tree-id1610 . -421) (undo-tree-id1611 . -393) (undo-tree-id1612 . -393) (undo-tree-id1613 . -330) (undo-tree-id1614 . -330) (undo-tree-id1615 . -255) (undo-tree-id1616 . -255) (undo-tree-id1617 . -234) (undo-tree-id1618 . -234) (undo-tree-id1619 . -202) (undo-tree-id1620 . -202) (undo-tree-id1621 . -169) (undo-tree-id1622 . -169) (undo-tree-id1623 . -137) (undo-tree-id1624 . -137) (undo-tree-id1625 . -76) (undo-tree-id1626 . -76) (undo-tree-id1627 . -52) (undo-tree-id1628 . -52) (undo-tree-id1629 . -27) (undo-tree-id1630 . -27) (undo-tree-id1631 . -10) (undo-tree-id1632 . -461) (undo-tree-id1633 . -10) (undo-tree-id1634 . -10) (undo-tree-id1635 . -10) (undo-tree-id1636 . -596) 3899 (t 25820 36819 208565 42000)) nil (25820 36923 352910 135000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2945 . 2946) (#("
" 0 1 (fontified nil)) . -3533) (2937 . 3534) 2908) nil (25820 36923 352465 77000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -3354) (undo-tree-id1448 . -8) (undo-tree-id1449 . -8) (undo-tree-id1450 . -8) (undo-tree-id1451 . -8) (undo-tree-id1452 . -8) (undo-tree-id1453 . -8) (3350 . 3354) (#("            " 0 4 (fontified nil) 4 12 (fontified nil)) . -3274) (undo-tree-id1454 . -8) (undo-tree-id1455 . -8) (3273 . 3274) (#("            " 0 1 (fontified nil) 1 5 (fontified nil) 5 12 (fontified nil)) . -3252) (undo-tree-id1456 . -8) (undo-tree-id1457 . -8) (3251 . 3252) (#("            " 0 8 (fontified nil) 8 12 (fontified nil)) . -3226) (undo-tree-id1458 . -8) (undo-tree-id1459 . -8) (3225 . 3226) (#("            " 0 1 (fontified nil) 1 2 (fontified nil) 2 5 (fontified nil) 5 12 (fontified nil)) . -3222) (undo-tree-id1460 . -8) (undo-tree-id1461 . -8) (3221 . 3222) (#("                " 0 16 (fontified nil)) . -3209) (undo-tree-id1462 . -8) (undo-tree-id1463 . -8) (3204 . 3209) (#("                " 0 16 (fontified nil)) . -3157) (undo-tree-id1464 . -8) (undo-tree-id1465 . -8) (3152 . 3157) (#("                " 0 16 (fontified nil)) . -3093) (undo-tree-id1466 . -8) (undo-tree-id1467 . -8) (3088 . 3093) (#("                " 0 16 (fontified nil)) . -3083) (undo-tree-id1468 . -8) (undo-tree-id1469 . -8) (3078 . 3083) (#("                    " 0 5 (fontified nil) 5 9 (fontified nil) 9 20 (fontified nil)) . -3066) (undo-tree-id1470 . -8) (undo-tree-id1471 . -8) (3064 . 3066) (#("                    " 0 5 (fontified nil) 5 9 (fontified nil) 9 20 (fontified nil)) . -3051) (undo-tree-id1472 . -8) (undo-tree-id1473 . -8) (3049 . 3051) (#("                    " 0 6 (fontified nil) 6 10 (fontified nil) 10 20 (fontified nil)) . -3037) (undo-tree-id1474 . -8) (undo-tree-id1475 . -8) (3035 . 3037) (#("                " 0 16 (fontified nil)) . -2990) (undo-tree-id1476 . -8) (undo-tree-id1477 . -8) (2985 . 2990) (#("            " 0 8 (fontified nil) 8 12 (fontified nil)) . -2973) (undo-tree-id1478 . -8) (undo-tree-id1479 . -8) (2972 . 2973) (#("        " 0 8 (fontified nil)) . -2955) (undo-tree-id1480 . -8) (undo-tree-id1481 . -8) (2951 . 2955) (#("        " 0 7 (fontified nil) 7 8 (rear-nonsticky t fontified nil)) . -2942) (undo-tree-id1482 . -8) (undo-tree-id1483 . -8) (undo-tree-id1484 . -8) (undo-tree-id1485 . -8) (undo-tree-id1486 . -8) (undo-tree-id1487 . -8) (2938 . 2942) 3530) nil (25820 36923 352460 585000) 0 nil])
([nil nil ((2972 . 2980) (#("	" 0 1 (fontified t)) . 2972) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (2985 . 2993) (#("	" 0 1 (fontified t)) . 2985) (3035 . 3051) (#("		" 0 2 (fontified t)) . 3035) (undo-tree-id1434 . -2) (undo-tree-id1435 . -2) (3049 . 3065) (#("		" 0 2 (fontified t)) . 3049) (undo-tree-id1436 . -2) (undo-tree-id1437 . -2) (3064 . 3080) (#("		" 0 2 (fontified t)) . 3064) (undo-tree-id1438 . -2) (undo-tree-id1439 . -2) (3078 . 3086) (#("	" 0 1 (fontified t)) . 3078) (3088 . 3096) (#("	" 0 1 (fontified t)) . 3088) (3152 . 3160) (#("	" 0 1 (fontified t)) . 3152) (3204 . 3212) (#("	" 0 1 (fontified t)) . 3204) (3221 . 3229) (#("	" 0 1 (fontified t)) . 3221) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (3225 . 3233) (#("	" 0 1 (fontified t)) . 3225) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (3251 . 3259) (#("	" 0 1 (fontified t)) . 3251) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (3273 . 3281) (#("	" 0 1 (fontified t)) . 3273) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) 2946) nil (25820 36923 352423 255000) 0 nil])
([nil nil ((#("        let room_size = 1.0;
        let wall_width = 0.1;
        let wall_height = 1.5;
        let wall_depth = room_size + wall_width * 2.0;
" 0 8 (fontified t) 8 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 21 (face font-lock-variable-name-face fontified t) 21 24 (fontified t) 24 25 (fontified t) 25 29 (fontified t) 29 37 (fontified t) 37 40 (face font-lock-keyword-face fontified t) 40 41 (fontified t) 41 51 (face font-lock-variable-name-face fontified t) 51 59 (fontified t) 59 67 (fontified t) 67 70 (face font-lock-keyword-face fontified t) 70 71 (fontified t) 71 82 (face font-lock-variable-name-face fontified t) 82 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 90 (fontified t) 90 98 (fontified t) 98 101 (face font-lock-keyword-face fontified t) 101 102 (fontified t) 102 112 (face font-lock-variable-name-face fontified t) 112 145 (fontified t)) . 3526) (undo-tree-id1659 . -90) (undo-tree-id1660 . -8) (undo-tree-id1661 . -90) (undo-tree-id1662 . -144) (undo-tree-id1663 . -8) (undo-tree-id1664 . -8) (undo-tree-id1665 . -8) (undo-tree-id1666 . -8) (undo-tree-id1667 . -8) (undo-tree-id1668 . -145) (undo-tree-id1669 . -145) (undo-tree-id1670 . -145) (undo-tree-id1671 . -145) (undo-tree-id1672 . -90) (undo-tree-id1673 . -90) (undo-tree-id1674 . -90) (undo-tree-id1675 . -90) (undo-tree-id1676 . -90) (undo-tree-id1677 . -145) 3616 (t 25820 36923 355232 211000)) nil (25820 36940 448591 326000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2945 . 2946) (#("
" 0 1 (fontified nil)) . -3082) (2937 . 3083) 2908) nil (25820 36940 448577 184000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -3020) (undo-tree-id1643 . -8) (undo-tree-id1644 . -8) (undo-tree-id1645 . -8) (undo-tree-id1646 . -8) (undo-tree-id1647 . -8) (undo-tree-id1648 . -8) (3016 . 3020) (#("        " 0 8 (fontified nil)) . -2993) (undo-tree-id1649 . -8) (undo-tree-id1650 . -8) (2989 . 2993) (#("        " 0 8 (fontified nil)) . -2967) (undo-tree-id1651 . -8) (undo-tree-id1652 . -8) (2963 . 2967) (#("        " 0 7 (fontified nil) 7 8 (rear-nonsticky t fontified nil)) . -2942) (undo-tree-id1653 . -8) (undo-tree-id1654 . -8) (undo-tree-id1655 . -8) (undo-tree-id1656 . -8) (undo-tree-id1657 . -8) (undo-tree-id1658 . -8) (2938 . 2942) 3036) nil (25820 36940 448574 857000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3067) (undo-tree-id1639 . -4) (undo-tree-id1640 . -4) (undo-tree-id1641 . -4) (undo-tree-id1642 . -4) 3071 (3066 . 3071) 3024) nil (25820 36940 448561 419000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3656) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) 3479) nil (25820 36940 448553 577000) 0 nil])
([nil nil ((3425 . 3426) (3420 . 3425) (3411 . 3420) (#("room" 0 4 (fontified t)) . -3411) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -2) (undo-tree-id1681 . -2) (undo-tree-id1682 . -3) (undo-tree-id1683 . -3) (undo-tree-id1684 . -4) (undo-tree-id1685 . -4) (undo-tree-id1686 . -4) (undo-tree-id1687 . -4) (undo-tree-id1688 . -4) (undo-tree-id1689 . -4) (undo-tree-id1690 . -4) 3415 (3411 . 3415) (#("w" 0 1 (fontified t)) . -3411) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (#("a" 0 1 (fontified t)) . -3412) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (#("l" 0 1 (fontified t)) . -3413) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (#("l" 0 1 (fontified t)) . -3414) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) 3415 (3408 . 3415) (t 25820 36940 451898 951000)) nil (25820 37056 437724 670000) 0 nil])
([nil nil ((3414 . 3419) (#("i" 0 1 (fontified t)) . -3414) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (3413 . 3415) (3405 . 3413) (3396 . 3405) (#("room" 0 4 (fontified t)) . -3396) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -2) (undo-tree-id1744 . -2) (undo-tree-id1745 . -3) (undo-tree-id1746 . -3) (undo-tree-id1747 . -4) (undo-tree-id1748 . -4) (undo-tree-id1749 . -4) (undo-tree-id1750 . -4) (undo-tree-id1751 . -4) (undo-tree-id1752 . -4) 3400 (3395 . 3400) (#("0" 0 1 (fontified t)) . -3395) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (#("." 0 1 (fontified t)) . -3396) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (#("0" 0 1 (fontified t)) . -3397) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) 3398 (t 25820 37056 438566 178000)) nil (25820 37177 576849 8000) 0 nil])
([nil nil ((3422 . 3425) (3419 . 3422)) nil (25820 37177 576821 146000) 0 nil])
([nil nil ((3395 . 3412) (3426 . 3441) (3427 . 3428) (3431 . 3446) (3432 . 3433) (3453 . 3467) 3424) nil (25820 37177 576817 69000) 0 nil])
([nil nil ((3418 . 3424) (#("i" 0 1 (fontified t)) . -3418) (undo-tree-id1767 . -1) (3414 . 3419) (#("i" 0 1 (fontified t)) . -3414) (undo-tree-id1768 . -1) (3412 . 3415) (t 25820 37177 578566 753000)) nil (25820 37204 87008 35000) 0 nil])
([nil nil ((3424 . 3425)) nil (25820 37204 86997 504000) 0 nil])
([nil nil ((3422 . 3429)) nil (25820 37204 86993 286000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . 3412) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (t 25820 37204 88566 888000)) nil (25820 37256 443331 779000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 3412) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1)) nil (25820 37256 443329 722000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3412) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1)) nil (25820 37256 443327 722000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 3412) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1)) nil (25820 37256 443325 891000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 3412) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1)) nil (25820 37256 443324 39000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . 3412) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1)) nil (25820 37256 443321 819000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3412) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1)) nil (25820 37256 443320 43000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 3412) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1)) nil (25820 37256 443318 241000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 3412) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1)) nil (25820 37256 443316 578000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 3412) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1)) nil (25820 37256 443314 726000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3412) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1)) nil (25820 37256 443312 960000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-keyword-face fontified t)) . 3412) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1)) nil (25820 37256 443311 87000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 3412) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1)) nil (25820 37256 443309 202000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3412) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1)) nil (25820 37256 443307 318000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-type-face fontified t)) . 3412) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1)) nil (25820 37256 443305 444000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . 3412) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1)) nil (25820 37256 443302 676000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 3412) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1)) nil (25820 37256 443293 748000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3412) (undo-tree-id2053 . 1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1)) nil (25820 37256 443291 916000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 3412) (undo-tree-id2050 . 1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1)) nil (25820 37256 443289 249000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3412) (undo-tree-id2047 . 1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1)) nil (25820 37256 443286 793000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 3412) (undo-tree-id2044 . 1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1)) nil (25820 37256 443284 472000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 3412) (undo-tree-id2040 . 1) (undo-tree-id2041 . 1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1)) nil (25820 37256 443282 111000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 3412) (undo-tree-id2036 . 1) (undo-tree-id2037 . 1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1)) nil (25820 37256 443279 264000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 3412) (undo-tree-id2032 . 1) (undo-tree-id2033 . 1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1)) nil (25820 37256 443276 286000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 3412) (undo-tree-id2028 . 1) (undo-tree-id2029 . 1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1)) nil (25820 37256 443272 947000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 3412) (undo-tree-id2024 . 1) (undo-tree-id2025 . 1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1)) nil (25820 37256 443269 569000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 3412) (undo-tree-id2020 . 1) (undo-tree-id2021 . 1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1)) nil (25820 37256 443266 293000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3412) (undo-tree-id2016 . 1) (undo-tree-id2017 . 1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1)) nil (25820 37256 443263 25000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . 3412) (undo-tree-id2012 . 1) (undo-tree-id2013 . 1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1)) nil (25820 37256 443259 732000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 3412) (undo-tree-id2008 . 1) (undo-tree-id2009 . 1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1)) nil (25820 37256 443256 646000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3412) (undo-tree-id2004 . 1) (undo-tree-id2005 . 1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1)) nil (25820 37256 443253 461000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . 3412) (undo-tree-id2000 . 1) (undo-tree-id2001 . 1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1)) nil (25820 37256 443250 276000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3412) (undo-tree-id1996 . 1) (undo-tree-id1997 . 1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1)) nil (25820 37256 443247 174000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . 3412) (undo-tree-id1992 . 1) (undo-tree-id1993 . 1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1)) nil (25820 37256 443244 283000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 3412) (undo-tree-id1988 . 1) (undo-tree-id1989 . 1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1)) nil (25820 37256 443241 64000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 3412) (undo-tree-id1984 . 1) (undo-tree-id1985 . 1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1)) nil (25820 37256 443237 383000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 3412) (undo-tree-id1980 . 1) (undo-tree-id1981 . 1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1)) nil (25820 37256 443234 280000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 3412) (undo-tree-id1976 . 1) (undo-tree-id1977 . 1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1)) nil (25820 37256 443230 938000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . 3412) (undo-tree-id1972 . 1) (undo-tree-id1973 . 1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1)) nil (25820 37256 443175 580000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3412) (undo-tree-id1968 . 1) (undo-tree-id1969 . 1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1)) nil (25820 37256 443172 246000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 3412) (undo-tree-id1964 . 1) (undo-tree-id1965 . 1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1)) nil (25820 37256 442840 120000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 3412) (undo-tree-id1960 . 1) (undo-tree-id1961 . 1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1)) nil (25820 37256 442836 809000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 3412) (undo-tree-id1956 . 1) (undo-tree-id1957 . 1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1)) nil (25820 37256 442833 399000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 3412) (undo-tree-id1952 . 1) (undo-tree-id1953 . 1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1)) nil (25820 37256 442830 580000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3412) (undo-tree-id1948 . 1) (undo-tree-id1949 . 1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1)) nil (25820 37256 442827 392000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . 3412) (undo-tree-id1944 . 1) (undo-tree-id1945 . 1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1)) nil (25820 37256 442823 802000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3412) (undo-tree-id1940 . 1) (undo-tree-id1941 . 1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1)) nil (25820 37256 442820 917000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 3412) (undo-tree-id1936 . 1) (undo-tree-id1937 . 1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1)) nil (25820 37256 442817 911000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 3412) (undo-tree-id1932 . 1) (undo-tree-id1933 . 1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1)) nil (25820 37256 442814 913000) 0 nil])
([nil nil ((3412 . 3414)) nil (25820 37256 442811 542000) 0 nil])
([nil nil ((3285 . 3296) (#("i" 0 1 (fontified t)) . -3285) (undo-tree-id1844 . -1) (3281 . 3286) (#("i" 0 1 (fontified t)) . -3281) (undo-tree-id1845 . -1) (3276 . 3282) (3275 . 3276) (3265 . 3275) (#("wall" 0 4 (fontified t)) . -3265) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -2) (undo-tree-id1849 . -2) (undo-tree-id1850 . -3) (undo-tree-id1851 . -3) (undo-tree-id1852 . -4) (undo-tree-id1853 . -4) (undo-tree-id1854 . -4) (undo-tree-id1855 . -4) (undo-tree-id1856 . -4) (undo-tree-id1857 . -4) (undo-tree-id1858 . -4) (undo-tree-id1859 . -4) (undo-tree-id1860 . -4) (undo-tree-id1861 . -4) (undo-tree-id1862 . -4) (undo-tree-id1863 . -4) (undo-tree-id1864 . -4) (undo-tree-id1865 . -4) (undo-tree-id1866 . -4) (undo-tree-id1867 . -4) 3269 (3262 . 3269) (3253 . 3262) (#("room" 0 4 (fontified t)) . -3253) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -2) (undo-tree-id1871 . -2) (undo-tree-id1872 . -3) (undo-tree-id1873 . -3) (undo-tree-id1874 . -4) (undo-tree-id1875 . -4) (undo-tree-id1876 . -4) (undo-tree-id1877 . -4) (undo-tree-id1878 . -4) (undo-tree-id1879 . -4) 3257 (3252 . 3257) (#("w" 0 1 (fontified t)) . -3252) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (#("a" 0 1 (fontified t)) . -3253) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (#("l" 0 1 (fontified t)) . -3254) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (#("l" 0 1 (fontified t)) . -3255) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (#("_" 0 1 (fontified t)) . -3256) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (#("d" 0 1 (fontified t)) . -3257) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (#("e" 0 1 (fontified t)) . -3258) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (#("p" 0 1 (fontified t)) . -3259) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (#("t" 0 1 (fontified t)) . -3260) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (#("h" 0 1 (fontified t)) . -3261) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) 3262) nil (25820 37256 442806 166000) 0 nil])
([nil nil ((#("
                " 0 1 (fontified t) 1 17 (fontified t)) . 3429) (undo-tree-id1769 . -17) (undo-tree-id1770 . -17) (undo-tree-id1771 . -17) (undo-tree-id1772 . -17) (undo-tree-id1773 . -17) (undo-tree-id1774 . -17) (undo-tree-id1775 . -17) (undo-tree-id1776 . -17) (undo-tree-id1777 . -17) (undo-tree-id1778 . -17) (undo-tree-id1779 . -17) (undo-tree-id1780 . -17) (undo-tree-id1781 . -17) (undo-tree-id1782 . -17) (undo-tree-id1783 . -17) (undo-tree-id1784 . -17) (undo-tree-id1785 . -17) (undo-tree-id1786 . -17) (undo-tree-id1787 . -17) (undo-tree-id1788 . -17) (undo-tree-id1789 . -17) (undo-tree-id1790 . -17) (undo-tree-id1791 . -17) (undo-tree-id1792 . -17) (undo-tree-id1793 . -17) (undo-tree-id1794 . -17) (undo-tree-id1795 . -17) (undo-tree-id1796 . -17) (undo-tree-id1797 . -17) (undo-tree-id1798 . -17) (undo-tree-id1799 . -17) (undo-tree-id1800 . -17) (undo-tree-id1801 . -17) (undo-tree-id1802 . -17) (undo-tree-id1803 . -17) (undo-tree-id1804 . -17) (undo-tree-id1805 . -17) (undo-tree-id1806 . -17) (undo-tree-id1807 . -17) (undo-tree-id1808 . -17) (undo-tree-id1809 . -17) (undo-tree-id1810 . -17) (undo-tree-id1811 . -17) (undo-tree-id1812 . -17) (undo-tree-id1813 . -17) (undo-tree-id1814 . -17) (undo-tree-id1815 . -17) (undo-tree-id1816 . -17) (undo-tree-id1817 . -17) (undo-tree-id1818 . -17) (undo-tree-id1819 . -17) (undo-tree-id1820 . -17) (undo-tree-id1821 . -17) (undo-tree-id1822 . -17) (undo-tree-id1823 . -17) (undo-tree-id1824 . -17) (undo-tree-id1825 . -17) (undo-tree-id1826 . -17) (undo-tree-id1827 . -17) (undo-tree-id1828 . -17) (undo-tree-id1829 . -17) (undo-tree-id1830 . -17) (undo-tree-id1831 . -17) (undo-tree-id1832 . -17) (undo-tree-id1833 . -17) (undo-tree-id1834 . -17) (undo-tree-id1835 . -17) (undo-tree-id1836 . -17) (undo-tree-id1837 . -17) (undo-tree-id1838 . -17) (undo-tree-id1839 . -17) (undo-tree-id1840 . -17) (undo-tree-id1841 . -17) (undo-tree-id1842 . -17) (undo-tree-id1843 . -17) (#("
              " 0 1 (fontified t) 1 15 (fontified t)) . 3450) (#(" " 0 1 (fontified t)) . 3466) (#("
              " 0 15 (fontified t)) . 3471) (#(" " 0 1 (fontified t)) . 3487) (#(",
            " 0 14 (fontified t)) . 3509) 3295) nil (25820 37256 442742 876000) 0 nil])
([nil nil ((3443 . 3446) (#("." 0 1 (fontified t)) . -3443) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (#("0" 0 1 (fontified t)) . -3444) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) 3445 (3436 . 3445) (#("i" 0 1 (fontified t)) . -3436) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (3429 . 3437) (#("0" 0 1 (fontified t)) . -3429) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (#("." 0 1 (fontified t)) . -3430) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (#("0" 0 1 (fontified t)) . -3431) (undo-tree-id2122 . 1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) 3432 (t 25820 37256 445233 798000)) nil (25820 37340 198794 634000) 0 nil])
([nil nil ((3252 . 3254) (t 25820 37340 201900 870000)) nil (25820 37584 872136 921000) 0 nil])
([nil nil ((3302 . 3306) (3299 . 3302) 3253) nil (25820 37584 872135 281000) 0 nil])
([nil nil ((3300 . 3316) (#("		" 0 2 (fontified t)) . 3300) (undo-tree-id2127 . -2) (undo-tree-id2128 . -2) 3305) nil (25820 37584 872130 300000) 0 nil])
([nil nil ((apply 6 3568 3675 undo--wrap-and-run-primitive-undo 3568 3675 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3602) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3576) 3681))) nil (25820 37689 114831 273000) 0 nil])
([nil nil ((3656 . 3659) (#("6" 0 1 (fontified t)) . -3656) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (#("." 0 1 (fontified t)) . -3657) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) 3658 (3656 . 3658) (#("w" 0 1 (fontified t)) . -3656) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (#("a" 0 1 (fontified t)) . -3657) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (#("l" 0 1 (fontified t)) . -3658) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (#("l" 0 1 (fontified t)) . -3659) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (#("_" 0 1 (fontified t)) . -3660) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (#("d" 0 1 (fontified t)) . -3661) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (#("e" 0 1 (fontified t)) . -3662) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (#("p" 0 1 (fontified t)) . -3663) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (#("t" 0 1 (fontified t)) . -3664) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (#("h" 0 1 (fontified t)) . -3665) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) 3666) nil (25820 37689 114816 223000) 0 nil])
([nil nil ((3658 . 3659) (#("4" 0 1 (fontified t)) . 3658) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (t 25820 37689 118569 225000)) nil (25820 37823 967305 635000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -3318) (3319 . 3320) 3318) nil (25820 37823 967286 71000) 0 nil])
([nil nil ((3498 . 3499) (3488 . 3498) (#("wall" 0 4 (fontified t)) . -3488) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -2) (undo-tree-id2190 . -2) (undo-tree-id2191 . -3) (undo-tree-id2192 . -3) (undo-tree-id2193 . -4) (undo-tree-id2194 . -4) (undo-tree-id2195 . -4) (undo-tree-id2196 . -4) (undo-tree-id2197 . -4) (undo-tree-id2198 . -4) (undo-tree-id2199 . -4) (undo-tree-id2200 . -4) (undo-tree-id2201 . -4) (undo-tree-id2202 . -4) (undo-tree-id2203 . -4) (undo-tree-id2204 . -4) (undo-tree-id2205 . -4) (undo-tree-id2206 . -4) (undo-tree-id2207 . -4) (undo-tree-id2208 . -4) 3492 (3487 . 3492) (3485 . 3487) (3476 . 3485) (#("room" 0 4 (fontified t)) . -3476) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -2) (undo-tree-id2212 . -2) (undo-tree-id2213 . -3) (undo-tree-id2214 . -3) (undo-tree-id2215 . -4) (undo-tree-id2216 . -4) (undo-tree-id2217 . -4) (undo-tree-id2218 . -4) (undo-tree-id2219 . -4) (undo-tree-id2220 . -4) 3480 (3475 . 3480) (#(" " 0 1 (fontified t)) . -3475) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) 3476 (#("0" 0 1 (fontified t)) . -3476) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (#("." 0 1 (fontified t)) . -3477) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (#("0" 0 1 (fontified t)) . -3478) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (#(" " 0 1 (fontified t)) . -3479) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (#("+" 0 1 (fontified t)) . -3480) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (#(" " 0 1 (fontified t)) . -3481) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (#("r" 0 1 (fontified t)) . -3482) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (#("o" 0 1 (fontified t)) . -3483) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (#("o" 0 1 (fontified t)) . -3484) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (#("m" 0 1 (fontified t)) . -3485) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (#("_" 0 1 (fontified t)) . -3486) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (#("s" 0 1 (fontified t)) . -3487) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (#("i" 0 1 (fontified t)) . -3488) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (#("z" 0 1 (fontified t)) . -3489) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (#("e" 0 1 (fontified t)) . -3490) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (#(" " 0 1 (fontified t)) . -3491) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (#("/" 0 1 (fontified t)) . -3492) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (#(" " 0 1 (fontified t)) . -3493) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (#("2" 0 1 (fontified t)) . -3494) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (#("." 0 1 (fontified t)) . -3495) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (#("0" 0 1 (fontified t)) . -3496) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) 3497 (t 25820 37823 968569 864000)) nil (25820 39078 800152 488000) 0 nil])
([nil nil ((3476 . 3477)) nil (25820 39078 799798 764000) 0 nil])
([nil nil ((3509 . 3513) (#("i" 0 1 (fontified t)) . -3509) (undo-tree-id2185 . -1) (3505 . 3510) (#("i" 0 1 (fontified t)) . -3505) (undo-tree-id2186 . -1) (3500 . 3506)) nil (25820 39078 799797 809000) 0 nil])
([nil nil ((3499 . 3505)) nil (25820 39078 799794 889000) 0 nil])
([nil nil ((3528 . 3538) (#("i" 0 1 (fontified t)) . -3528) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (3519 . 3529)) nil (25820 39078 799793 40000) 0 nil])
([nil nil ((3452 . 3469) (3470 . 3485) (3471 . 3472) (3475 . 3490) (3476 . 3477) (3538 . 3552) 3574) nil (25820 39078 799781 94000) 0 nil])
([nil nil ((3572 . 3575) (#("u" 0 1 (fontified t)) . -3572) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (#("s" 0 1 (fontified t)) . -3573) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (#("i" 0 1 (fontified t)) . -3574) (undo-tree-id2414 . -1) 3575 (3574 . 3575) (#("i" 0 1 (fontified t)) . -3574) (undo-tree-id2415 . -1) (3568 . 3575) (t 25820 39078 801909 232000)) nil (25820 39089 391835 552000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . 3549) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (t 25820 39089 395242 612000)) nil (25820 39119 723252 481000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3549) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1)) nil (25820 39119 723250 96000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 3549) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1)) nil (25820 39119 723248 66000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 3549) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1)) nil (25820 39119 723246 73000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 3549) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1)) nil (25820 39119 723243 564000) 0 nil])
([nil nil ((3570 . 3576)) nil (25820 39119 723240 664000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3548) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) 3575) nil (25820 39119 723237 134000) 0 nil])
([nil nil ((#(" + wall_width / 2.0" 0 19 (fontified t)) . 3575) (undo-tree-id2435 . -1) (undo-tree-id2436 . -18) (undo-tree-id2437 . 19) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -19) (t 25820 39119 725242 749000)) nil (25820 39142 90338 312000) 0 nil])
([nil nil ((3584 . 3594) (#("i" 0 1 (fontified t)) . -3584) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (3575 . 3585) (t 25820 39142 91909 522000)) nil (25820 39169 594542 13000) 0 nil])
([nil nil ((3356 . 3361) (#("i" 0 1 (fontified t)) . -3356) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (3347 . 3357) (#(")" 0 1 (fontified t)) . -3347) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (#("+" 0 1 (fontified t)) . -3348) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (#(" " 0 1 (fontified t)) . -3349) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) 3350 (3346 . 3350) (3335 . 3346) (#("i" 0 1 (fontified t)) . -3335) (undo-tree-id2469 . -1) (3331 . 3336) (#("i" 0 1 (fontified t)) . -3331) (undo-tree-id2470 . -1) 3332 (3325 . 3332) (#("+" 0 1 (fontified t)) . -3325) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) 3326 (3325 . 3326) (3315 . 3325) (#("wall" 0 4 (fontified t)) . -3315) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -2) (undo-tree-id2476 . -2) (undo-tree-id2477 . -3) (undo-tree-id2478 . -3) (undo-tree-id2479 . -4) (undo-tree-id2480 . -4) (undo-tree-id2481 . -4) (undo-tree-id2482 . -4) (undo-tree-id2483 . -4) (undo-tree-id2484 . -4) (undo-tree-id2485 . -4) (undo-tree-id2486 . -4) (undo-tree-id2487 . -4) (undo-tree-id2488 . -4) (undo-tree-id2489 . -4) (undo-tree-id2490 . -4) (undo-tree-id2491 . -4) (undo-tree-id2492 . -4) (undo-tree-id2493 . -4) (undo-tree-id2494 . -4) 3319 (3312 . 3319) (3303 . 3312) (#("room" 0 4 (fontified t)) . -3303) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -2) (undo-tree-id2498 . -2) (undo-tree-id2499 . -3) (undo-tree-id2500 . -3) (undo-tree-id2501 . -4) (undo-tree-id2502 . -4) (undo-tree-id2503 . -4) (undo-tree-id2504 . -4) (undo-tree-id2505 . -4) (undo-tree-id2506 . -4) 3307 (3302 . 3307) (3299 . 3302) (t 25820 39169 595242 987000) 3255) nil (25820 39249 261641 35000) 0 nil])
([nil nil ((3378 . 3380) (#("\\" 0 1 (fontified t)) . -3378) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (#("\\" 0 1 (fontified t)) . -3379) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) 3380 (3378 . 3380)) nil (25820 39249 261603 835000) 0 nil])
([nil nil ((3300 . 3316) (#("		" 0 2 (fontified t)) . 3300) (undo-tree-id2449 . -2) (undo-tree-id2450 . -2) (#(" " 0 1 (fontified t)) . 3348) 3379) nil (25820 39249 261593 603000) 0 nil])
([nil nil ((1575 . 1576) (t 25820 39249 265243 358000)) nil (25820 39267 148663 607000) 0 nil])
([nil nil ((1579 . 1580)) nil (25820 39269 501486 729000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1579) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (t 25820 39267 151910 109000)) nil (25820 39328 168946 358000) 0 nil] [nil nil ((nil rear-nonsticky nil 1598 . 1599) (nil fontified nil 1580 . 1599) (1580 . 1599) 1579 (t 25820 39267 151910 109000)) ((#(" + wall_width / 2.0" 0 18 (fontified nil) 18 19 (rear-nonsticky nil fontified nil)) . 1580) (undo-tree-id2507 . -18) (undo-tree-id2508 . -18) (undo-tree-id2509 . -18) (undo-tree-id2510 . -18) (nil rear-nonsticky t 1598 . 1599)) (25820 39269 501154 797000) 0 nil])
([nil nil ((1574 . 1575) (#("4" 0 1 (fontified t)) . 1574) (undo-tree-id2513 . -1)) nil (25820 39328 168941 374000) 0 nil])
nil
([nil nil ((#("0" 0 1 (fontified t)) . 1575) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1)) nil (25820 39328 168936 538000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -3844) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (#("." 0 1 (fontified t)) . -3845) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (#("5" 0 1 (fontified t)) . -3846) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) 3847 (t 25820 39328 171910 410000)) nil (25820 39361 642460 262000) 0 nil])
([nil nil ((#("                //(room_size + wall_width) * grid.width as f32,
" 0 16 (fontified t) 16 18 (face font-lock-comment-delimiter-face fontified t) 18 19 (face font-lock-comment-face fontified t) 19 31 (face font-lock-comment-face fontified t) 31 56 (face font-lock-comment-face fontified t) 56 58 (face font-lock-comment-face fontified t) 58 59 (face font-lock-comment-face fontified t) 59 62 (face font-lock-comment-face fontified t) 62 63 (face font-lock-comment-face fontified t) 63 64 (face font-lock-comment-face fontified t)) . 3236) (undo-tree-id2551 . -63) (undo-tree-id2552 . -30) (undo-tree-id2553 . -30) (undo-tree-id2554 . -61) (undo-tree-id2555 . -61) (undo-tree-id2556 . -61) (undo-tree-id2557 . -61) (undo-tree-id2558 . -61) (undo-tree-id2559 . -61) (undo-tree-id2560 . -64) 3297) nil (25820 39361 642445 30000) 0 nil])
([nil nil ((#("                //4.5,
" 0 16 (fontified t) 16 18 (face font-lock-comment-delimiter-face fontified t) 18 20 (face font-lock-comment-face fontified t) 20 21 (face font-lock-comment-face fontified t) 21 22 (face font-lock-comment-face fontified t) 22 23 (face font-lock-comment-face fontified t)) . 3311) (undo-tree-id2533 . -22) (undo-tree-id2534 . -21) (undo-tree-id2535 . -21) (undo-tree-id2536 . -21) (undo-tree-id2537 . -21) (undo-tree-id2538 . -21) (undo-tree-id2539 . -21) (undo-tree-id2540 . -21) (undo-tree-id2541 . -21) (undo-tree-id2542 . -21) (undo-tree-id2543 . -21) (undo-tree-id2544 . -21) (undo-tree-id2545 . -21) (undo-tree-id2546 . -21) (undo-tree-id2547 . -21) (undo-tree-id2548 . -21) (undo-tree-id2549 . -21) (undo-tree-id2550 . -23) 3332) nil (25820 39361 642562 165000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3814 . 3815) (nil fontified nil 3757 . 3815) (3757 . 3815) 3756) nil (25820 39372 313308 972000) 0 nil] [nil nil ((#("(room_size + wall_width) * grid.width as f32 + wall_width," 0 1 (fontified t) 1 13 (fontified t) 13 38 (fontified t) 38 40 (face font-lock-keyword-face fontified t) 40 41 (fontified t) 41 44 (face font-lock-type-face fontified t) 44 58 (fontified t)) . 3252) (undo-tree-id2518 . -57) (undo-tree-id2519 . -14) (undo-tree-id2520 . -14) (undo-tree-id2521 . -45) (undo-tree-id2522 . -45) (undo-tree-id2523 . -45) (undo-tree-id2524 . -45) (undo-tree-id2525 . -45) (undo-tree-id2526 . -45) (undo-tree-id2527 . -45) (undo-tree-id2528 . -45) (undo-tree-id2529 . -45) (undo-tree-id2530 . -45) (undo-tree-id2531 . -58) (undo-tree-id2532 . -58)) ((3252 . 3310)) (25820 39361 642421 252000) 0 nil])
([nil nil ((#("," 0 1 (fontified t rear-nonsticky t)) . 3814) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1)) nil (25820 39372 313307 5000) 0 nil])
nil
([nil nil ((3814 . 3815)) nil (25820 39372 313297 732000) 0 nil])
([nil nil ((3757 . 3758)) nil (25820 39372 313296 585000) 0 nil])
([nil nil ((3720 . 3733) (3737 . 3748) (3738 . 3739) (3756 . 3767) (3757 . 3758) (3822 . 3832) 3757) nil (25820 39372 313291 640000) 0 nil])
([nil nil ((1575 . 1576) (t 25820 39372 315243 956000)) nil (25820 39398 714001 990000) 0 nil])
([nil nil ((1579 . 1580)) nil (25820 39398 713997 829000) 0 nil])
([nil nil ((3096 . 3112) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -3096) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (3094 . 3097) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -3094) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (3091 . 3095) (#("p" 0 1 (face font-lock-variable-name-face fontified t)) . -3091) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (#("o" 0 1 (face font-lock-variable-name-face fontified t)) . -3092) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (#("s" 0 1 (face font-lock-variable-name-face fontified t)) . -3093) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) 3094 (3087 . 3094) (3082 . 3087) (t 25820 39398 718577 417000) 3080) nil (25820 40172 302001 209000) 0 nil])
([nil nil ((#("    let position = Vec3::new(
" 0 4 (fontified t) 4 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 16 (face font-lock-variable-name-face fontified t) 16 19 (fontified t) 19 23 (face font-lock-type-face fontified t) 23 29 (fontified t) 29 30 (fontified t)) . 3083) (undo-tree-id3239 . -29) (undo-tree-id3240 . -30) (undo-tree-id3241 . -29) (undo-tree-id3242 . -29) (undo-tree-id3243 . -16) (undo-tree-id3244 . -16) (undo-tree-id3245 . -13) (undo-tree-id3246 . -13) (undo-tree-id3247 . -30) (undo-tree-id3248 . -30) (undo-tree-id3249 . -30)) nil (25820 40180 92226 241000) 0 nil] [nil nil ((#("                -wall_width / 2.0,
                0.0,
                (room_size + wall_width) * grid.width as f32 / 2.0 - wall_width / 2.0,
" 0 16 (fontified t) 16 33 (fontified t) 33 34 (fontified t) 34 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 55 (fontified t) 55 56 (fontified t) 56 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 85 (fontified t) 85 110 (fontified t) 110 112 (face font-lock-keyword-face fontified t) 112 113 (fontified t) 113 116 (face font-lock-type-face fontified t) 116 141 (fontified t) 141 143 (fontified t)) . 3475) (undo-tree-id2801 . -84) (undo-tree-id2802 . -28) (undo-tree-id2803 . -84) (undo-tree-id2804 . -142) (undo-tree-id2806 . -28) (undo-tree-id2808 . -28) (undo-tree-id2810 . -55) (undo-tree-id2812 . -84) (undo-tree-id2813 . -84) (undo-tree-id2815 . -84) 3559) ((3475 . 3618)) (25820 40171 678574 816000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3885 . 3886) (#("
" 0 1 (fontified nil)) . -4693) (3881 . 4694) 3874 (t 25820 40180 95247 778000)) nil (25820 40265 758349 510000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3128 . 3129) (#("
" 0 1 (fontified nil)) . -3255) (3112 . 3256) 3096) ((#("
                -wall_width / 2.0,
                0.0,
                (room_size + wall_width) * grid.width as f32 / 2.0 - wall_width / 2.0,
" 0 1 (fontified t) 1 16 (fontified nil) 16 17 (rear-nonsticky nil fontified nil) 17 34 (fontified nil) 34 35 (fontified nil) 35 36 (fontified nil) 36 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 56 (fontified t) 56 57 (fontified t) 57 71 (fontified nil) 71 72 (fontified nil) 72 73 (fontified nil) 73 74 (fontified nil) 74 86 (fontified nil) 86 111 (fontified nil) 111 113 (face font-lock-keyword-face fontified nil) 113 114 (fontified nil) 114 117 (face font-lock-type-face fontified nil) 117 142 (fontified nil) 142 143 (fontified nil) 143 144 (fontified nil)) . 3112) (undo-tree-id3237 . -142) (undo-tree-id3238 . -142) (3255 . 3256) (nil rear-nonsticky t 3128 . 3129)) (25820 40171 455111 308000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3886) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) 3887 (3886 . 3887) (3881 . 3886) 3878) nil (25820 40265 758347 672000) 0 nil])
([nil nil ((3135 . 3136) (#("                " 0 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil)) . 3135) (#("
" 0 1 (fontified t)) . -3135) (3130 . 3131) (#("                " 0 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil)) . 3130) (#("
" 0 1 (fontified t)) . -3130) (#("                " 0 15 (fontified nil) 15 16 (rear-nonsticky t fontified nil)) . 3112) (undo-tree-id2798 . -16) (#("
" 0 1 (fontified t)) . -3112) (undo-tree-id2799 . -1) 3099) ((3112 . 3113) (3112 . 3128) (3130 . 3131) (3130 . 3146) (#(" " 0 1 (fontified nil)) . 3130) (3135 . 3136) (3135 . 3151) (#(" " 0 1 (fontified t)) . 3135)) (25820 40171 230506 955000) 0 nil])
([nil nil ((3894 . 3898) (#("South" 0 5 (face font-lock-comment-face fontified t)) . 3894) (undo-tree-id3306 . -4) (undo-tree-id3307 . -5) (undo-tree-id3308 . -5)) nil (25820 40266 654619 540000) 0 nil])
([nil nil ((3205 . 3207) (#("," 0 1 (fontified t)) . -3205) (undo-tree-id2790 . -1) (undo-tree-id2792 . -1) (undo-tree-id2794 . -1) 3206) ((3205 . 3206) (#(");" 0 2 (fontified t)) . 3205)) (25820 40171 7399 280000) 0 nil])
([nil nil ((#("            wall_width / 2.0,
            wall_height / 2.0,
" 0 12 (fontified t) 12 23 (fontified t) 23 29 (fontified t) 29 30 (fontified t) 30 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 54 (fontified t) 54 60 (fontified t) 60 61 (fontified t)) . 4539) (undo-tree-id3381 . -40) (undo-tree-id3382 . -10) (undo-tree-id3383 . -40) (undo-tree-id3384 . -60) (undo-tree-id3385 . -10) (undo-tree-id3386 . -10) (undo-tree-id3387 . -40) (undo-tree-id3388 . -40) (undo-tree-id3389 . -40) (undo-tree-id3390 . -40) (undo-tree-id3391 . -10) (undo-tree-id3392 . -10) (undo-tree-id3393 . -10) (undo-tree-id3394 . -10) (undo-tree-id3395 . -40) (undo-tree-id3396 . -40) (undo-tree-id3397 . -40) (undo-tree-id3398 . -40) (undo-tree-id3399 . -10) (undo-tree-id3400 . -10) (undo-tree-id3401 . -10) (undo-tree-id3402 . -10) (undo-tree-id3403 . -40) (undo-tree-id3404 . -40) (undo-tree-id3405 . -40) (undo-tree-id3406 . -40) (undo-tree-id3407 . -10) (undo-tree-id3408 . -10) (undo-tree-id3409 . -40) (undo-tree-id3410 . -40) (undo-tree-id3411 . -10) (undo-tree-id3412 . -10) (undo-tree-id3413 . -10) (undo-tree-id3414 . -10) (undo-tree-id3415 . -30) (undo-tree-id3416 . -40) (undo-tree-id3417 . -40) (undo-tree-id3418 . -40) (undo-tree-id3419 . -40) (undo-tree-id3420 . -61) 4579) nil (25820 40280 611558 812000) 0 nil] [nil nil ((#("            wall_width / 2.0,
            wall_height / 2.0,
" 0 12 (fontified t) 12 23 (fontified t) 23 29 (fontified t) 29 30 (fontified t) 30 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 54 (fontified t) 54 60 (fontified t) 60 61 (fontified t)) . 4539) (undo-tree-id3278 . -40) (undo-tree-id3279 . -10) (undo-tree-id3280 . -40) (undo-tree-id3281 . -60) (undo-tree-id3282 . -10) (undo-tree-id3283 . -10) (undo-tree-id3284 . -40) (undo-tree-id3285 . -40) (undo-tree-id3286 . -40) (undo-tree-id3287 . -40) (undo-tree-id3288 . -10) (undo-tree-id3289 . -10) (undo-tree-id3290 . -10) (undo-tree-id3291 . -10) (undo-tree-id3292 . -40) (undo-tree-id3293 . -40) (undo-tree-id3294 . -40) (undo-tree-id3295 . -40) (undo-tree-id3296 . -10) (undo-tree-id3297 . -10) (undo-tree-id3298 . -10) (undo-tree-id3299 . -10) (undo-tree-id3300 . -30) (undo-tree-id3301 . -40) (undo-tree-id3302 . -40) (undo-tree-id3303 . -40) (undo-tree-id3304 . -40) (undo-tree-id3305 . -61) 4579) ((4539 . 4600)) (25820 40266 446294 278000) 0 nil])
([nil nil ((3558 . 3560) (#(":" 0 1 (fontified t)) . -3558) (undo-tree-id2701 . -1) (undo-tree-id2703 . -1) (undo-tree-id2705 . -1) (undo-tree-id2707 . -1) (undo-tree-id2709 . -1) (#(":" 0 1 (fontified t)) . -3559) (undo-tree-id2711 . -1) (undo-tree-id2713 . -1) (undo-tree-id2715 . -1) (undo-tree-id2717 . -1) (undo-tree-id2719 . -1) (#("f" 0 1 (fontified t)) . -3560) (undo-tree-id2721 . -1) (undo-tree-id2723 . -1) (undo-tree-id2725 . -1) (undo-tree-id2727 . -1) (undo-tree-id2729 . -1) (#("r" 0 1 (fontified t)) . -3561) (undo-tree-id2731 . -1) (undo-tree-id2733 . -1) (undo-tree-id2735 . -1) (undo-tree-id2737 . -1) 3562 (#("o" 0 1 (fontified t)) . -3562) (undo-tree-id2739 . -1) (undo-tree-id2741 . -1) (undo-tree-id2743 . -1) (undo-tree-id2745 . -1) (#("m" 0 1 (fontified t)) . -3563) (undo-tree-id2747 . -1) (undo-tree-id2749 . -1) (undo-tree-id2751 . -1) (undo-tree-id2753 . -1) (#("_" 0 1 (fontified t)) . -3564) (undo-tree-id2755 . -1) (undo-tree-id2757 . -1) (undo-tree-id2759 . -1) (undo-tree-id2761 . -1) (#("x" 0 1 (fontified t)) . -3565) (undo-tree-id2763 . -1) (undo-tree-id2765 . -1) (undo-tree-id2767 . -1) (undo-tree-id2769 . -1) (#("y" 0 1 (fontified t)) . -3566) (undo-tree-id2771 . -1) (undo-tree-id2773 . -1) (undo-tree-id2775 . -1) (undo-tree-id2777 . -1) (#("z" 0 1 (fontified t)) . -3567) (undo-tree-id2779 . -1) (undo-tree-id2781 . -1) (undo-tree-id2783 . -1) (undo-tree-id2785 . -1) (#("(" 0 1 (fontified t)) . -3568) (undo-tree-id2787 . -1) (undo-tree-id2789 . -1) 3569) ((3558 . 3569) (#(" {" 0 2 (fontified t)) . 3558) (undo-tree-id3233 . -2) (undo-tree-id3234 . -2) (undo-tree-id3235 . -2) (undo-tree-id3236 . -2)) (25820 40170 798425 174000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4629 . 4630) (#("
" 0 1 (fontified nil)) . -4678) (4617 . 4679) 4549) nil (25820 40280 611486 907000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4629 . 4630) (#("
" 0 1 (fontified nil)) . -4678) (4617 . 4679) 4549) ((#("
            wall_width / 2.0,
            wall_height / 2.0,
" 0 1 (fontified t) 1 12 (fontified nil) 12 13 (fontified nil rear-nonsticky nil) 13 24 (fontified nil) 24 30 (fontified nil) 30 31 (fontified nil) 31 41 (fontified nil) 41 42 (fontified nil) 42 43 (fontified nil) 43 55 (fontified nil) 55 61 (fontified nil) 61 62 (fontified nil)) . 4617) (4678 . 4679) (nil rear-nonsticky t 4629 . 4630)) (25820 40265 870224 743000) 0 nil])
([nil nil ((3573 . 3574) (#(")" 0 1 (fontified t)) . 3573) (undo-tree-id2694 . -1) (undo-tree-id2696 . -1) (undo-tree-id2698 . -1)) ((3573 . 3574) (#("}" 0 1 (fontified t)) . 3573)) (25820 40170 607252 8000) 0 nil])
([nil nil ((#("            wall_height / 2.0,
" 0 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 24 (fontified t) 24 30 (fontified t) 30 31 (fontified t)) . 4648) (undo-tree-id3372 . -30) (undo-tree-id3373 . -30) (undo-tree-id3374 . -12) (undo-tree-id3375 . -12) (undo-tree-id3376 . -12) (undo-tree-id3377 . -12) (undo-tree-id3378 . -12) (undo-tree-id3379 . -12) (undo-tree-id3380 . -31) 4660) nil (25820 40280 611485 740000) 0 nil])
([nil nil ((#("                -wall_width / 2.0,
                0.0,
" 0 16 (fontified t) 16 33 (fontified t) 33 34 (fontified t) 34 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 55 (fontified t) 55 56 (fontified t)) . 4261) (undo-tree-id3250 . -47) (undo-tree-id3251 . -12) (undo-tree-id3252 . -47) (undo-tree-id3253 . -55) (undo-tree-id3254 . -10) (undo-tree-id3255 . -10) (undo-tree-id3256 . -45) (undo-tree-id3257 . -45) (undo-tree-id3258 . -45) (undo-tree-id3259 . -45) (undo-tree-id3260 . -10) (undo-tree-id3261 . -10) (undo-tree-id3262 . -10) (undo-tree-id3263 . -10) (undo-tree-id3264 . -45) (undo-tree-id3265 . -45) (undo-tree-id3266 . -47) (undo-tree-id3267 . -47) (undo-tree-id3268 . -12) (undo-tree-id3269 . -12) (undo-tree-id3270 . -12) (undo-tree-id3271 . -12) (undo-tree-id3272 . -35) (undo-tree-id3273 . -47) (undo-tree-id3274 . -47) (undo-tree-id3275 . -47) (undo-tree-id3276 . -47) (undo-tree-id3277 . -56) 4308) ((4261 . 4317)) (25820 40265 758513 878000) 0 nil])
([nil nil ((3595 . 3599) (#("t" 0 1 (fontified t)) . -3595) (undo-tree-id2602 . -1) (undo-tree-id2604 . -1) 3596 (3588 . 3596) (3585 . 3588) (3584 . 3585) (#(";" 0 1 (fontified t)) . -3584) (undo-tree-id2606 . -1) (undo-tree-id2608 . -1) 3585 (3584 . 3585) (#("." 0 1 (fontified t)) . -3584) (undo-tree-id2610 . -1) (undo-tree-id2612 . -1) (undo-tree-id2614 . -1) (undo-tree-id2616 . -1) (undo-tree-id2618 . -1) (undo-tree-id2620 . -1) (undo-tree-id2622 . -1) (#("c" 0 1 (fontified t)) . -3585) (undo-tree-id2624 . -1) (undo-tree-id2626 . -1) (undo-tree-id2628 . -1) (undo-tree-id2630 . -1) (undo-tree-id2632 . -1) (undo-tree-id2634 . -1) (undo-tree-id2636 . -1) (#("l" 0 1 (fontified t)) . -3586) (undo-tree-id2638 . -1) (undo-tree-id2640 . -1) (undo-tree-id2642 . -1) (undo-tree-id2644 . -1) (undo-tree-id2646 . -1) (undo-tree-id2648 . -1) (#("o" 0 1 (fontified t)) . -3587) (undo-tree-id2650 . -1) (undo-tree-id2652 . -1) (undo-tree-id2654 . -1) (undo-tree-id2656 . -1) (undo-tree-id2658 . -1) (#("n" 0 1 (fontified t)) . -3588) (undo-tree-id2660 . -1) (undo-tree-id2662 . -1) (undo-tree-id2664 . -1) (undo-tree-id2666 . -1) (#("e" 0 1 (fontified t)) . -3589) (undo-tree-id2668 . -1) (undo-tree-id2670 . -1) (undo-tree-id2672 . -1) 3590 (3586 . 3590) (3581 . 3586) (#("i" 0 1 (fontified t)) . -3581) (undo-tree-id2673 . -1) (3579 . 3582) (#("i" 0 1 (fontified t)) . -3579) (undo-tree-id2675 . -1) (3574 . 3580) (3563 . 3574) (#("trans" 0 5 (fontified t)) . -3563) (undo-tree-id2678 . -1) (undo-tree-id2680 . -2) (undo-tree-id2682 . -3) (undo-tree-id2684 . -4) (undo-tree-id2686 . -5) (undo-tree-id2688 . -5) (undo-tree-id2690 . -5) (undo-tree-id2692 . -5) 3568 (3563 . 3568) (3560 . 3563) 3538) ((#("
		" 0 1 (fontified t) 1 3 (fontified nil)) . 3560) (undo-tree-id3183 . -3) (undo-tree-id3184 . -3) (undo-tree-id3185 . -3) (undo-tree-id3186 . -3) (undo-tree-id3187 . -1) (undo-tree-id3188 . -3) (undo-tree-id3189 . -3) (undo-tree-id3190 . -3) (#("trans" 0 5 (fontified nil)) . 3563) (undo-tree-id3191 . -5) (3563 . 3568) (#("translation" 0 11 (face font-lock-variable-name-face fontified nil)) . 3563) (undo-tree-id3192 . -11) (undo-tree-id3193 . -11) (undo-tree-id3194 . -11) (undo-tree-id3195 . -11) (undo-tree-id3196 . -11) (undo-tree-id3197 . -11) (undo-tree-id3198 . -11) (#(": posi" 0 5 (fontified nil) 5 6 (fontified nil)) . 3574) (undo-tree-id3199 . -5) (undo-tree-id3200 . -5) (undo-tree-id3201 . -5) (undo-tree-id3202 . -5) (undo-tree-id3203 . -6) (undo-tree-id3204 . -5) (undo-tree-id3205 . -5) (3579 . 3580) (#("iti" 0 2 (fontified nil) 2 3 (fontified nil)) . 3579) (undo-tree-id3206 . -2) (undo-tree-id3207 . -2) (undo-tree-id3208 . -2) (undo-tree-id3209 . -2) (undo-tree-id3210 . -3) (undo-tree-id3211 . -2) (undo-tree-id3212 . -2) (3581 . 3582) (#("ion.c" 0 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 3581) (undo-tree-id3213 . -3) (undo-tree-id3214 . -3) (undo-tree-id3215 . -3) (undo-tree-id3216 . -3) (undo-tree-id3217 . -5) (undo-tree-id3218 . -3) (undo-tree-id3219 . -3) (#("lone" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 3586) (undo-tree-id3220 . -4) (3584 . 3590) (#(";" 0 1 (fontified nil)) . 3584) (undo-tree-id3221 . -1) (3584 . 3585) (#("," 0 1 (fontified nil)) . 3584) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (#("
		" 0 1 (fontified t) 1 3 (fontified nil)) . 3585) (undo-tree-id3225 . 3) (undo-tree-id3226 . -3) (undo-tree-id3227 . -1) (undo-tree-id3228 . -3) (#("..defaut" 0 7 (fontified nil) 7 8 (fontified nil)) . 3588) (undo-tree-id3229 . -8) (undo-tree-id3230 . -7) (3595 . 3596) (#("lt()" 0 4 (fontified t)) . 3595) (undo-tree-id3231 . -3) (undo-tree-id3232 . -3)) (25820 40170 335235 34000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4629 . 4630) (#("
" 0 1 (fontified nil)) . -4648) (4617 . 4649) 4548) nil (25820 40280 611478 849000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4363 . 4364) (#("
" 0 1 (fontified nil)) . -4403) (4347 . 4404) 4273) ((#("
                -wall_width / 2.0,
                0.0,
" 0 1 (fontified t) 1 16 (fontified nil) 16 17 (rear-nonsticky nil fontified nil) 17 34 (fontified nil) 34 35 (fontified nil) 35 36 (fontified nil) 36 50 (fontified nil) 50 51 (fontified nil) 51 52 (fontified nil) 52 56 (fontified nil) 56 57 (fontified nil)) . 4347) (undo-tree-id3315 . -56) (undo-tree-id3316 . -1) (undo-tree-id3317 . -56) (undo-tree-id3318 . -1) (undo-tree-id3319 . -17) (undo-tree-id3320 . -17) (4403 . 4404) (nil rear-nonsticky t 4363 . 4364)) (25820 40265 758282 751000) 0 nil])
([nil nil ((3112 . 3121) (3130 . 3138) (3135 . 3140) (3136 . 3139) (3205 . 3211) (3561 . 3577) (#("		" 0 2 (fontified t)) . 3561) (undo-tree-id2584 . -2) (undo-tree-id2586 . -2) (undo-tree-id2588 . -2) (undo-tree-id2590 . -2) (undo-tree-id2592 . -2) (undo-tree-id2594 . -2) (undo-tree-id2596 . -2) (undo-tree-id2598 . -2) (3586 . 3602) (#("		" 0 2 (fontified t)) . 3586) (undo-tree-id2600 . -2) 3598) ((3586 . 3588) (#("                " 0 16 (fontified t)) . 3586) (3561 . 3563) (#("                " 0 16 (fontified t)) . 3561) (#(",
    " 0 2 (fontified nil) 2 6 (fontified t)) . 3205) (#("   " 0 3 (fontified nil)) . 3136) (#("
    " 0 1 (fontified nil) 1 5 (fontified t)) . 3135) (#("
       " 0 1 (fontified nil) 1 8 (fontified t)) . 3130) (#("
        " 0 1 (fontified t) 1 9 (fontified t)) . 3112)) (25820 40169 902622 9000) 0 nil])
([nil nil ((#("                -wall_width / 2.0,
                0.0,
" 0 16 (fontified t) 16 33 (fontified t) 33 34 (fontified t) 34 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 55 (fontified t) 55 56 (fontified t)) . 4261) (undo-tree-id3334 . -47) (undo-tree-id3335 . -12) (undo-tree-id3336 . -47) (undo-tree-id3337 . -55) (undo-tree-id3338 . -10) (undo-tree-id3339 . -10) (undo-tree-id3340 . -45) (undo-tree-id3341 . -45) (undo-tree-id3342 . -45) (undo-tree-id3343 . -45) (undo-tree-id3344 . -10) (undo-tree-id3345 . -10) (undo-tree-id3346 . -10) (undo-tree-id3347 . -10) (undo-tree-id3348 . -45) (undo-tree-id3349 . -45) (undo-tree-id3350 . -47) (undo-tree-id3351 . -47) (undo-tree-id3352 . -12) (undo-tree-id3353 . -12) (undo-tree-id3354 . -12) (undo-tree-id3355 . -12) (undo-tree-id3356 . -47) (undo-tree-id3357 . -47) (undo-tree-id3358 . -47) (undo-tree-id3359 . -47) (undo-tree-id3360 . -47) (undo-tree-id3361 . -47) (undo-tree-id3362 . -12) (undo-tree-id3363 . -12) (undo-tree-id3364 . -12) (undo-tree-id3365 . -12) (undo-tree-id3366 . -35) (undo-tree-id3367 . -47) (undo-tree-id3368 . -47) (undo-tree-id3369 . -47) (undo-tree-id3370 . -47) (undo-tree-id3371 . -56) 4308) nil (25820 40280 611476 705000) 0 nil])
nil
([nil nil ((3629 . 3637)) ((#(".clone()" 0 8 (fontified t)) . 3629)) (25820 40161 581967 923000) 0 nil] [nil nil ((#("((room_size + wall_width) * grid.width as f32 + wall_width) " 0 1 (fontified t) 1 39 (fontified t) 39 41 (face font-lock-keyword-face fontified t) 41 42 (fontified t) 42 45 (face font-lock-type-face fontified t) 45 59 (fontified t) 59 60 (fontified t)) . 3867) (undo-tree-id2971 . -59) (undo-tree-id2972 . -14) (undo-tree-id2973 . -14) (undo-tree-id2974 . -14) (undo-tree-id2975 . -14) (t 25820 40062 101913 881000)) ((3867 . 3927)) (25820 40094 927248 997000) 0 nil] [nil nil ((#("wall_width " 0 11 (fontified t)) . 3806) (undo-tree-id2918 . -7) (undo-tree-id2919 . -3) (undo-tree-id2920 . 3) (undo-tree-id2921 . -7) (undo-tree-id2922 . -3) (undo-tree-id2923 . -10) (undo-tree-id2924 . -7) (undo-tree-id2925 . -7) (undo-tree-id2926 . -7) (undo-tree-id2927 . -7) (undo-tree-id2928 . -7) (undo-tree-id2929 . -7) (undo-tree-id2930 . -3) (undo-tree-id2931 . -3) (undo-tree-id2932 . -7) (undo-tree-id2933 . -11) (t 25820 39695 125245 498000)) ((3806 . 3817)) (25820 40060 206362 191000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4363 . 4364) (#("
" 0 1 (fontified nil)) . -4403) (4347 . 4404) 4273) nil (25820 40280 611450 969000) 0 nil])
([nil nil ((#("((room_size + wall_width) * grid.width as f32 + wall_width) " 0 1 (fontified t) 1 39 (fontified t) 39 41 (face font-lock-keyword-face fontified t) 41 42 (fontified t) 42 45 (face font-lock-type-face fontified t) 45 59 (fontified t) 59 60 (fontified t)) . 3875) (undo-tree-id3118 . -59) (undo-tree-id3119 . -14) (undo-tree-id3120 . -14) (undo-tree-id3121 . -14) (undo-tree-id3122 . -14) (undo-tree-id3123 . -32) (undo-tree-id3124 . -32) (undo-tree-id3125 . -60)) ((3875 . 3935)) (25820 40161 23039 404000) 0 nil])
([nil nil ((3872 . 3878) (#("i" 0 1 (fontified t)) . -3872) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (3870 . 3873) (#("i" 0 1 (fontified t)) . -3870) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (3867 . 3871)) ((#("posi" 0 3 (fontified nil) 3 4 (fontified nil)) . 3867) (undo-tree-id3004 . -4) (undo-tree-id3005 . -3) (undo-tree-id3006 . -3) (undo-tree-id3007 . -3) (undo-tree-id3008 . -3) (undo-tree-id3009 . -3) (undo-tree-id3010 . -3) (undo-tree-id3011 . -3) (undo-tree-id3012 . -3) (undo-tree-id3013 . -3) (undo-tree-id3014 . -3) (undo-tree-id3015 . -3) (undo-tree-id3016 . -3) (undo-tree-id3017 . -3) (undo-tree-id3018 . -3) (undo-tree-id3019 . -3) (undo-tree-id3020 . -3) (undo-tree-id3021 . -4) (undo-tree-id3022 . -3) (undo-tree-id3023 . -3) (3870 . 3871) (#("iti" 0 2 (fontified nil) 2 3 (fontified nil)) . 3870) (undo-tree-id3024 . -3) (undo-tree-id3025 . -2) (undo-tree-id3026 . -2) (undo-tree-id3027 . -2) (undo-tree-id3028 . -2) (undo-tree-id3029 . -2) (undo-tree-id3030 . -2) (undo-tree-id3031 . -2) (undo-tree-id3032 . -2) (undo-tree-id3033 . -2) (undo-tree-id3034 . -2) (undo-tree-id3035 . -2) (undo-tree-id3036 . -2) (undo-tree-id3037 . -2) (undo-tree-id3038 . -2) (undo-tree-id3039 . -2) (undo-tree-id3040 . -3) (undo-tree-id3041 . -2) (undo-tree-id3042 . -2) (3872 . 3873) (#("ion.z " 0 6 (fontified t)) . 3872) (undo-tree-id3043 . -5) (undo-tree-id3044 . -5) (undo-tree-id3045 . -5) (undo-tree-id3046 . -5) (undo-tree-id3047 . -5) (undo-tree-id3048 . -5) (undo-tree-id3049 . -5) (undo-tree-id3050 . -5) (undo-tree-id3051 . -5) (undo-tree-id3052 . -5) (undo-tree-id3053 . -5) (undo-tree-id3054 . -5) (undo-tree-id3055 . -5) (undo-tree-id3056 . -5) (undo-tree-id3057 . -5) (undo-tree-id3058 . -5) (undo-tree-id3059 . -5) (undo-tree-id3060 . -5)) (25820 40094 238786 170000) 0 nil] [nil nil ((#("i" 0 1 (fontified t)) . -3870) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (3867 . 3871)) ((#("posi" 0 3 (fontified nil) 3 4 (fontified nil)) . 3867) (undo-tree-id2980 . -4) (3870 . 3871)) (25820 40081 483448 784000) 0 nil])
([nil nil ((#("wall_height " 0 12 (fontified t)) . 3825) (undo-tree-id2916 . -11) (undo-tree-id2917 . -12)) ((3825 . 3837)) (25820 40059 854381 65000) 0 nil])
([nil nil ((#("                0.0,
" 0 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 20 (fontified t) 20 21 (fontified t)) . 4383) (undo-tree-id3325 . -20) (undo-tree-id3326 . -20) (undo-tree-id3327 . -16) (undo-tree-id3328 . -16) (undo-tree-id3329 . -16) (undo-tree-id3330 . -16) (undo-tree-id3331 . -16) (undo-tree-id3332 . -16) (undo-tree-id3333 . -21) 4399) nil (25820 40280 611449 495000) 0 nil])
([nil nil ((3880 . 3886) (#("i" 0 1 (fontified t)) . -3880) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (3878 . 3881) (#("i" 0 1 (fontified t)) . -3878) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (3875 . 3879)) ((#("posi" 0 3 (fontified nil) 3 4 (fontified nil)) . 3875) (undo-tree-id3126 . -4) (undo-tree-id3127 . -3) (undo-tree-id3128 . -3) (undo-tree-id3129 . -3) (undo-tree-id3130 . -3) (undo-tree-id3131 . -3) (undo-tree-id3132 . -3) (undo-tree-id3133 . -3) (undo-tree-id3134 . -3) (undo-tree-id3135 . -3) (undo-tree-id3136 . -3) (undo-tree-id3137 . -3) (undo-tree-id3138 . -3) (undo-tree-id3139 . -3) (undo-tree-id3140 . -3) (undo-tree-id3141 . -3) (undo-tree-id3142 . -3) (undo-tree-id3143 . -4) (undo-tree-id3144 . -3) (undo-tree-id3145 . -3) (3878 . 3879) (#("iti" 0 2 (fontified nil) 2 3 (fontified nil)) . 3878) (undo-tree-id3146 . -3) (undo-tree-id3147 . -2) (undo-tree-id3148 . -2) (undo-tree-id3149 . -2) (undo-tree-id3150 . -2) (undo-tree-id3151 . -2) (undo-tree-id3152 . -2) (undo-tree-id3153 . -2) (undo-tree-id3154 . -2) (undo-tree-id3155 . -2) (undo-tree-id3156 . -2) (undo-tree-id3157 . -2) (undo-tree-id3158 . -2) (undo-tree-id3159 . -2) (undo-tree-id3160 . -2) (undo-tree-id3161 . -2) (undo-tree-id3162 . -3) (undo-tree-id3163 . -2) (undo-tree-id3164 . -2) (3880 . 3881) (#("ion.z " 0 6 (fontified t)) . 3880) (undo-tree-id3165 . -5) (undo-tree-id3166 . -5) (undo-tree-id3167 . -5) (undo-tree-id3168 . -5) (undo-tree-id3169 . -5) (undo-tree-id3170 . -5) (undo-tree-id3171 . -5) (undo-tree-id3172 . -5) (undo-tree-id3173 . -5) (undo-tree-id3174 . -5) (undo-tree-id3175 . -5) (undo-tree-id3176 . -5) (undo-tree-id3177 . -5) (undo-tree-id3178 . -5) (undo-tree-id3179 . -5) (undo-tree-id3180 . -5) (undo-tree-id3181 . -5) (undo-tree-id3182 . -5)) (25820 40160 222477 479000) 0 nil])
([nil nil ((#("
            " 0 1 (fontified t) 1 13 (fontified t)) . 3793) (undo-tree-id2981 . -13) (undo-tree-id2982 . -13) (undo-tree-id2983 . -13) (#("
          " 0 1 (fontified t) 1 11 (fontified t)) . 3823) (#(" " 0 1 (fontified t)) . 3835) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (#("
          " 0 1 (fontified t) 1 11 (fontified t)) . 3854) (undo-tree-id2986 . -10) (undo-tree-id2987 . -10) (undo-tree-id2988 . -1) (#(" " 0 1 (fontified t)) . 3866) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (#(",
        " 0 2 (fontified t) 2 10 (fontified t)) . 3883) 3877) ((3883 . 3893) (3866 . 3867) (3854 . 3865) (3835 . 3836) (3823 . 3834) (3793 . 3806) (t 25820 40087 5247 331000)) (25820 40087 3445 119000) 0 nil])
([nil nil ((3889 . 3890) (3887 . 3889) 3886) ((#("
	" 0 1 (fontified t) 1 2 (fontified nil)) . 3887) (undo-tree-id2977 . -1) (undo-tree-id2978 . -2) (undo-tree-id2979 . -2) (#("n" 0 1 (fontified t)) . 3889)) (25820 40081 483326 243000) 0 nil])
([nil nil ((#("((room_size + wall_width) * grid.width as f32 + wall_width) " 0 1 (fontified t) 1 39 (fontified t) 39 41 (face font-lock-keyword-face fontified t) 41 42 (fontified t) 42 45 (face font-lock-type-face fontified t) 45 59 (fontified t) 59 60 (fontified t)) . 3844) (undo-tree-id2910 . -59) (undo-tree-id2911 . -14) (undo-tree-id2912 . -14) (undo-tree-id2913 . -14) (undo-tree-id2914 . -14) (undo-tree-id2915 . -60)) ((3844 . 3904)) (25820 40059 454000 622000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4363 . 4364) (#("
" 0 1 (fontified nil)) . -4368) (4347 . 4369) 4274) nil (25820 40280 611441 713000) 0 nil])
([nil nil ((#("
            " 0 1 (fontified t) 1 13 (fontified t)) . 3801) (undo-tree-id3061 . -13) (undo-tree-id3062 . -13) (#("
          " 0 1 (fontified t) 1 11 (fontified t)) . 3831) (#(" " 0 1 (fontified t)) . 3843) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (#("
          " 0 1 (fontified t) 1 11 (fontified t)) . 3862) (undo-tree-id3065 . -10) (undo-tree-id3066 . -10) (undo-tree-id3067 . -1) (#(" " 0 1 (fontified t)) . 3874) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (#(",
        " 0 2 (fontified t) 2 10 (fontified t)) . 3891) 3885) ((3891 . 3901) (3874 . 3875) (3862 . 3873) (3843 . 3844) (3831 . 3842) (3801 . 3814) (t 25820 40115 471914 132000)) (25820 40115 399221 834000) 0 nil])
nil
nil
([nil nil ((3811 . 3816) (#("i" 0 1 (fontified t)) . -3811) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (3809 . 3812) (#("i" 0 1 (fontified t)) . -3809) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (3806 . 3810)) ((#("posi" 0 3 (fontified nil) 3 4 (fontified nil)) . 3806) (undo-tree-id2960 . -4) (undo-tree-id2961 . -3) (undo-tree-id2962 . -4) (undo-tree-id2963 . -3) (3809 . 3810) (#("iti" 0 2 (fontified nil) 2 3 (fontified nil)) . 3809) (undo-tree-id2964 . -3) (undo-tree-id2965 . -3) (undo-tree-id2966 . -2) (3811 . 3812) (#("ion.x" 0 5 (fontified t)) . 3811) (undo-tree-id2967 . -5) (undo-tree-id2968 . -5)) (25820 40059 278342 21000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 3882) (undo-tree-id3321 . -4) (undo-tree-id3322 . -4) (undo-tree-id3323 . -4) (undo-tree-id3324 . -4) 4364) nil (25820 40280 611437 861000) 0 nil])
nil
([nil nil ((3816 . 3817)) ((#(" " 0 1 (fontified t)) . 3816)) (25820 40059 102206 289000) 0 nil])
([nil nil ((#("                (room_size + wall_width) * grid.width as f32 + wall_width,
" 0 16 (fontified t) 16 17 (fontified t) 17 29 (fontified t) 29 54 (fontified t) 54 56 (face font-lock-keyword-face fontified t) 56 57 (fontified t) 57 60 (face font-lock-type-face fontified t) 60 74 (fontified t) 74 75 (fontified t)) . 4050) (undo-tree-id3433 . -74) (undo-tree-id3434 . -16) (undo-tree-id3435 . -16) (undo-tree-id3436 . -16) (undo-tree-id3437 . -16) (undo-tree-id3438 . -16) (undo-tree-id3439 . -16) (undo-tree-id3440 . -75) 4066 (t 25820 40280 615248 285000)) nil (25820 40357 740137 817000) 0 nil])
([nil nil ((3841 . 3847) (#("i" 0 1 (fontified t)) . -3841) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (3839 . 3842) (#("i" 0 1 (fontified t)) . -3839) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (3836 . 3840)) ((#("posi" 0 3 (fontified nil) 3 4 (fontified nil)) . 3836) (undo-tree-id2957 . -4) (undo-tree-id2958 . -3) (3839 . 3840) (#("iti" 0 2 (fontified nil) 2 3 (fontified nil)) . 3839) (undo-tree-id2959 . -3) (3841 . 3842) (#("ion.y " 0 6 (fontified t)) . 3841)) (25820 40058 653942 401000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4036 . 4037) (#("
" 0 1 (fontified nil)) . -4095) (4020 . 4096) 4008) nil (25820 40357 740130 317000) 0 nil])
([nil nil ((3866 . 3877)) ((#("position.y " 0 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . 3866) (undo-tree-id2934 . -9) (undo-tree-id2935 . -9) (undo-tree-id2936 . -10) (undo-tree-id2937 . -10) (undo-tree-id2938 . -9) (undo-tree-id2939 . -9) (undo-tree-id2940 . -9) (undo-tree-id2941 . -9) (undo-tree-id2942 . -9) (undo-tree-id2943 . -9) (undo-tree-id2944 . -9) (undo-tree-id2945 . -9) (undo-tree-id2946 . -9) (undo-tree-id2947 . -9) (undo-tree-id2948 . -9) (undo-tree-id2949 . -9) (undo-tree-id2950 . -9) (undo-tree-id2951 . -9) (undo-tree-id2952 . -9) (undo-tree-id2953 . -9) (undo-tree-id2954 . -9) (undo-tree-id2955 . -9) (undo-tree-id2956 . -9)) (25820 40058 494162 665000) 0 nil])
([nil nil ((#("                wall_width,
" 0 16 (fontified t) 16 27 (fontified t) 27 28 (fontified t)) . 3993) (undo-tree-id3421 . -27) (undo-tree-id3422 . -15) (undo-tree-id3423 . -15) (undo-tree-id3424 . -15) (undo-tree-id3425 . -15) (undo-tree-id3426 . -16) (undo-tree-id3427 . -16) (undo-tree-id3428 . -16) (undo-tree-id3429 . -16) (undo-tree-id3430 . -16) (undo-tree-id3431 . -16) (undo-tree-id3432 . -28) 4009) nil (25820 40357 740128 79000) 0 nil])
([nil nil ((3875 . 3876) (#("y" 0 1 (fontified t)) . 3875) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1)) ((3875 . 3876) (#("z" 0 1 (fontified t)) . 3875)) (25820 40058 302969 727000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4112 . 4113) (#("
" 0 1 (fontified nil)) . -4124) (4096 . 4125) 4084) nil (25820 40357 740106 919000) 0 nil])
([nil nil ((#("
            " 0 1 (fontified t) 1 13 (fontified t)) . 3793) (undo-tree-id2851 . -13) (undo-tree-id2852 . -13) (undo-tree-id2853 . -13) (undo-tree-id2854 . -13) (undo-tree-id2855 . -13) (undo-tree-id2856 . -13) (undo-tree-id2857 . -13) (undo-tree-id2858 . -13) (undo-tree-id2859 . -13) (undo-tree-id2860 . -13) (undo-tree-id2861 . -13) (undo-tree-id2862 . -13) (undo-tree-id2863 . -13) (undo-tree-id2864 . -13) (undo-tree-id2865 . -13) (undo-tree-id2866 . -13) (undo-tree-id2867 . -13) (undo-tree-id2868 . -13) (undo-tree-id2869 . -13) (undo-tree-id2870 . -13) (undo-tree-id2871 . -13) (undo-tree-id2872 . -13) (undo-tree-id2873 . -13) (undo-tree-id2874 . -13) (undo-tree-id2875 . -13) (#("
          " 0 1 (fontified t) 1 11 (fontified t)) . 3823) (#(" " 0 1 (fontified t)) . 3835) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (#("
          " 0 1 (fontified t) 1 11 (fontified t)) . 3853) (undo-tree-id2884 . -1) (#(" " 0 1 (fontified t)) . 3865) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (#(",
        " 0 2 (fontified t) 2 10 (fontified t)) . 3882) 3875) ((3882 . 3892) (3865 . 3866) (3853 . 3864) (3835 . 3836) (3823 . 3834) (3793 . 3806) (t 25820 40042 945247 119000)) (25820 40042 940786 869000) 0 nil])
([nil nil ((#("        Name::new(\"South Wall\"),
" 0 8 (fontified t) 8 12 (face font-lock-type-face fontified t) 12 18 (fontified t) 18 30 (face font-lock-string-face fontified t) 30 32 (fontified t) 32 33 (fontified t)) . 4450) (undo-tree-id3453 . -32) (undo-tree-id3454 . -33) (undo-tree-id3455 . -33) (undo-tree-id3456 . -33) (t 25820 40357 741915 314000)) nil (25820 42826 960970 128000) 0 nil])
nil
([nil nil ((#("        Name::new(\"South Wall\"),
" 0 8 (fontified t) 8 12 (face font-lock-type-face fontified t) 12 18 (fontified t) 18 30 (face font-lock-string-face fontified t) 30 32 (fontified t) 32 33 (fontified t)) . 3638) (undo-tree-id3441 . -32) (undo-tree-id3442 . -3) (undo-tree-id3443 . -3) (undo-tree-id3444 . -3) (undo-tree-id3445 . -3) (undo-tree-id3446 . -3) (undo-tree-id3447 . -3) (undo-tree-id3448 . -3) (undo-tree-id3449 . -3) (undo-tree-id3450 . -3) (undo-tree-id3451 . -3) (undo-tree-id3452 . -33) 3641) nil (25820 42826 960933 892000) 0 nil])
([nil nil ((2960 . 2961) (#("1" 0 1 (fontified t)) . 2960) (undo-tree-id3457 . -1) (t 25820 42826 965260 480000)) nil (25820 46961 796957 620000) 0 nil])
([nil nil ((2960 . 2961) (#("5" 0 1 (fontified t)) . 2960) (undo-tree-id3459 . -1) (t 25820 46961 801946 987000)) nil (25820 46980 342446 576000) 0 nil])
([nil nil ((2962 . 2963) (#("0" 0 1 (fontified t)) . 2962) (undo-tree-id3458 . -1)) nil (25820 46980 342441 733000) 0 nil])
([nil nil ((2962 . 2963) (#("3" 0 1 (fontified t)) . 2962) (undo-tree-id3466 . -1) (t 25820 46980 348613 746000)) nil (25820 47036 724520 756000) 0 nil])
([nil nil ((2960 . 2961) (#("0" 0 1 (fontified t)) . 2960) (undo-tree-id3465 . -1)) nil (25820 47036 724519 53000) 0 nil])
([nil nil ((3013 . 3014) (#("1" 0 1 (fontified t)) . 3013) (undo-tree-id3464 . -1)) nil (25820 47036 724517 407000) 0 nil])
([nil nil ((3015 . 3016) (#("5" 0 1 (fontified t)) . 3015) (undo-tree-id3463 . -1)) nil (25820 47036 724515 425000) 0 nil])
([nil nil ((2988 . 2989) (#("1" 0 1 (fontified t)) . 2988) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1)) nil (25820 47036 724510 733000) 0 nil])
([nil nil ((3014 . 3015) (t 25820 47036 728614 24000)) nil (25820 47055 522327 134000) 0 nil])
([nil nil ((3508 . 3514) (3497 . 3508) (#("wall" 0 4 (fontified t)) . -3497) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -2) (undo-tree-id3470 . -2) (undo-tree-id3471 . -3) (undo-tree-id3472 . -3) (undo-tree-id3473 . -4) (undo-tree-id3474 . -4) (undo-tree-id3475 . -4) (undo-tree-id3476 . -4) (undo-tree-id3477 . -4) (undo-tree-id3478 . -4) (undo-tree-id3479 . -4) (undo-tree-id3480 . -4) (undo-tree-id3481 . -4) (undo-tree-id3482 . -4) (undo-tree-id3483 . -4) (undo-tree-id3484 . -4) 3501 (3497 . 3501) (#("0.0" 0 3 (fontified t)) . 3497) (undo-tree-id3485 . -2) (undo-tree-id3486 . -3) (undo-tree-id3487 . -3) (t 25820 47055 525280 777000)) nil (25820 47111 12784 857000) 0 nil])
([nil nil ((4353 . 4359) (4342 . 4353) (#("wall" 0 4 (fontified t)) . -4342) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -2) (undo-tree-id3510 . -2) (undo-tree-id3511 . -3) (undo-tree-id3512 . -3) (undo-tree-id3513 . -3) (undo-tree-id3514 . -3) (undo-tree-id3515 . -4) (undo-tree-id3516 . -4) (undo-tree-id3517 . -4) (undo-tree-id3518 . -4) (undo-tree-id3519 . -4) (undo-tree-id3520 . -4) (undo-tree-id3521 . -4) (undo-tree-id3522 . -4) (undo-tree-id3523 . -4) (undo-tree-id3524 . -4) (undo-tree-id3525 . -4) (undo-tree-id3526 . -4) 4346 (4342 . 4346) (#("0.0" 0 3 (fontified t)) . 4342) (undo-tree-id3527 . -2) (undo-tree-id3528 . -3) (undo-tree-id3529 . -3) (undo-tree-id3530 . -3) (undo-tree-id3531 . -3) (undo-tree-id3532 . -3) (undo-tree-id3533 . -3) (t 25820 47111 18614 378000)) nil (25820 47225 158412 70000) 0 nil])
([nil nil ((6127 . 6133) (6116 . 6127) (#("wall" 0 4 (fontified nil)) . 6116) (6116 . 6120) (#("0.0" 0 3 (fontified t)) . 6116) (undo-tree-id3495 . -2) (undo-tree-id3496 . -3) (undo-tree-id3497 . -3) (undo-tree-id3498 . -3) (undo-tree-id3499 . -3) (undo-tree-id3500 . -3) (undo-tree-id3501 . -3) (undo-tree-id3502 . -3) (undo-tree-id3503 . -3) (undo-tree-id3504 . -3) (undo-tree-id3505 . -3) (undo-tree-id3506 . -3)) nil (25820 47225 158392 823000) 0 nil])
([nil nil ((7137 . 7143) (7126 . 7137) (#("wall" 0 4 (fontified nil)) . 7126) (7126 . 7130) (#("0.0" 0 3 (fontified t)) . 7126) (undo-tree-id3488 . -2) (undo-tree-id3489 . -3) (undo-tree-id3490 . -3) (undo-tree-id3491 . -3) (undo-tree-id3492 . -3) (undo-tree-id3493 . -3) (undo-tree-id3494 . -3)) nil (25820 47225 158381 154000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 3014) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (t 25820 47225 161948 259000)) nil (25820 47270 693886 823000) 0 nil])
([nil nil ((2960 . 2961) (#("2" 0 1 (fontified t)) . 2960) (undo-tree-id3551 . -1)) nil (25820 47270 693884 318000) 0 nil])
([nil nil ((3013 . 3014) (#("3" 0 1 (fontified t)) . 3013) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1)) nil (25820 47270 693882 231000) 0 nil])
([nil nil ((2988 . 2989) (#("2" 0 1 (fontified t)) . 2988) (undo-tree-id3544 . -1)) nil (25820 47270 693867 610000) 0 nil])
([nil nil ((2989 . 2990) (#("9" 0 1 (fontified t)) . -2989) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) 2990 (2988 . 2990) (#("1" 0 1 (fontified t)) . -2988) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) 2989) nil (25820 47270 693862 352000) 0 nil])
([nil nil ((1576 . 1577) (t 25820 47270 698615 133000)) nil (25820 47333 715083 58000) 0 nil])
([nil nil ((1581 . 1582)) nil (25820 47333 715078 639000) 0 nil])
([nil nil ((1579 . 1580) (#("2" 0 1 (fontified t)) . 1579) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (t 25820 47333 718615 442000)) nil (25820 47370 493914 834000) 0 nil])
([nil nil ((1574 . 1575) (#("2" 0 1 (fontified t)) . 1574) (undo-tree-id3554 . -1)) nil (25820 47370 493908 539000) 0 nil])
([nil nil ((1579 . 1580) (#("1" 0 1 (fontified t)) . 1579) (undo-tree-id3561 . -1) (t 25820 47370 498615 622000)) nil (25820 47398 7008 12000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1580) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1)) nil (25820 47398 7005 55000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1580) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1)) nil (25820 47398 6999 650000) 0 nil])
([nil nil ((4025 . 4029) (#("i" 0 1 (fontified t)) . -4025) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (4023 . 4026) (#("width" 0 5 (fontified t)) . 4023) (undo-tree-id3572 . -4) (undo-tree-id3573 . -5) (undo-tree-id3574 . -5) (t 25820 47398 11949 82000)) nil (25820 47454 518471 390000) 0 nil])
([nil nil ((4288 . 4294) (#("width" 0 5 (fontified t)) . 4288) (undo-tree-id3565 . -4) (undo-tree-id3566 . -5) (undo-tree-id3567 . -5) (undo-tree-id3568 . -5) (undo-tree-id3569 . -5)) nil (25820 47454 518465 566000) 0 nil])
([nil nil ((4545 . 4551) (#("width" 0 4 (fontified t) 4 5 (fontified t)) . 4545) (undo-tree-id3562 . -4) (undo-tree-id3563 . -5) (undo-tree-id3564 . -5)) nil (25820 47454 518456 878000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 1574) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (t 25820 47454 521949 339000)) nil (25820 47482 596217 884000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1574) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1)) nil (25820 47482 596213 640000) 0 nil])
([nil nil ((1574 . 1575) (#("0" 0 1 (fontified t)) . 1574) (undo-tree-id3575 . -1)) nil (25820 47482 596207 461000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 2986) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (t 25820 47482 601949 485000)) nil (25820 47504 69171 705000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 2986) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1)) nil (25820 47504 69169 103000) 0 nil])
([nil nil ((2984 . 2985) (#("0" 0 1 (fontified t)) . 2984) (undo-tree-id3580 . -1)) nil (25820 47504 69163 382000) 0 nil])
([nil nil ((2986 . 2987)) nil (25820 47504 69152 855000) 0 nil])
([nil nil ((2984 . 2985) (#("1" 0 1 (fontified t)) . 2984) (undo-tree-id3589 . -1) (t 25820 47504 75282 928000)) nil (25820 47526 613263 485000) 0 nil])
([nil nil ((2986 . 2987) (#("0" 0 1 (fontified t)) . 2986) (undo-tree-id3588 . -1)) nil (25820 47526 613260 539000) 0 nil])
([nil current ((3013 . 3014) (#("0" 0 1 (fontified t)) . 3013) (undo-tree-id3587 . -1)) nil (25820 47625 976388 547000) 0 nil])
([nil nil ((apply 48 4729 5414 undo--wrap-and-run-primitive-undo 4729 5414 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -5412) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -5396) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -5368) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -5349) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -5270) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -5245) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -5166) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -5118) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -5098) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -5045) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -5020) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4967) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4909) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4830) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4791) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -4737) 5462))) ((apply -48 4729 5462 undo--wrap-and-run-primitive-undo 4729 5462 ((4737 . 4740) (4791 . 4794) (4830 . 4833) (4909 . 4912) (4967 . 4970) (5020 . 5023) (5045 . 5048) (5098 . 5101) (5118 . 5121) (5166 . 5169) (5245 . 5248) (5270 . 5273) (5349 . 5352) (5368 . 5371) (5396 . 5399) (5412 . 5415)))) (25820 47590 656130 496000) 0 nil])
nil
