(undo-tree-save-format-version . 1)
"25286e625f4c764571d935b2bc366f7a5d491889"
[nil nil nil nil (25820 34427 274745 115000) 0 nil]
([nil nil ((#("            //grid.grid[current_cell.0][current_cell.1].walls[wall.0 as usize] = false;
            //grid.grid[neighbor.0][neighbor.1].walls[wall.1 as usize] = false;

" 0 12 (fontified t) 12 14 (fontified t face font-lock-comment-delimiter-face) 14 88 (fontified t face font-lock-comment-face) 88 100 (fontified t) 100 102 (fontified t face font-lock-comment-delimiter-face) 102 168 (fontified t face font-lock-comment-face) 168 169 (fontified t)) . 2599) (undo-tree-id0 . -88) (undo-tree-id1 . -88) (undo-tree-id2 . -168) (undo-tree-id3 . -168) (undo-tree-id4 . -169) (undo-tree-id5 . -169) (undo-tree-id6 . -169) (undo-tree-id7 . -169) (undo-tree-id8 . -168) (undo-tree-id9 . -168) (undo-tree-id10 . -88) (undo-tree-id11 . -88) (undo-tree-id12 . -168) (undo-tree-id13 . -168) (undo-tree-id14 . -88) (undo-tree-id15 . -88) (undo-tree-id16 . -168) (undo-tree-id17 . -168) (undo-tree-id18 . -169) (undo-tree-id19 . -168) (undo-tree-id20 . -168) (undo-tree-id21 . -169) (undo-tree-id22 . -88) (undo-tree-id23 . -88) (undo-tree-id24 . -168) (undo-tree-id25 . -168) (undo-tree-id26 . -168) (undo-tree-id27 . -168) (undo-tree-id28 . -88) (undo-tree-id29 . -88) (undo-tree-id30 . -88) (undo-tree-id31 . -88) (undo-tree-id32 . -168) (undo-tree-id33 . -168) (undo-tree-id34 . -168) (undo-tree-id35 . -168) (undo-tree-id36 . -169) (undo-tree-id37 . -168) (undo-tree-id38 . -168) 2767 (t 25820 33918 465217 901000)) nil (25820 35207 528539 946000) 0 nil])
([nil nil ((apply 6 4725 4856 undo--wrap-and-run-primitive-undo 4725 4856 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 4783) (#("// " 0 3 (face font-lock-comment-delimiter-face)) . 4745) 4862))) ((apply -6 4725 4862 undo--wrap-and-run-primitive-undo 4725 4862 ((4745 . 4748) (4783 . 4786) 5869))) (25820 35208 376082 783000) 0 nil])
([nil nil ((apply 6 5732 5863 undo--wrap-and-run-primitive-undo 5732 5863 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 5790) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 5752) 5869))) ((apply -6 5732 5869 undo--wrap-and-run-primitive-undo 5732 5869 ((5752 . 5755) (5790 . 5793) 3891))) (25820 35208 552645 791000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3898 . 3899) (#("
" 0 1 (fontified nil)) . -4889) (3890 . 4890) 3878 (t 25820 35209 718557 401000)) nil (25820 35281 200088 797000) 0 nil] [nil nil ((nil rear-nonsticky nil 3899 . 3900) (#("
" 0 1 (fontified nil)) . -4882) (3891 . 4883) (t 25820 34456 795220 474000)) ((#("
        for (col_i, cell) in row.iter().enumerate() {
            if cell.walls[0] {
                commands.spawn((
                    PbrBundle {
                        mesh: meshes.add(Mesh::from(shape::Box::new(
                            wall_width,
                            wall_height,
                            wall_depth,
                        ))),
                        material: materials.add(Color::rgb(1.0, 0.0, 0.0).into()),
                        transform: Transform::from_xyz(
                            row_i as f32 * (room_size + wall_width) + room_size + wall_width / 2.0,
                            0.0,
                            col_i as f32 * (room_size + wall_width) + (room_size / 2.0),
                        ),
                        ..default()
                    },
                    RigidBody::Fixed,
                    Collider::cuboid(wall_width / 2.0, wall_height / 2.0, wall_depth / 2.0),
                ));
            }
        }
" 0 1 (fontified t) 1 8 (fontified nil) 8 9 (rear-nonsticky nil fontified nil) 9 12 (fontified nil face font-lock-keyword-face) 12 27 (fontified nil) 27 29 (fontified nil face font-lock-keyword-face) 29 55 (fontified nil) 55 67 (fontified t) 67 69 (fontified t face font-lock-keyword-face) 69 70 (fontified t) 70 86 (fontified t) 86 102 (fontified t) 102 119 (fontified t) 119 139 (fontified t) 139 148 (fontified t face font-lock-type-face) 148 151 (fontified t) 151 175 (fontified t) 175 179 (fontified t face font-lock-variable-name-face) 179 192 (fontified t) 192 196 (fontified t face font-lock-type-face) 196 203 (fontified t) 203 208 (fontified t face font-lock-constant-face) 208 210 (fontified t) 210 213 (fontified t face font-lock-type-face) 213 220 (fontified t) 220 248 (fontified t) 248 253 (fontified t) 253 260 (fontified t) 260 288 (fontified t) 288 301 (fontified t) 301 329 (fontified t) 329 341 (fontified t) 341 365 (fontified t) 365 370 (fontified t) 370 394 (fontified t) 394 402 (fontified t face font-lock-variable-name-face) 402 418 (fontified t) 418 423 (fontified t face font-lock-type-face) 423 445 (fontified t) 445 453 (fontified t) 453 477 (fontified t) 477 486 (fontified t face font-lock-variable-name-face) 486 488 (fontified t) 488 497 (fontified t face font-lock-type-face) 497 509 (fontified t) 509 537 (fontified t) 537 543 (fontified t) 543 545 (fontified t face font-lock-keyword-face) 545 546 (fontified t) 546 549 (fontified t face font-lock-type-face) 549 609 (fontified t) 609 637 (fontified t) 637 642 (fontified t) 642 670 (fontified t) 670 676 (fontified t) 676 678 (fontified t face font-lock-keyword-face) 678 679 (fontified t) 679 682 (fontified t face font-lock-type-face) 682 731 (fontified t) 731 755 (fontified t) 755 758 (fontified t) 758 782 (fontified t) 782 794 (fontified t) 794 814 (fontified t) 814 817 (fontified t) 817 837 (fontified t) 837 846 (fontified t face font-lock-type-face) 846 848 (fontified t) 848 853 (fontified t face font-lock-type-face) 853 855 (fontified t) 855 875 (fontified t) 875 883 (fontified t face font-lock-type-face) 883 948 (fontified t) 948 964 (fontified t) 964 968 (fontified t) 968 982 (fontified t) 982 991 (fontified nil) 991 992 (fontified nil)) . 3891) (undo-tree-id421 . -642) (undo-tree-id422 . -1) (undo-tree-id423 . -16) (undo-tree-id424 . -948) (undo-tree-id425 . -1) (undo-tree-id426 . -967) (undo-tree-id427 . -9) (undo-tree-id428 . -9) (undo-tree-id429 . -63) (undo-tree-id430 . -63) (undo-tree-id431 . -94) (undo-tree-id432 . -94) (undo-tree-id433 . -127) (undo-tree-id434 . -127) (undo-tree-id435 . -159) (undo-tree-id436 . -159) (undo-tree-id437 . -228) (undo-tree-id438 . -228) (undo-tree-id439 . -268) (undo-tree-id440 . -268) (undo-tree-id441 . -309) (undo-tree-id442 . -309) (undo-tree-id443 . -349) (undo-tree-id444 . -349) (undo-tree-id445 . -378) (undo-tree-id446 . -378) (undo-tree-id447 . -461) (undo-tree-id448 . -461) (undo-tree-id449 . -517) (undo-tree-id450 . -517) (undo-tree-id451 . -617) (undo-tree-id452 . -617) (undo-tree-id453 . -517) (undo-tree-id454 . -517) (undo-tree-id455 . -517) (undo-tree-id456 . -517) (undo-tree-id457 . -461) (undo-tree-id458 . -461) (undo-tree-id459 . -378) (undo-tree-id460 . -378) (undo-tree-id461 . -349) (undo-tree-id462 . -349) (undo-tree-id463 . -309) (undo-tree-id464 . -309) (undo-tree-id465 . -268) (undo-tree-id466 . -268) (undo-tree-id467 . -228) (undo-tree-id468 . -228) (undo-tree-id469 . -159) (undo-tree-id470 . -159) (undo-tree-id471 . -127) (undo-tree-id472 . -127) (undo-tree-id473 . -94) (undo-tree-id474 . -94) (undo-tree-id475 . -63) (undo-tree-id476 . -63) (undo-tree-id477 . -9) (undo-tree-id478 . -9) (undo-tree-id479 . 992) (undo-tree-id480 . -16) (undo-tree-id481 . -16) (undo-tree-id482 . -16) (undo-tree-id483 . -16) (undo-tree-id484 . -16) (undo-tree-id485 . -16) (undo-tree-id486 . -70) (undo-tree-id487 . -70) (undo-tree-id488 . -101) (undo-tree-id489 . -101) (undo-tree-id490 . -134) (undo-tree-id491 . -134) (undo-tree-id492 . -166) (undo-tree-id493 . -166) (undo-tree-id494 . -166) (undo-tree-id495 . -166) (undo-tree-id496 . -235) (undo-tree-id497 . -235) (undo-tree-id498 . -275) (undo-tree-id499 . -275) (undo-tree-id500 . -316) (undo-tree-id501 . -316) (undo-tree-id502 . -356) (undo-tree-id503 . -356) (undo-tree-id504 . -385) (undo-tree-id505 . -385) (undo-tree-id506 . -468) (undo-tree-id507 . -468) (undo-tree-id508 . -524) (undo-tree-id509 . -524) (undo-tree-id510 . -624) (undo-tree-id511 . -624) (undo-tree-id512 . -657) (undo-tree-id513 . -657) (undo-tree-id514 . -746) (undo-tree-id515 . -746) (undo-tree-id516 . -773) (undo-tree-id517 . -773) (undo-tree-id518 . -809) (undo-tree-id519 . -809) (undo-tree-id520 . -832) (undo-tree-id521 . -832) (undo-tree-id522 . -870) (undo-tree-id523 . -870) (undo-tree-id524 . -963) (undo-tree-id525 . -963) (undo-tree-id526 . -980) (undo-tree-id527 . -980) (undo-tree-id528 . -980) (undo-tree-id529 . -980) (undo-tree-id530 . -991) (undo-tree-id531 . -991) (undo-tree-id532 . -957) (undo-tree-id533 . -957) (undo-tree-id534 . -957) (undo-tree-id535 . -957) (undo-tree-id536 . -864) (undo-tree-id537 . -864) (undo-tree-id538 . -826) (undo-tree-id539 . -826) (undo-tree-id540 . -803) (undo-tree-id541 . -803) (undo-tree-id542 . -767) (undo-tree-id543 . -767) (undo-tree-id544 . -740) (undo-tree-id545 . -740) (undo-tree-id546 . -651) (undo-tree-id547 . -651) (undo-tree-id548 . -618) (undo-tree-id549 . -618) (undo-tree-id550 . -518) (undo-tree-id551 . -518) (undo-tree-id552 . -462) (undo-tree-id553 . -462) (undo-tree-id554 . -379) (undo-tree-id555 . -379) (undo-tree-id556 . -350) (undo-tree-id557 . -350) (undo-tree-id558 . -310) (undo-tree-id559 . -310) (undo-tree-id560 . -269) (undo-tree-id561 . -269) (undo-tree-id562 . -229) (undo-tree-id563 . -229) (undo-tree-id564 . -160) (undo-tree-id565 . -160) (undo-tree-id566 . -128) (undo-tree-id567 . -128) (undo-tree-id568 . -95) (undo-tree-id569 . -95) (undo-tree-id570 . -817) (undo-tree-id571 . -817) (undo-tree-id572 . -370) (undo-tree-id573 . -370) (undo-tree-id574 . -642) (undo-tree-id575 . -642) (undo-tree-id576 . -948) (undo-tree-id577 . -642) (undo-tree-id578 . -642) (undo-tree-id579 . -642) (undo-tree-id580 . -642) (undo-tree-id581 . -642) (undo-tree-id582 . -642) (undo-tree-id583 . -370) (undo-tree-id584 . -948) (undo-tree-id585 . -948) (undo-tree-id586 . -990) (undo-tree-id587 . -990) (undo-tree-id588 . -70) (undo-tree-id589 . -55) (undo-tree-id590 . -70) (undo-tree-id591 . -70) (undo-tree-id592 . -70) (undo-tree-id593 . -70) (undo-tree-id594 . -70) (4882 . 4883) (nil rear-nonsticky t 3899 . 3900)) (25820 35205 208316 389000) 0 nil])
([nil nil ((#("        for (col_i, cell) in row.iter().enumerate() {
            if cell.walls[Walls::South as usize] {
" 0 7 (fontified t) 7 8 (fontified t rear-nonsticky t) 8 11 (fontified t face font-lock-keyword-face) 11 26 (fontified t) 26 28 (fontified t face font-lock-keyword-face) 28 66 (fontified t) 66 68 (fontified t face font-lock-keyword-face) 68 80 (fontified t) 80 85 (fontified t face font-lock-type-face) 85 87 (fontified t) 87 92 (fontified t face font-lock-type-face) 92 93 (fontified t) 93 95 (fontified t face font-lock-keyword-face) 95 96 (fontified t) 96 101 (fontified t face font-lock-type-face) 101 105 (fontified t)) . 3891) (undo-tree-id923 . -62) (undo-tree-id924 . -8) (undo-tree-id925 . -62) (undo-tree-id926 . -104) (undo-tree-id927 . -8) (undo-tree-id928 . -8) (undo-tree-id929 . -8) (undo-tree-id930 . -8) (undo-tree-id931 . -54) (undo-tree-id932 . -62) (undo-tree-id933 . -62) (undo-tree-id934 . -62) (undo-tree-id935 . -62) (undo-tree-id936 . -105) 3953) nil (25820 35281 200087 75000) 0 nil])
([nil nil ((3894 . 3900) (#("/" 0 1 (fontified t face font-lock-doc-face)) . -3894) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -3895) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -3896) (undo-tree-id392 . -1) (undo-tree-id393 . -1) 3897 (3892 . 3897) (3891 . 3892)) ((#("	" 0 1 (fontified nil)) . 3891) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (#("//// " 0 2 (fontified nil face font-lock-comment-delimiter-face) 2 3 (fontified nil face font-lock-doc-face) 3 4 (fontified nil face font-lock-comment-delimiter-face) 4 5 (fontified nil face font-lock-comment-delimiter-face)) . 3892) (undo-tree-id419 . -4) (undo-tree-id420 . -4) (3894 . 3897) (#(" South" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 6 (fontified t face font-lock-comment-face)) . 3894)) (25820 35203 416005 464000) 0 nil])
([nil nil ((#("            }
        }
" 0 23 (fontified t) 23 24 (fontified t)) . 4761) (undo-tree-id709 . -22) (undo-tree-id710 . -8) (undo-tree-id711 . -22) (undo-tree-id712 . -23) (undo-tree-id713 . -24) (undo-tree-id714 . -24) (undo-tree-id715 . -24) (undo-tree-id716 . -24) (undo-tree-id717 . -24) (undo-tree-id718 . -24) (undo-tree-id719 . -24) (undo-tree-id720 . -24) (undo-tree-id721 . -24) (undo-tree-id722 . -24) (undo-tree-id723 . -24) (undo-tree-id724 . -24) (undo-tree-id725 . -24) (undo-tree-id726 . -24) (undo-tree-id727 . -24) (undo-tree-id728 . -24) (undo-tree-id729 . -24) (undo-tree-id730 . -24) (undo-tree-id731 . -24) (undo-tree-id732 . -24) (undo-tree-id733 . -24) (undo-tree-id734 . -24) (undo-tree-id735 . -24) (undo-tree-id736 . -24) (undo-tree-id737 . -24) (undo-tree-id738 . -24) (undo-tree-id739 . -24) (undo-tree-id740 . -24) (undo-tree-id741 . -24) (undo-tree-id742 . -24) (undo-tree-id743 . -24) (undo-tree-id744 . -24) (undo-tree-id745 . -24) (undo-tree-id746 . -24) (undo-tree-id747 . -24) (undo-tree-id748 . -24) (undo-tree-id749 . -24) (undo-tree-id750 . -24) (undo-tree-id751 . -24) (undo-tree-id752 . -24) (undo-tree-id753 . -24) (undo-tree-id754 . -24) (undo-tree-id755 . -24) (undo-tree-id756 . -24) (undo-tree-id757 . -24) (undo-tree-id758 . -24) (undo-tree-id759 . -24) (undo-tree-id760 . -24) (undo-tree-id761 . -24) (undo-tree-id762 . -24) (undo-tree-id763 . -24) (undo-tree-id764 . -24) (undo-tree-id765 . -24) (undo-tree-id766 . -24) (undo-tree-id767 . -24) (undo-tree-id768 . -24) (undo-tree-id769 . -24) (undo-tree-id770 . -24) (undo-tree-id771 . -24) (undo-tree-id772 . -24) (undo-tree-id773 . -24) (undo-tree-id774 . -24) (undo-tree-id775 . -24) (undo-tree-id776 . -24) (undo-tree-id777 . -24) (undo-tree-id778 . -24) (undo-tree-id779 . -24) (undo-tree-id780 . -24) (undo-tree-id781 . -24) (undo-tree-id782 . -24) (undo-tree-id783 . -24) (undo-tree-id784 . -24) (undo-tree-id785 . -24) (undo-tree-id786 . -24) (undo-tree-id787 . -24) (undo-tree-id788 . -24) (undo-tree-id789 . -24) (undo-tree-id790 . -24) (undo-tree-id791 . -24) (undo-tree-id792 . -24) (undo-tree-id793 . -24) (undo-tree-id794 . -24) (undo-tree-id795 . -24) (undo-tree-id796 . -24) (undo-tree-id797 . -24) (undo-tree-id798 . -24) (undo-tree-id799 . -24) (undo-tree-id800 . -24) (undo-tree-id801 . -24) (undo-tree-id802 . -24) (undo-tree-id803 . -24) (undo-tree-id804 . -24) (undo-tree-id805 . -24) (undo-tree-id806 . -24) (undo-tree-id807 . -24) (undo-tree-id808 . -24) (undo-tree-id809 . -24) (undo-tree-id810 . -24) (undo-tree-id811 . -24) (undo-tree-id812 . -24) (undo-tree-id813 . -24) (undo-tree-id814 . -24) (undo-tree-id815 . -24) (undo-tree-id816 . -24) (undo-tree-id817 . -24) (undo-tree-id818 . -24) (undo-tree-id819 . -24) (undo-tree-id820 . -24) (undo-tree-id821 . -24) (undo-tree-id822 . -24) (undo-tree-id823 . -24) (undo-tree-id824 . -24) (undo-tree-id825 . -24) (undo-tree-id826 . -24) (undo-tree-id827 . -24) (undo-tree-id828 . -24) (undo-tree-id829 . -24) (undo-tree-id830 . -24) (undo-tree-id831 . -24) (undo-tree-id832 . -24) (undo-tree-id833 . -24) (undo-tree-id834 . -24) (undo-tree-id835 . -24) (undo-tree-id836 . -24) (undo-tree-id837 . -24) (undo-tree-id838 . -24) (undo-tree-id839 . -24) (undo-tree-id840 . -24) (undo-tree-id841 . -24) (undo-tree-id842 . -24) (undo-tree-id843 . -24) (undo-tree-id844 . -24) (undo-tree-id845 . -24) (undo-tree-id846 . -24) (undo-tree-id847 . -24) (undo-tree-id848 . -24) (undo-tree-id849 . -24) (undo-tree-id850 . -24) (undo-tree-id851 . -24) (undo-tree-id852 . -24) (undo-tree-id853 . -24) (undo-tree-id854 . -24) (undo-tree-id855 . -24) (undo-tree-id856 . -24) (undo-tree-id857 . -24) (undo-tree-id858 . -24) (undo-tree-id859 . -24) (undo-tree-id860 . -24) (undo-tree-id861 . -24) (undo-tree-id862 . -24) (undo-tree-id863 . -24) (undo-tree-id864 . -24) (undo-tree-id865 . -24) (undo-tree-id866 . -24) (undo-tree-id867 . -24) (undo-tree-id868 . -24) (undo-tree-id869 . -24) (undo-tree-id870 . -24) (undo-tree-id871 . -24) (undo-tree-id872 . -24) (undo-tree-id873 . -24) (undo-tree-id874 . -24) (undo-tree-id875 . -24) (undo-tree-id876 . -24) (undo-tree-id877 . -24) (undo-tree-id878 . -24) (undo-tree-id879 . -24) (undo-tree-id880 . -24) (undo-tree-id881 . -24) (undo-tree-id882 . -24) (undo-tree-id883 . -24) (undo-tree-id884 . -24) (undo-tree-id885 . -24) (undo-tree-id886 . -24) (undo-tree-id887 . -24) (undo-tree-id888 . -24) (undo-tree-id889 . -24) (undo-tree-id890 . -24) (undo-tree-id891 . -24) (undo-tree-id892 . -24) (undo-tree-id893 . -24) (undo-tree-id894 . -24) (undo-tree-id895 . -24) (undo-tree-id896 . -24) (undo-tree-id897 . -24) (undo-tree-id898 . -24) (undo-tree-id899 . -24) (undo-tree-id900 . -24) (undo-tree-id901 . -24) (undo-tree-id902 . -24) (undo-tree-id903 . -24) (undo-tree-id904 . -24) (undo-tree-id905 . -24) (undo-tree-id906 . -24) (undo-tree-id907 . -24) (undo-tree-id908 . -24) (undo-tree-id909 . -24) (undo-tree-id910 . -24) (undo-tree-id911 . -24) (undo-tree-id912 . -8) (undo-tree-id913 . -8) (undo-tree-id914 . -8) (undo-tree-id915 . -8) (undo-tree-id916 . -14) (undo-tree-id917 . -22) (undo-tree-id918 . -24) (undo-tree-id919 . -22) (undo-tree-id920 . -22) (undo-tree-id921 . -22) (undo-tree-id922 . -24) 4783) nil (25820 35281 200071 361000) 0 nil])
([nil nil ((#("        for (col_i, cell) in row.iter().enumerate() {
            if cell.walls[0] {
" 0 7 (fontified t) 7 8 (rear-nonsticky t fontified t) 8 11 (fontified t face font-lock-keyword-face) 11 26 (fontified t) 26 28 (fontified t face font-lock-keyword-face) 28 66 (fontified t) 66 68 (fontified t face font-lock-keyword-face) 68 85 (fontified t)) . 3901) (undo-tree-id360 . -69) (undo-tree-id361 . -15) (undo-tree-id362 . -69) (undo-tree-id363 . -84) (undo-tree-id364 . -8) (undo-tree-id365 . -8) (undo-tree-id366 . -62) (undo-tree-id367 . -62) (undo-tree-id368 . -62) (undo-tree-id369 . -62) (undo-tree-id370 . -8) (undo-tree-id371 . -8) (undo-tree-id372 . -15) (undo-tree-id373 . -15) (undo-tree-id374 . -15) (undo-tree-id375 . -15) (undo-tree-id376 . -15) (undo-tree-id377 . -15) (undo-tree-id378 . -54) (undo-tree-id379 . -69) (undo-tree-id380 . -69) (undo-tree-id381 . -69) (undo-tree-id382 . -69) (undo-tree-id383 . -85) 3970) ((3901 . 3986)) (25820 35202 968453 332000) 0 nil])
([nil nil ((#("                " 0 16 (fontified nil)) . -4405) (undo-tree-id671 . -8) (undo-tree-id672 . -8) (4400 . 4405) (#("                    " 0 20 (fontified nil)) . -4327) (undo-tree-id673 . -8) (undo-tree-id674 . -8) (4325 . 4327) (#("                    " 0 20 (fontified nil)) . -4307) (undo-tree-id675 . -8) (undo-tree-id676 . -8) (4305 . 4307) (#("                    " 0 20 (fontified nil)) . -4302) (undo-tree-id677 . -8) (undo-tree-id678 . -8) (4300 . 4302) (#("                        " 0 24 (fontified nil)) . -4288) (undo-tree-id679 . -8) (undo-tree-id680 . -8) (4282 . 4288) (#("                        " 0 24 (fontified nil)) . -4279) (undo-tree-id681 . -8) (undo-tree-id682 . -8) (4273 . 4279) (#("                            " 0 28 (fontified nil)) . -4212) (undo-tree-id683 . -8) (undo-tree-id684 . -8) (4209 . 4212) (#("                            " 0 28 (fontified nil)) . -4204) (undo-tree-id685 . -8) (undo-tree-id686 . -8) (4201 . 4204) (#("                            " 0 28 (fontified nil)) . -4141) (undo-tree-id687 . -8) (undo-tree-id688 . -8) (4138 . 4141) (#("                        " 0 24 (fontified nil)) . -4106) (undo-tree-id689 . -8) (undo-tree-id690 . -8) (4100 . 4106) (#("                        " 0 24 (fontified nil)) . -4041) (undo-tree-id691 . -8) (undo-tree-id692 . -8) (4035 . 4041) (#("                        " 0 24 (fontified nil)) . -4030) (undo-tree-id693 . -8) (undo-tree-id694 . -8) (4024 . 4030) (#("                            " 0 28 (fontified nil)) . -4012) (undo-tree-id695 . -8) (undo-tree-id696 . -8) (4009 . 4012) (#("                            " 0 28 (fontified nil)) . -3996) (undo-tree-id697 . -8) (undo-tree-id698 . -8) (undo-tree-id699 . -8) (undo-tree-id700 . -8) (3993 . 3996) (#("                            " 0 28 (fontified nil)) . -3981) (undo-tree-id701 . -8) (undo-tree-id702 . -8) (3978 . 3981) (#("                        " 0 24 (fontified nil)) . -3933) (undo-tree-id703 . -8) (undo-tree-id704 . -8) (3927 . 3933) (#("                    " 0 20 (fontified nil)) . -3915) (undo-tree-id705 . -8) (undo-tree-id706 . -8) (3913 . 3915) (#("                " 0 16 (fontified nil)) . -3896) (undo-tree-id707 . -8) (undo-tree-id708 . -8) (3891 . 3896)) nil (25820 35281 199728 880000) 0 nil])
([nil nil ((#("            }
        }
" 0 23 (fontified t) 23 24 (fontified t)) . 4783) (undo-tree-id346 . -23) (undo-tree-id347 . -12) (undo-tree-id348 . -23) (undo-tree-id349 . -23) (undo-tree-id350 . -12) (undo-tree-id351 . -12) (undo-tree-id352 . -12) (undo-tree-id353 . -12) (undo-tree-id354 . -14) (undo-tree-id355 . -23) (undo-tree-id356 . -23) (undo-tree-id357 . -23) (undo-tree-id358 . -23) (undo-tree-id359 . -24) 4806) ((4783 . 4807)) (25820 35202 601511 838000) 0 nil])
([nil nil ((#("	    " 0 5 (fontified nil)) . -4403) (undo-tree-id633 . -5) (undo-tree-id634 . -5) (4402 . 4403) (#("		" 0 2 (fontified nil)) . -4329) (undo-tree-id635 . -2) (undo-tree-id636 . -2) (4324 . 4329) (#("		" 0 2 (fontified nil)) . -4306) (undo-tree-id637 . -2) (undo-tree-id638 . -2) (4301 . 4306) (#("		" 0 2 (fontified nil)) . -4298) (undo-tree-id639 . -2) (undo-tree-id640 . -2) (4293 . 4298) (#("		    " 0 6 (fontified nil)) . -4281) (undo-tree-id641 . -6) (undo-tree-id642 . -6) (4279 . 4281) (#("		    " 0 6 (fontified nil)) . -4276) (undo-tree-id643 . -6) (undo-tree-id644 . -6) (4274 . 4276) (#("			" 0 3 (fontified nil)) . -4213) (undo-tree-id645 . -3) (undo-tree-id646 . -3) (4207 . 4213) (#("			" 0 3 (fontified nil)) . -4202) (undo-tree-id647 . -3) (undo-tree-id648 . -3) (4196 . 4202) (#("			" 0 3 (fontified nil)) . -4136) (undo-tree-id649 . -3) (undo-tree-id650 . -3) (4130 . 4136) (#("		    " 0 6 (fontified nil)) . -4098) (undo-tree-id651 . -6) (undo-tree-id652 . -6) (4096 . 4098) (#("		    " 0 6 (fontified nil)) . -4037) (undo-tree-id653 . -6) (undo-tree-id654 . -6) (4035 . 4037) (#("		    " 0 6 (fontified nil)) . -4030) (undo-tree-id655 . -6) (undo-tree-id656 . -6) (4028 . 4030) (#("			" 0 3 (fontified nil)) . -4016) (undo-tree-id657 . -3) (undo-tree-id658 . -3) (4010 . 4016) (#("			" 0 3 (fontified nil)) . -3997) (undo-tree-id659 . -3) (undo-tree-id660 . -3) (undo-tree-id661 . -3) (undo-tree-id662 . -3) (3991 . 3997) (#("			" 0 3 (fontified nil)) . -3979) (undo-tree-id663 . -3) (undo-tree-id664 . -3) (3973 . 3979) (#("		    " 0 6 (fontified nil)) . -3928) (undo-tree-id665 . -6) (undo-tree-id666 . -6) (3926 . 3928) (#("		" 0 2 (fontified nil)) . -3914) (undo-tree-id667 . -2) (undo-tree-id668 . -2) (3909 . 3914) (#("	    " 0 5 (fontified nil)) . -3892) (undo-tree-id669 . -5) (undo-tree-id670 . -5) (3891 . 3892) 4400) nil (25820 35281 199697 574000) 0 nil])
([nil nil ((#("                " 0 16 (fontified nil)) . -4427) (undo-tree-id219 . -9) (undo-tree-id220 . -9) (undo-tree-id221 . -15) (undo-tree-id222 . -15) (undo-tree-id223 . -9) (undo-tree-id224 . -9) (undo-tree-id225 . -9) (undo-tree-id226 . -9) (4422 . 4427) (#("                    " 0 20 (fontified nil)) . -4349) (undo-tree-id227 . -15) (undo-tree-id228 . -15) (undo-tree-id229 . -9) (undo-tree-id230 . -9) (4347 . 4349) (#("                    " 0 20 (fontified nil)) . -4329) (undo-tree-id231 . -15) (undo-tree-id232 . -15) (undo-tree-id233 . -9) (undo-tree-id234 . -9) (4327 . 4329) (#("                    " 0 20 (fontified nil)) . -4324) (undo-tree-id235 . -15) (undo-tree-id236 . -15) (undo-tree-id237 . -9) (undo-tree-id238 . -9) (4322 . 4324) (#("                        " 0 24 (fontified nil)) . -4310) (undo-tree-id239 . -15) (undo-tree-id240 . -15) (undo-tree-id241 . -9) (undo-tree-id242 . -9) (4304 . 4310) (#("                        " 0 24 (fontified nil)) . -4301) (undo-tree-id243 . -15) (undo-tree-id244 . -15) (undo-tree-id245 . -9) (undo-tree-id246 . -9) (4295 . 4301) (#("                            " 0 28 (fontified nil)) . -4234) (undo-tree-id247 . -15) (undo-tree-id248 . -15) (undo-tree-id249 . -9) (undo-tree-id250 . -9) (4231 . 4234) (#("                            " 0 28 (fontified nil)) . -4226) (undo-tree-id251 . -8) (undo-tree-id252 . -8) (undo-tree-id253 . -15) (undo-tree-id254 . -15) (undo-tree-id255 . -9) (undo-tree-id256 . -9) (4223 . 4226) (#("                            " 0 28 (fontified nil)) . -4151) (undo-tree-id257 . -8) (undo-tree-id258 . -8) (undo-tree-id259 . -8) (undo-tree-id260 . -8) (undo-tree-id261 . -8) (undo-tree-id262 . -8) (undo-tree-id263 . -15) (undo-tree-id264 . -15) (undo-tree-id265 . -9) (undo-tree-id266 . -9) (undo-tree-id267 . -8) (4148 . 4151) (#("                        " 0 24 (fontified nil)) . -4116) (undo-tree-id268 . -8) (undo-tree-id269 . -8) (undo-tree-id270 . -8) (undo-tree-id271 . -8) (undo-tree-id272 . -15) (undo-tree-id273 . -15) (undo-tree-id274 . -9) (undo-tree-id275 . -9) (4110 . 4116) (#("                        " 0 24 (fontified nil)) . -4051) (undo-tree-id276 . -8) (undo-tree-id277 . -8) (undo-tree-id278 . -8) (undo-tree-id279 . -8) (undo-tree-id280 . -15) (undo-tree-id281 . -15) (undo-tree-id282 . -9) (undo-tree-id283 . -9) (4045 . 4051) (#("                        " 0 24 (fontified nil)) . -4040) (undo-tree-id284 . -8) (undo-tree-id285 . -8) (undo-tree-id286 . -8) (undo-tree-id287 . -8) (undo-tree-id288 . -15) (undo-tree-id289 . -15) (undo-tree-id290 . -9) (undo-tree-id291 . -9) (4034 . 4040) (#("                            " 0 28 (fontified nil)) . -4022) (undo-tree-id292 . -8) (undo-tree-id293 . -8) (undo-tree-id294 . -8) (undo-tree-id295 . -8) (undo-tree-id296 . -15) (undo-tree-id297 . -15) (undo-tree-id298 . -9) (undo-tree-id299 . -9) (4019 . 4022) (#("                            " 0 28 (fontified nil)) . -4006) (undo-tree-id300 . -8) (undo-tree-id301 . -8) (undo-tree-id302 . -8) (undo-tree-id303 . -8) (undo-tree-id304 . -15) (undo-tree-id305 . -15) (undo-tree-id306 . -9) (undo-tree-id307 . -9) (4003 . 4006) (#("                            " 0 28 (fontified nil)) . -3991) (undo-tree-id308 . -8) (undo-tree-id309 . -8) (undo-tree-id310 . -8) (undo-tree-id311 . -8) (undo-tree-id312 . -15) (undo-tree-id313 . -15) (undo-tree-id314 . -9) (undo-tree-id315 . -9) (3988 . 3991) (#("                        " 0 24 (fontified nil)) . -3943) (undo-tree-id316 . -8) (undo-tree-id317 . -8) (undo-tree-id318 . -8) (undo-tree-id319 . -8) (undo-tree-id320 . -15) (undo-tree-id321 . -15) (undo-tree-id322 . -15) (undo-tree-id323 . -15) (undo-tree-id324 . -9) (undo-tree-id325 . -9) (3937 . 3943) (#("                    " 0 20 (fontified nil)) . -3925) (undo-tree-id326 . -8) (undo-tree-id327 . -8) (undo-tree-id328 . -8) (undo-tree-id329 . -8) (undo-tree-id330 . -15) (undo-tree-id331 . -15) (undo-tree-id332 . -9) (undo-tree-id333 . -9) (3923 . 3925) (#("                " 0 16 (fontified nil)) . -3906) (undo-tree-id334 . -9) (undo-tree-id335 . -8) (undo-tree-id336 . -8) (undo-tree-id337 . -8) (undo-tree-id338 . -8) (undo-tree-id339 . -15) (undo-tree-id340 . -15) (undo-tree-id341 . -9) (undo-tree-id342 . -9) (undo-tree-id343 . -9) (undo-tree-id344 . -9) (undo-tree-id345 . -9) (3901 . 3906) 3910) ((#("	    " 0 5 (fontified nil)) . 3901) (undo-tree-id416 . -2) (3906 . 3922) (#("		" 0 2 (fontified nil)) . 3923) (3925 . 3945) (#("		    " 0 6 (fontified nil)) . 3937) (3943 . 3967) (#("			" 0 3 (fontified nil)) . 3988) (3991 . 4019) (#("			" 0 3 (fontified nil)) . 4003) (4006 . 4034) (#("			" 0 3 (fontified nil)) . 4019) (4022 . 4050) (#("		    " 0 6 (fontified nil)) . 4034) (4040 . 4064) (#("		    " 0 6 (fontified nil)) . 4045) (4051 . 4075) (#("		    " 0 6 (fontified nil)) . 4110) (4116 . 4140) (#("			" 0 3 (fontified nil)) . 4148) (4151 . 4179) (#("			" 0 3 (fontified nil)) . 4223) (4226 . 4254) (#("			" 0 3 (fontified nil)) . 4231) (4234 . 4262) (#("		    " 0 6 (fontified nil)) . 4295) (4301 . 4325) (#("		    " 0 6 (fontified nil)) . 4304) (4310 . 4334) (#("		" 0 2 (fontified nil)) . 4322) (4324 . 4344) (#("		" 0 2 (fontified nil)) . 4327) (4329 . 4349) (#("		" 0 2 (fontified nil)) . 4347) (4349 . 4369) (#("	    " 0 5 (fontified nil)) . 4422) (4427 . 4443)) (25820 35202 73656 354000) 0 nil])
([nil nil ((3892 . 3900) (3890 . 3892) 3878) nil (25820 35281 199435 419000) 0 nil])
([nil nil ((#("	    " 0 5 (fontified nil)) . -4425) (undo-tree-id96 . -5) (undo-tree-id97 . -5) (undo-tree-id98 . -5) (undo-tree-id99 . -5) (undo-tree-id100 . -5) (undo-tree-id101 . -5) (4424 . 4425) (#("		" 0 2 (fontified nil)) . -4351) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (4346 . 4351) (#("		" 0 2 (fontified nil)) . -4328) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (4323 . 4328) (#("		" 0 2 (fontified nil)) . -4320) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (4315 . 4320) (#("		    " 0 6 (fontified nil)) . -4303) (undo-tree-id114 . -6) (undo-tree-id115 . -6) (undo-tree-id116 . -6) (undo-tree-id117 . -6) (4301 . 4303) (#("		    " 0 6 (fontified nil)) . -4298) (undo-tree-id118 . -6) (undo-tree-id119 . -6) (undo-tree-id120 . -6) (undo-tree-id121 . -6) (4296 . 4298) (#("			" 0 3 (fontified nil)) . -4235) (undo-tree-id122 . -3) (undo-tree-id123 . -3) (undo-tree-id124 . -3) (undo-tree-id125 . -3) (4229 . 4235) (#("			" 0 3 (fontified nil)) . -4224) (undo-tree-id126 . -3) (undo-tree-id127 . -3) (undo-tree-id128 . -3) (undo-tree-id129 . -3) (undo-tree-id130 . -3) (undo-tree-id131 . -3) (4218 . 4224) (#("			" 0 3 (fontified nil)) . -4146) (undo-tree-id132 . -3) (undo-tree-id133 . -3) (undo-tree-id134 . -3) (undo-tree-id135 . -3) (undo-tree-id136 . -3) (undo-tree-id137 . -3) (undo-tree-id138 . -3) (undo-tree-id139 . -3) (undo-tree-id140 . -3) (undo-tree-id141 . -3) (undo-tree-id142 . -3) (4140 . 4146) (#("		    " 0 6 (fontified nil)) . -4108) (undo-tree-id143 . -6) (undo-tree-id144 . -6) (undo-tree-id145 . -6) (undo-tree-id146 . -6) (undo-tree-id147 . -6) (undo-tree-id148 . -6) (undo-tree-id149 . -6) (undo-tree-id150 . -6) (4106 . 4108) (#("		    " 0 6 (fontified nil)) . -4047) (undo-tree-id151 . -6) (undo-tree-id152 . -6) (undo-tree-id153 . -6) (undo-tree-id154 . -6) (undo-tree-id155 . -6) (undo-tree-id156 . -6) (undo-tree-id157 . -6) (undo-tree-id158 . -6) (4045 . 4047) (#("		    " 0 6 (fontified nil)) . -4040) (undo-tree-id159 . -6) (undo-tree-id160 . -6) (undo-tree-id161 . -6) (undo-tree-id162 . -6) (undo-tree-id163 . -6) (undo-tree-id164 . -6) (undo-tree-id165 . -6) (undo-tree-id166 . -6) (4038 . 4040) (#("			" 0 3 (fontified nil)) . -4026) (undo-tree-id167 . -3) (undo-tree-id168 . -3) (undo-tree-id169 . -3) (undo-tree-id170 . -3) (undo-tree-id171 . -3) (undo-tree-id172 . -3) (undo-tree-id173 . -3) (undo-tree-id174 . -3) (4020 . 4026) (#("			" 0 3 (fontified nil)) . -4007) (undo-tree-id175 . -3) (undo-tree-id176 . -3) (undo-tree-id177 . -3) (undo-tree-id178 . -3) (undo-tree-id179 . -3) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -3) (4001 . 4007) (#("			" 0 3 (fontified nil)) . -3989) (undo-tree-id183 . -3) (undo-tree-id184 . -3) (undo-tree-id185 . -3) (undo-tree-id186 . -3) (undo-tree-id187 . -3) (undo-tree-id188 . -3) (undo-tree-id189 . -3) (undo-tree-id190 . -3) (3983 . 3989) (#("		    " 0 6 (fontified nil)) . -3938) (undo-tree-id191 . -6) (undo-tree-id192 . -6) (undo-tree-id193 . -6) (undo-tree-id194 . -6) (undo-tree-id195 . -6) (undo-tree-id196 . -6) (undo-tree-id197 . -6) (undo-tree-id198 . -6) (undo-tree-id199 . -6) (undo-tree-id200 . -6) (3936 . 3938) (#("		" 0 2 (fontified nil)) . -3924) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (3919 . 3924) (#("	    " 0 5 (fontified nil)) . -3902) (undo-tree-id209 . -2) (undo-tree-id210 . -5) (undo-tree-id211 . -5) (undo-tree-id212 . -5) (undo-tree-id213 . -5) (undo-tree-id214 . -5) (undo-tree-id215 . -5) (undo-tree-id216 . -5) (undo-tree-id217 . -5) (undo-tree-id218 . -2) (3901 . 3902) 4422) ((#("	" 0 1 (fontified nil)) . 3901) (3902 . 3907) (#("	    " 0 1 (fontified nil) 1 5 (fontified nil)) . 3919) (3924 . 3926) (#("		" 0 2 (fontified nil)) . 3936) (3938 . 3944) (#("		    " 0 2 (fontified nil) 2 6 (fontified nil)) . 3983) (3989 . 3992) (#("		    " 0 2 (fontified nil) 2 6 (fontified nil)) . 4001) (4007 . 4010) (#("		    " 0 2 (fontified nil) 2 6 (fontified nil)) . 4020) (4026 . 4029) (#("		" 0 2 (fontified nil)) . 4038) (4040 . 4046) (#("		" 0 2 (fontified nil)) . 4045) (4047 . 4053) (#("		" 0 2 (fontified nil)) . 4106) (4108 . 4114) (#("		    " 0 2 (fontified nil) 2 6 (fontified nil)) . 4140) (4146 . 4149) (#("		    " 0 2 (fontified nil) 2 6 (fontified nil)) . 4218) (4224 . 4227) (#("		    " 0 2 (fontified nil) 2 6 (fontified nil)) . 4229) (undo-tree-id406 . -6) (undo-tree-id407 . -6) (undo-tree-id408 . -6) (undo-tree-id409 . -6) (undo-tree-id410 . -6) (undo-tree-id411 . -6) (undo-tree-id412 . -6) (undo-tree-id413 . -6) (undo-tree-id414 . -6) (undo-tree-id415 . -6) (4235 . 4238) (#("		" 0 2 (fontified nil)) . 4296) (4298 . 4304) (#("		" 0 2 (fontified nil)) . 4301) (4303 . 4309) (#("	    " 0 1 (fontified nil) 1 5 (fontified nil)) . 4315) (4320 . 4322) (#("	    " 0 1 (fontified nil) 1 5 (fontified nil)) . 4323) (4328 . 4330) (#("	    " 0 1 (fontified nil) 1 5 (fontified nil)) . 4346) (4351 . 4353) (#("	" 0 1 (fontified nil)) . 4424) (4425 . 4430)) (25820 35201 625755 889000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3999) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (#("*" 0 1 (fontified t)) . -4000) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (#(" " 0 1 (fontified t)) . -4001) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) 4002 (3999 . 4002)) nil (25820 35281 199433 894000) 0 nil])
([nil nil ((3891 . 3899) (#("	" 0 1 (fontified t)) . 3891) (3901 . 3909) (#("	" 0 1 (fontified t)) . 3901) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (3919 . 3927) (#("	" 0 1 (fontified t)) . 3919) (3936 . 3952) (#("		" 0 2 (fontified t)) . 3936) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (3983 . 3989) (#("		" 0 2 (fontified t)) . 3983) (3989 . 3999) (4001 . 4006) (#("		" 0 2 (fontified t)) . 4001) (4007 . 4018) (4020 . 4025) (#("		" 0 2 (fontified t)) . 4020) (4026 . 4037) (4038 . 4054) (#("		" 0 2 (fontified t)) . 4038) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (4045 . 4061) (#("		" 0 2 (fontified t)) . 4045) (undo-tree-id66 . -2) (undo-tree-id67 . -2) (undo-tree-id68 . -2) (undo-tree-id69 . -2) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (4106 . 4122) (#("		" 0 2 (fontified t)) . 4106) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (4140 . 4143) (#("		" 0 2 (fontified t)) . 4140) (4146 . 4159) (4218 . 4220) (#("		" 0 2 (fontified t)) . 4218) (4224 . 4238) (4229 . 4231) (#("		" 0 2 (fontified t)) . 4229) (4235 . 4249) (4296 . 4312) (#("		" 0 2 (fontified t)) . 4296) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (4301 . 4317) (#("		" 0 2 (fontified t)) . 4301) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (4315 . 4316) (#("	" 0 1 (fontified t)) . 4315) (4320 . 4327) (4323 . 4324) (#("	" 0 1 (fontified t)) . 4323) (4328 . 4335) (#("	" 0 1 (fontified t)) . 4346) (4351 . 4359) (4424 . 4432) (#("	" 0 1 (fontified t)) . 4424) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) 4045) ((4424 . 4425) (#("        " 0 8 (fontified t)) . 4424) (#("        " 0 8 (fontified nil)) . 4351) (4346 . 4347) (#("       " 0 7 (fontified nil)) . 4328) (4323 . 4324) (#(" " 0 1 (fontified t)) . 4323) (#("       " 0 7 (fontified nil)) . 4320) (4315 . 4316) (#(" " 0 1 (fontified t)) . 4315) (4301 . 4303) (#("                " 0 16 (fontified t)) . 4301) (4296 . 4298) (#("                " 0 16 (fontified t)) . 4296) (#("              " 0 14 (fontified nil)) . 4235) (undo-tree-id394 . -14) (undo-tree-id395 . -14) (undo-tree-id396 . -14) (undo-tree-id397 . -14) (undo-tree-id398 . -14) (undo-tree-id399 . -14) (undo-tree-id400 . -14) (undo-tree-id401 . -14) (undo-tree-id402 . -14) (undo-tree-id403 . -14) (undo-tree-id404 . -14) (undo-tree-id405 . -14) (4229 . 4231) (#("  " 0 2 (fontified t)) . 4229) (#("              " 0 14 (fontified nil)) . 4224) (4218 . 4220) (#("  " 0 2 (fontified t)) . 4218) (#("             " 0 13 (fontified nil)) . 4146) (4140 . 4142) (#("   " 0 3 (fontified t)) . 4140) (4106 . 4108) (#("                " 0 16 (fontified t)) . 4106) (4045 . 4047) (#("                " 0 16 (fontified t)) . 4045) (4038 . 4040) (#("                " 0 16 (fontified t)) . 4038) (#("           " 0 11 (fontified nil)) . 4026) (4020 . 4022) (#("     " 0 5 (fontified t)) . 4020) (#("           " 0 11 (fontified nil)) . 4007) (4001 . 4003) (#("     " 0 5 (fontified t)) . 4001) (#("          " 0 10 (fontified nil)) . 3989) (3983 . 3985) (#("      " 0 6 (fontified t)) . 3983) (3936 . 3938) (#("                " 0 16 (fontified t)) . 3936) (3919 . 3920) (#("        " 0 8 (fontified t)) . 3919) (3901 . 3902) (#("        " 0 8 (fontified t)) . 3901) (3891 . 3892) (#("        " 0 8 (fontified t)) . 3891) (t 25820 35190 35223 972000)) (25820 35190 35401 579000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . 1574) (undo-tree-id619 . -1) (undo-tree-id620 . -1)) nil (25820 35281 199425 606000) 0 nil])
nil
([nil nil ((#("3" 0 1 (fontified t)) . 1577) (undo-tree-id617 . -1) (undo-tree-id618 . -1)) nil (25820 35281 199423 381000) 0 nil])
([nil nil ((3997 . 4001)) nil (25820 35281 199421 104000) 0 nil])
([nil nil ((3889 . 3897) (#("	" 0 1 (fontified t)) . 3889) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (3899 . 3907) (#("	" 0 1 (fontified t)) . 3899) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (3917 . 3925) (#("	" 0 1 (fontified t)) . 3917) (3934 . 3950) (#("		" 0 2 (fontified t)) . 3934) (undo-tree-id599 . -2) (undo-tree-id600 . -2) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (3981 . 3987) (#("		" 0 2 (fontified t)) . 3981) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (3987 . 3997) (4003 . 4008) (#("		" 0 2 (fontified t)) . 4003) (4009 . 4020) (4022 . 4027) (#("		" 0 2 (fontified t)) . 4022) (4028 . 4039) (4040 . 4056) (#("		" 0 2 (fontified t)) . 4040) (undo-tree-id605 . -2) (undo-tree-id606 . -2) (4047 . 4063) (#("		" 0 2 (fontified t)) . 4047) (undo-tree-id607 . -2) (undo-tree-id608 . -2) (4108 . 4124) (#("		" 0 2 (fontified t)) . 4108) (undo-tree-id609 . -2) (undo-tree-id610 . -2) (4142 . 4145) (#("		" 0 2 (fontified t)) . 4142) (4148 . 4161) (4208 . 4210) (#("		" 0 2 (fontified t)) . 4208) (4214 . 4228) (4219 . 4221) (#("		" 0 2 (fontified t)) . 4219) (4225 . 4239) (4286 . 4302) (#("		" 0 2 (fontified t)) . 4286) (undo-tree-id611 . -2) (undo-tree-id612 . -2) (4291 . 4307) (#("		" 0 2 (fontified t)) . 4291) (undo-tree-id613 . -2) (undo-tree-id614 . -2) (4305 . 4306) (#("	" 0 1 (fontified t)) . 4305) (4310 . 4317) (4313 . 4314) (#("	" 0 1 (fontified t)) . 4313) (4318 . 4325) (#("	" 0 1 (fontified t)) . 4336) (4341 . 4349) (4414 . 4422) (#("	" 0 1 (fontified t)) . 4414) (undo-tree-id615 . -1) (undo-tree-id616 . -1) 4000) nil (25820 35281 199414 768000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 4281) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (t 25820 35281 198557 747000)) nil (25820 35303 82196 390000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 4281) (undo-tree-id958 . -1) (undo-tree-id959 . -1)) nil (25820 35303 82194 301000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . 4281) (undo-tree-id956 . -1) (undo-tree-id957 . -1)) nil (25820 35303 82192 256000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 4281) (undo-tree-id954 . -1) (undo-tree-id955 . -1)) nil (25820 35303 82190 65000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 4281) (undo-tree-id952 . -1) (undo-tree-id953 . -1)) nil (25820 35303 82188 112000) 0 nil])
([nil nil ((4281 . 4282)) nil (25820 35303 82186 299000) 0 nil])
([nil nil ((4382 . 4383)) nil (25820 35303 82185 789000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 4383) (undo-tree-id949 . 1) (undo-tree-id950 . -1) (undo-tree-id951 . -1)) nil (25820 35303 82185 98000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 4383) (undo-tree-id946 . 1) (undo-tree-id947 . -1) (undo-tree-id948 . -1)) nil (25820 35303 82182 402000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 4383) (undo-tree-id943 . 1) (undo-tree-id944 . -1) (undo-tree-id945 . -1)) nil (25820 35303 82179 221000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 4383) (undo-tree-id940 . 1) (undo-tree-id941 . -1) (undo-tree-id942 . -1)) nil (25820 35303 82175 427000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 4383) (undo-tree-id937 . 1) (undo-tree-id938 . -1) (undo-tree-id939 . -1)) nil (25820 35303 82169 288000) 0 nil])
([nil nil ((4050 . 4052) (t 25820 35303 81891 181000)) nil (25820 35312 759089 921000) 0 nil])
([nil nil ((#(" * 2.0" 0 6 (fontified t)) . 4046) (undo-tree-id962 . -5) (undo-tree-id963 . -5) (undo-tree-id964 . -5) (undo-tree-id965 . -5) (undo-tree-id966 . -5) (undo-tree-id967 . -5) (undo-tree-id968 . -5) (undo-tree-id969 . -5) (undo-tree-id970 . -5) (undo-tree-id971 . -5) (undo-tree-id972 . -5) (undo-tree-id973 . -5) (undo-tree-id974 . -5) (undo-tree-id975 . -5) (undo-tree-id976 . -5) (undo-tree-id977 . -6) (t 25820 35312 758557 891000)) nil (25820 35337 475569 549000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4116 . 4117) (nil fontified nil 4111 . 4117) (4111 . 4117) 4110) nil (25820 35337 475546 354000) 0 nil])
([nil nil ((4283 . 4284) (#("1" 0 1 (fontified t)) . 4283) (undo-tree-id979 . -1) (t 25820 35337 475224 671000)) nil (25820 35359 301311 954000) 0 nil])
([nil nil ((4384 . 4385) (#("1" 0 1 (fontified t)) . 4384) (undo-tree-id978 . -1)) nil (25820 35359 301306 625000) 0 nil])
([nil nil ((4384 . 4385) (#("0" 0 1 (fontified t)) . 4384) (undo-tree-id980 . -1) (t 25820 35359 301891 444000)) nil (25820 35394 866397 390000) 0 nil])
([nil nil ((4384 . 4387) (#("1" 0 1 (fontified t)) . -4384) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) 4385 (t 25820 35394 865224 945000)) nil (25820 35407 333552 32000) 0 nil])
([nil nil ((4386 . 4388) (#("5" 0 1 (fontified t)) . -4386) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) 4387 (t 25820 35407 331891 673000)) nil (25820 35448 181311 75000) 0 nil])
([nil nil ((#("0 as f32 * (room_size + wall_width) - wall_width / 2.0" 0 1 (fontified t) 1 2 (fontified t) 2 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 8 (fontified t face font-lock-type-face) 8 50 (fontified t) 50 54 (fontified t)) . 4283) (undo-tree-id989 . -53) (undo-tree-id990 . -3) (undo-tree-id991 . -3) (undo-tree-id992 . -54) (t 25820 35448 181891 862000)) nil (25820 35479 158529 529000) 0 nil])
([nil nil ((4283 . 4286)) nil (25820 35479 158516 559000) 0 nil])
([nil nil ((4294 . 4300) (4284 . 4294) (#("wall" 0 4 (fontified t)) . -4284) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -2) (undo-tree-id996 . -2) (undo-tree-id997 . -3) (undo-tree-id998 . -3) (undo-tree-id999 . -4) (undo-tree-id1000 . -4) (undo-tree-id1001 . -4) (undo-tree-id1002 . -4) (undo-tree-id1003 . -4) (undo-tree-id1004 . -4) (undo-tree-id1005 . -4) (undo-tree-id1006 . -4) (undo-tree-id1007 . -4) (undo-tree-id1008 . -4) (undo-tree-id1009 . -4) (undo-tree-id1010 . -4) (undo-tree-id1011 . -4) (undo-tree-id1012 . -4) (undo-tree-id1013 . -4) (undo-tree-id1014 . -4) 4288 (4283 . 4288) (#("0" 0 1 (fontified t)) . -4283) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (#("." 0 1 (fontified t)) . -4284) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (#("0" 0 1 (fontified t)) . -4285) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (#(" " 0 1 (fontified t)) . -4286) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) 4287 (4286 . 4287) (t 25820 35479 158558 673000)) nil (25820 35497 16170 788000) 0 nil])
([nil nil ((apply -6 4469 4602 undo--wrap-and-run-primitive-undo 4469 4602 ((4514 . 4517) (4481 . 4484) 4584))) nil (25820 35519 300272 365000) 0 nil])
([nil nil ((4351 . 4352) (t 25820 35519 301892 192000)) nil (25820 35621 942009 686000) 0 nil])
([nil nil ((4372 . 4376) (#("i" 0 1 (fontified t)) . -4372) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (4364 . 4373) (#("+" 0 1 (fontified t)) . -4364) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) 4365 (4353 . 4365) (#("i" 0 1 (fontified t)) . -4353) (undo-tree-id1077 . -1) (4349 . 4354) (#("i" 0 1 (fontified t)) . -4349) (undo-tree-id1078 . -1) (4347 . 4350) (#("0" 0 1 (fontified t)) . -4347) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (#("." 0 1 (fontified t)) . -4348) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (#("4" 0 1 (fontified t)) . -4349) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (#("5" 0 1 (fontified t)) . -4350) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) 4351) nil (25820 35621 942005 762000) 0 nil])
([nil nil ((4347 . 4348)) nil (25820 35621 941961 246000) 0 nil])
([nil nil ((4412 . 4436) 4347) nil (25820 35621 941957 589000) 0 nil])
([nil nil ((4360 . 4365) (4358 . 4360) (t 25820 35621 941892 684000)) nil (25820 35634 611791 673000) 0 nil])
([nil nil ((4370 . 4371) (t 25820 35634 611892 750000)) nil (25820 35667 891045 987000) 0 nil])
([nil nil ((4385 . 4389) (t 25820 35667 891892 910000)) nil (25820 35696 130558 10000) 0 nil])
([nil nil ((4390 . 4391) (4389 . 4390)) nil (25820 35696 130554 346000) 0 nil])
([nil nil ((1574 . 1575) (#("2" 0 1 (fontified t)) . 1574) (undo-tree-id1127 . -1) (t 25820 35696 131893 48000)) nil (25820 35722 547419 803000) 0 nil])
([nil nil ((4121 . 4133) (#("i" 0 1 (fontified t)) . -4121) (undo-tree-id1128 . -1) (4117 . 4122) (#("i" 0 1 (fontified t)) . -4117) (undo-tree-id1129 . -1) (4113 . 4118) (#(" " 0 1 (fontified t)) . -4113) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (#("2" 0 1 (fontified t)) . -4114) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (#("." 0 1 (fontified t)) . -4115) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (#("0" 0 1 (rear-nonsticky t fontified t)) . -4116) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) 4117 (t 25820 35722 548559 839000)) nil (25820 35752 579335 752000) 0 nil])
([nil nil ((4384 . 4393) (#("room" 0 4 (fontified t)) . -4384) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -2) (undo-tree-id1184 . -2) (undo-tree-id1185 . -3) (undo-tree-id1186 . -3) (undo-tree-id1187 . -4) (undo-tree-id1188 . -4) (undo-tree-id1189 . -4) (undo-tree-id1190 . -4) (undo-tree-id1191 . -4) (undo-tree-id1192 . -4) 4388 (4384 . 4388) (#("0" 0 1 (fontified t)) . -4384) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (#("." 0 1 (fontified t)) . -4385) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (#("2" 0 1 (fontified t)) . -4386) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (#("5" 0 1 (fontified t)) . -4387) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) 4388 (t 25820 35752 578559 982000)) nil (25820 35884 183620 130000) 0 nil])
([nil nil ((4420 . 4444) 4392) nil (25820 35884 183583 309000) 0 nil])
([nil nil ((4135 . 4144) (#("room" 0 4 (fontified t)) . -4135) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -2) (undo-tree-id1223 . -2) (undo-tree-id1224 . -3) (undo-tree-id1225 . -3) (undo-tree-id1226 . -4) (undo-tree-id1227 . -4) (undo-tree-id1228 . -4) (undo-tree-id1229 . -4) (undo-tree-id1230 . -4) (undo-tree-id1231 . -4) 4139 (4132 . 4139) (t 25820 35884 185227 290000)) nil (25820 35907 331030 609000) 0 nil])
([nil nil ((4406 . 4412) (#(" " 0 1 (fontified t)) . -4406) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) 4407 (4406 . 4407) (t 25820 35907 331894 61000)) nil (25820 35928 414897 671000) 0 nil])
([nil nil ((3018 . 3019) (#("2" 0 1 (fontified t)) . 3018) (undo-tree-id1235 . -1) (t 25820 35928 415227 501000)) nil (25820 35989 320611 360000) 0 nil])
([nil nil ((3079 . 3080) (#("3" 0 1 (fontified t)) . 3079) (undo-tree-id1236 . -1) (t 25820 35989 321894 441000)) nil (25820 36000 115461 832000) 0 nil])
([nil nil ((3079 . 3080) (#("2" 0 1 (fontified t)) . 3079) (undo-tree-id1238 . -1) (t 25820 36000 115227 829000)) nil (25820 36018 260467 638000) 0 nil])
([nil nil ((3081 . 3082) (#("0" 0 1 (fontified t)) . 3081) (undo-tree-id1237 . -1)) nil (25820 36018 260462 948000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . 4101) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (t 25820 36018 261894 591000)) nil (25820 36085 590288 656000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 4101) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1)) nil (25820 36085 590286 584000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 4101) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1)) nil (25820 36085 590284 432000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 4101) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1)) nil (25820 36085 590282 375000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 4101) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1)) nil (25820 36085 590280 524000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 4101) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1)) nil (25820 36085 590278 610000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 4101) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1)) nil (25820 36085 590276 650000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 4101) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1)) nil (25820 36085 590274 601000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 4101) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1)) nil (25820 36085 590271 328000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 4101) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1)) nil (25820 36085 590269 69000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4101) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1)) nil (25820 36085 590266 197000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 4101) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1)) nil (25820 36085 590263 386000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4101) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1)) nil (25820 36085 590257 932000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 4101) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (t 25820 36085 591894 916000)) nil (25820 36118 837718 781000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 4119) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1)) nil (25820 36118 837715 407000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4119) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1)) nil (25820 36118 837713 510000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 4119) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1)) nil (25820 36118 837711 669000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 4119) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1)) nil (25820 36118 837709 743000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 4119) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1)) nil (25820 36118 837707 844000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 4119) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1)) nil (25820 36118 837705 846000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 4119) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1)) nil (25820 36118 837703 601000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 4119) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1)) nil (25820 36118 837701 142000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 4119) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1)) nil (25820 36118 837698 901000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . 4119) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1)) nil (25820 36118 837696 904000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 4119) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1)) nil (25820 36118 837694 880000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 4119) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1)) nil (25820 36118 837692 753000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4118) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1)) nil (25820 36118 837689 420000) 0 nil])
([nil nil ((4101 . 4113)) nil (25820 36118 837671 671000) 0 nil])
([nil nil ((4112 . 4132)) nil (25820 36118 837667 973000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 4111) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (t 25820 36118 838561 740000)) nil (25820 36125 172931 318000) 0 nil])
([nil nil ((4111 . 4112) (#("                    " 0 19 (fontified nil) 19 20 (fontified nil)) . 4111) (#("
" 0 1 (fontified t)) . -4111) (undo-tree-id1312 . -1) 4110) nil (25820 36125 172925 39000) 0 nil])
([nil nil ((4111 . 4113)) nil (25820 36125 172913 888000) 0 nil])
([nil nil ((#("-wall_width / 2.0" 0 1 (fontified t) 1 17 (fontified t)) . 4297) (undo-tree-id1423 . -16) (undo-tree-id1424 . -17) (t 25820 36125 171895 108000)) nil (25820 36615 435162 246000) 0 nil])
([nil nil ((4297 . 4300)) nil (25820 36615 435160 365000) 0 nil])
([nil nil ((#("                    (grid.width as f32 * room_size / 2.0 - wall_width / 2.0) as f32
" 0 2 (fontified t) 2 6 (fontified t) 6 32 (fontified t) 32 34 (fontified t face font-lock-keyword-face) 34 35 (fontified t) 35 38 (fontified t face font-lock-type-face) 38 41 (fontified t) 41 50 (fontified t) 50 76 (fontified t) 76 77 (fontified t) 77 79 (fontified t face font-lock-keyword-face) 79 80 (fontified t) 80 83 (fontified t face font-lock-type-face) 83 84 (fontified t)) . 4327) (undo-tree-id1405 . -31) (undo-tree-id1406 . 44) (undo-tree-id1407 . -39) (undo-tree-id1408 . -31) (undo-tree-id1409 . -83) (undo-tree-id1410 . -84) (undo-tree-id1411 . -84) (undo-tree-id1412 . -22) (undo-tree-id1413 . -22) (undo-tree-id1414 . -20) (undo-tree-id1415 . -20) (undo-tree-id1416 . -20) (undo-tree-id1417 . -20) (undo-tree-id1418 . -20) (undo-tree-id1419 . -20) (undo-tree-id1420 . -20) (undo-tree-id1421 . -20) (undo-tree-id1422 . -84) 4347) nil (25820 36615 435159 29000) 0 nil])
([nil nil ((#("                        * (room_size + wall_width)
" 0 23 (fontified t) 23 50 (fontified t) 50 51 (fontified t)) . 4327) (undo-tree-id1394 . 51) (undo-tree-id1395 . -50) (undo-tree-id1396 . -51) (undo-tree-id1397 . -51) (undo-tree-id1398 . -20) (undo-tree-id1399 . -20) (undo-tree-id1400 . -20) (undo-tree-id1401 . -20) (undo-tree-id1402 . -20) (undo-tree-id1403 . -20) (undo-tree-id1404 . -51) 4347) nil (25820 36615 435144 665000) 0 nil])
([nil nil ((#("    + (room_size / 2.0)" 0 3 (fontified t) 3 13 (fontified t) 13 23 (fontified t)) . 4347) (undo-tree-id1392 . -22) (undo-tree-id1393 . -23)) nil (25820 36615 435134 857000) 0 nil])
([nil nil ((4347 . 4350)) nil (25820 36615 435132 580000) 0 nil])
([nil nil ((#("wall_depth * grid.width as f32" 0 12 (fontified t) 12 13 (fontified t) 13 24 (fontified t) 24 26 (fontified t face font-lock-keyword-face) 26 27 (fontified t) 27 30 (fontified t face font-lock-type-face)) . 4101) (undo-tree-id1377 . -29) (undo-tree-id1378 . -11) (undo-tree-id1379 . -11) (undo-tree-id1380 . -11) (undo-tree-id1381 . -11) (undo-tree-id1382 . -11) (undo-tree-id1383 . -11) (undo-tree-id1384 . -11) (undo-tree-id1385 . -11) (undo-tree-id1386 . -11) (undo-tree-id1387 . -11) (undo-tree-id1388 . -11) (undo-tree-id1389 . -2) (undo-tree-id1390 . -2) (undo-tree-id1391 . -30)) nil (25820 36615 435131 42000) 0 nil])
([nil nil ((4101 . 4102)) nil (25820 36615 435119 318000) 0 nil])
([nil nil ((4101 . 4111) (#("0" 0 1 (fontified t)) . -4101) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) 4102) nil (25820 36615 435116 841000) 0 nil])
([nil nil ((#("
                    " 0 1 (fontified t) 1 4 (fontified t) 4 8 (fontified t) 8 21 (fontified t)) . 4256) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -21) (undo-tree-id1324 . -21) (undo-tree-id1325 . -21) (undo-tree-id1326 . -21) (undo-tree-id1327 . -21) (undo-tree-id1328 . -21) (undo-tree-id1329 . -21) (undo-tree-id1330 . -21) (#("
                  " 0 1 (fontified t) 1 3 (fontified t) 3 7 (fontified t) 7 19 (fontified t)) . 4281) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (#(" " 0 1 (fontified t)) . 4301) (#("
                  " 0 1 (fontified t) 1 19 (fontified t)) . 4306) (undo-tree-id1337 . -1) (undo-tree-id1338 . 18) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (#(" " 0 1 (fontified t)) . 4326) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (#(",
                " 0 2 (fontified t) 2 18 (fontified t)) . 4330) (undo-tree-id1371 . -2) (undo-tree-id1372 . -2) 4110) nil (25820 36615 434656 591000) 0 nil])
([nil nil ((1574 . 1575) (#("8" 0 1 (fontified t)) . 1574) (undo-tree-id1425 . -1) (t 25820 36615 435230 787000)) nil (25820 36660 462389 414000) 0 nil])
([nil nil ((4326 . 4344) (#("S" 0 1 (fontified t face font-lock-type-face)) . -4326) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) 4327 (4320 . 4327) (4314 . 4320) (t 25820 36660 465231 3000) 4313) nil (25820 36819 207262 266000) 0 nil])
([nil nil ((4315 . 4323) (#("	" 0 1 (fontified t)) . 4315) 4343) nil (25820 36819 207243 501000) 0 nil])
([nil nil ((#("        // South
        commands.spawn((
            PbrBundle {
                mesh: meshes.add(Mesh::from(shape::Box::new(
                    wall_width,
                    wall_height,
                    wall_depth,
                ))),
                material: materials.add(Color::rgb(1.0, 0.0, 0.0).into()),
                transform: Transform::from_xyz(0.0, 0.0, 0.0),
                ..default()
            },
            Name::new(\"South Wall\"),
            // RigidBody::Fixed,
            // Collider::cuboid(wall_width / 2.0, wall_height / 2.0, wall_depth / 2.0),
        ));
" 0 8 (fontified t) 8 11 (fontified t face font-lock-comment-delimiter-face) 11 16 (fontified t face font-lock-comment-face) 16 17 (fontified t face font-lock-comment-face) 17 25 (fontified t) 25 42 (fontified t) 42 50 (fontified t) 50 54 (fontified t) 54 63 (fontified t face font-lock-type-face) 63 66 (fontified t) 66 82 (fontified t) 82 86 (fontified t face font-lock-variable-name-face) 86 99 (fontified t) 99 103 (fontified t face font-lock-type-face) 103 110 (fontified t) 110 115 (fontified t face font-lock-constant-face) 115 117 (fontified t) 117 120 (fontified t face font-lock-type-face) 120 127 (fontified t) 127 133 (fontified t) 133 137 (fontified t) 137 147 (fontified t) 147 159 (fontified t) 159 164 (fontified t) 164 168 (fontified t) 168 179 (fontified t) 179 192 (fontified t) 192 197 (fontified t) 197 201 (fontified t) 201 222 (fontified t) 222 224 (fontified t) 224 240 (fontified t) 240 245 (fontified t) 245 261 (fontified t) 261 269 (fontified t face font-lock-variable-name-face) 269 285 (fontified t) 285 290 (fontified t face font-lock-type-face) 290 320 (fontified t) 320 336 (fontified t) 336 345 (fontified t face font-lock-variable-name-face) 345 347 (fontified t) 347 356 (fontified t face font-lock-type-face) 356 367 (fontified t) 367 370 (fontified t) 370 371 (fontified t) 371 372 (fontified t) 372 376 (fontified t) 376 380 (fontified t) 380 382 (fontified t) 382 383 (fontified t) 383 399 (fontified t) 399 411 (fontified t) 411 412 (fontified t) 412 413 (fontified t) 413 416 (fontified t) 416 423 (fontified t) 423 425 (fontified t) 425 426 (fontified t) 426 434 (fontified t) 434 438 (fontified t) 438 442 (fontified t face font-lock-type-face) 442 448 (fontified t) 448 460 (fontified t face font-lock-string-face) 460 462 (fontified t) 462 463 (fontified t) 463 464 (fontified t) 464 468 (fontified t) 468 475 (fontified t) 475 478 (fontified t face font-lock-comment-delimiter-face) 478 487 (fontified t face font-lock-comment-face) 487 489 (fontified t face font-lock-comment-face) 489 494 (fontified t face font-lock-comment-face) 494 496 (fontified t face font-lock-comment-face) 496 500 (fontified t) 500 508 (fontified t) 508 511 (fontified t face font-lock-comment-delimiter-face) 511 513 (fontified t face font-lock-comment-face) 513 519 (fontified t face font-lock-comment-face) 519 584 (fontified t face font-lock-comment-face) 584 592 (fontified t) 592 596 (fontified t)) . 3889) (undo-tree-id1488 . -594) (undo-tree-id1489 . -594) (undo-tree-id1490 . -10) (undo-tree-id1491 . -595) (undo-tree-id1492 . 134) (undo-tree-id1493 . -596) (undo-tree-id1494 . -596) (undo-tree-id1495 . -212) (undo-tree-id1496 . -596) (undo-tree-id1497 . -596) (undo-tree-id1498 . -584) (undo-tree-id1499 . -212) (undo-tree-id1500 . -444) (undo-tree-id1501 . -444) (undo-tree-id1502 . -444) (undo-tree-id1503 . -444) (undo-tree-id1504 . -461) (undo-tree-id1505 . -461) (undo-tree-id1506 . -461) (undo-tree-id1507 . -461) (undo-tree-id1508 . -461) (undo-tree-id1509 . -461) (undo-tree-id1510 . -461) (undo-tree-id1511 . -461) (undo-tree-id1512 . -461) (undo-tree-id1513 . -461) (undo-tree-id1514 . -461) (undo-tree-id1515 . -461) (undo-tree-id1516 . -461) (undo-tree-id1517 . -461) (undo-tree-id1518 . -461) (undo-tree-id1519 . -494) (undo-tree-id1520 . -494) (undo-tree-id1521 . -531) (undo-tree-id1522 . -531) (undo-tree-id1523 . -594) (undo-tree-id1524 . -594) (undo-tree-id1525 . -596) (undo-tree-id1526 . -596) (undo-tree-id1527 . -596) (undo-tree-id1528 . -596) (undo-tree-id1529 . -594) (undo-tree-id1530 . -594) (undo-tree-id1531 . -531) (undo-tree-id1532 . -531) (undo-tree-id1533 . -494) (undo-tree-id1534 . -494) (undo-tree-id1535 . -461) (undo-tree-id1536 . -461) (undo-tree-id1537 . -424) (undo-tree-id1538 . -424) (undo-tree-id1539 . -409) (undo-tree-id1540 . -409) (undo-tree-id1541 . -355) (undo-tree-id1542 . -355) (undo-tree-id1543 . -280) (undo-tree-id1544 . -280) (undo-tree-id1545 . -243) (undo-tree-id1546 . -243) (undo-tree-id1547 . -222) (undo-tree-id1548 . -222) (undo-tree-id1549 . -190) (undo-tree-id1550 . -190) (undo-tree-id1551 . -157) (undo-tree-id1552 . -157) (undo-tree-id1553 . -101) (undo-tree-id1554 . -101) (undo-tree-id1555 . -64) (undo-tree-id1556 . -64) (undo-tree-id1557 . -40) (undo-tree-id1558 . -40) (undo-tree-id1559 . -15) (undo-tree-id1560 . -15) (undo-tree-id1561 . -15) (undo-tree-id1562 . -15) (undo-tree-id1563 . -40) (undo-tree-id1564 . -40) (undo-tree-id1565 . -64) (undo-tree-id1566 . -64) (undo-tree-id1567 . -101) (undo-tree-id1568 . -101) (undo-tree-id1569 . -157) (undo-tree-id1570 . -157) (undo-tree-id1571 . -190) (undo-tree-id1572 . -190) (undo-tree-id1573 . -222) (undo-tree-id1574 . -222) (undo-tree-id1575 . -243) (undo-tree-id1576 . -243) (undo-tree-id1577 . -280) (undo-tree-id1578 . -280) (undo-tree-id1579 . -355) (undo-tree-id1580 . -355) (undo-tree-id1581 . -409) (undo-tree-id1582 . -409) (undo-tree-id1583 . -424) (undo-tree-id1584 . -424) (undo-tree-id1585 . -461) (undo-tree-id1586 . -461) (undo-tree-id1587 . -424) (undo-tree-id1588 . -424) (undo-tree-id1589 . -461) (undo-tree-id1590 . -461) (undo-tree-id1591 . -494) (undo-tree-id1592 . -494) (undo-tree-id1593 . -531) (undo-tree-id1594 . -531) (undo-tree-id1595 . -594) (undo-tree-id1596 . -594) (undo-tree-id1597 . -596) (undo-tree-id1598 . -596) (undo-tree-id1599 . -594) (undo-tree-id1600 . -594) (undo-tree-id1601 . -594) (undo-tree-id1602 . -594) (undo-tree-id1603 . -506) (undo-tree-id1604 . -506) (undo-tree-id1605 . -473) (undo-tree-id1606 . -473) (undo-tree-id1607 . -436) (undo-tree-id1608 . -436) (undo-tree-id1609 . -421) (undo-tree-id1610 . -421) (undo-tree-id1611 . -393) (undo-tree-id1612 . -393) (undo-tree-id1613 . -330) (undo-tree-id1614 . -330) (undo-tree-id1615 . -255) (undo-tree-id1616 . -255) (undo-tree-id1617 . -234) (undo-tree-id1618 . -234) (undo-tree-id1619 . -202) (undo-tree-id1620 . -202) (undo-tree-id1621 . -169) (undo-tree-id1622 . -169) (undo-tree-id1623 . -137) (undo-tree-id1624 . -137) (undo-tree-id1625 . -76) (undo-tree-id1626 . -76) (undo-tree-id1627 . -52) (undo-tree-id1628 . -52) (undo-tree-id1629 . -27) (undo-tree-id1630 . -27) (undo-tree-id1631 . -10) (undo-tree-id1632 . -461) (undo-tree-id1633 . -10) (undo-tree-id1634 . -10) (undo-tree-id1635 . -10) (undo-tree-id1636 . -596) 3899 (t 25820 36819 208565 42000)) nil (25820 36923 352910 135000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2945 . 2946) (#("
" 0 1 (fontified nil)) . -3533) (2937 . 3534) 2908) nil (25820 36923 352465 77000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -3354) (undo-tree-id1448 . -8) (undo-tree-id1449 . -8) (undo-tree-id1450 . -8) (undo-tree-id1451 . -8) (undo-tree-id1452 . -8) (undo-tree-id1453 . -8) (3350 . 3354) (#("            " 0 4 (fontified nil) 4 12 (fontified nil)) . -3274) (undo-tree-id1454 . -8) (undo-tree-id1455 . -8) (3273 . 3274) (#("            " 0 1 (fontified nil) 1 5 (fontified nil) 5 12 (fontified nil)) . -3252) (undo-tree-id1456 . -8) (undo-tree-id1457 . -8) (3251 . 3252) (#("            " 0 8 (fontified nil) 8 12 (fontified nil)) . -3226) (undo-tree-id1458 . -8) (undo-tree-id1459 . -8) (3225 . 3226) (#("            " 0 1 (fontified nil) 1 2 (fontified nil) 2 5 (fontified nil) 5 12 (fontified nil)) . -3222) (undo-tree-id1460 . -8) (undo-tree-id1461 . -8) (3221 . 3222) (#("                " 0 16 (fontified nil)) . -3209) (undo-tree-id1462 . -8) (undo-tree-id1463 . -8) (3204 . 3209) (#("                " 0 16 (fontified nil)) . -3157) (undo-tree-id1464 . -8) (undo-tree-id1465 . -8) (3152 . 3157) (#("                " 0 16 (fontified nil)) . -3093) (undo-tree-id1466 . -8) (undo-tree-id1467 . -8) (3088 . 3093) (#("                " 0 16 (fontified nil)) . -3083) (undo-tree-id1468 . -8) (undo-tree-id1469 . -8) (3078 . 3083) (#("                    " 0 5 (fontified nil) 5 9 (fontified nil) 9 20 (fontified nil)) . -3066) (undo-tree-id1470 . -8) (undo-tree-id1471 . -8) (3064 . 3066) (#("                    " 0 5 (fontified nil) 5 9 (fontified nil) 9 20 (fontified nil)) . -3051) (undo-tree-id1472 . -8) (undo-tree-id1473 . -8) (3049 . 3051) (#("                    " 0 6 (fontified nil) 6 10 (fontified nil) 10 20 (fontified nil)) . -3037) (undo-tree-id1474 . -8) (undo-tree-id1475 . -8) (3035 . 3037) (#("                " 0 16 (fontified nil)) . -2990) (undo-tree-id1476 . -8) (undo-tree-id1477 . -8) (2985 . 2990) (#("            " 0 8 (fontified nil) 8 12 (fontified nil)) . -2973) (undo-tree-id1478 . -8) (undo-tree-id1479 . -8) (2972 . 2973) (#("        " 0 8 (fontified nil)) . -2955) (undo-tree-id1480 . -8) (undo-tree-id1481 . -8) (2951 . 2955) (#("        " 0 7 (fontified nil) 7 8 (fontified nil rear-nonsticky t)) . -2942) (undo-tree-id1482 . -8) (undo-tree-id1483 . -8) (undo-tree-id1484 . -8) (undo-tree-id1485 . -8) (undo-tree-id1486 . -8) (undo-tree-id1487 . -8) (2938 . 2942) 3530) nil (25820 36923 352460 585000) 0 nil])
([nil nil ((2972 . 2980) (#("	" 0 1 (fontified t)) . 2972) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (2985 . 2993) (#("	" 0 1 (fontified t)) . 2985) (3035 . 3051) (#("		" 0 2 (fontified t)) . 3035) (undo-tree-id1434 . -2) (undo-tree-id1435 . -2) (3049 . 3065) (#("		" 0 2 (fontified t)) . 3049) (undo-tree-id1436 . -2) (undo-tree-id1437 . -2) (3064 . 3080) (#("		" 0 2 (fontified t)) . 3064) (undo-tree-id1438 . -2) (undo-tree-id1439 . -2) (3078 . 3086) (#("	" 0 1 (fontified t)) . 3078) (3088 . 3096) (#("	" 0 1 (fontified t)) . 3088) (3152 . 3160) (#("	" 0 1 (fontified t)) . 3152) (3204 . 3212) (#("	" 0 1 (fontified t)) . 3204) (3221 . 3229) (#("	" 0 1 (fontified t)) . 3221) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (3225 . 3233) (#("	" 0 1 (fontified t)) . 3225) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (3251 . 3259) (#("	" 0 1 (fontified t)) . 3251) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (3273 . 3281) (#("	" 0 1 (fontified t)) . 3273) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) 2946) nil (25820 36923 352423 255000) 0 nil])
([nil nil ((#("        let room_size = 1.0;
        let wall_width = 0.1;
        let wall_height = 1.5;
        let wall_depth = room_size + wall_width * 2.0;
" 0 8 (fontified t) 8 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 21 (fontified t face font-lock-variable-name-face) 21 24 (fontified t) 24 25 (fontified t) 25 29 (fontified t) 29 37 (fontified t) 37 40 (fontified t face font-lock-keyword-face) 40 41 (fontified t) 41 51 (fontified t face font-lock-variable-name-face) 51 59 (fontified t) 59 67 (fontified t) 67 70 (fontified t face font-lock-keyword-face) 70 71 (fontified t) 71 82 (fontified t face font-lock-variable-name-face) 82 85 (fontified t) 85 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 90 (fontified t) 90 98 (fontified t) 98 101 (fontified t face font-lock-keyword-face) 101 102 (fontified t) 102 112 (fontified t face font-lock-variable-name-face) 112 145 (fontified t)) . 3526) (undo-tree-id1659 . -90) (undo-tree-id1660 . -8) (undo-tree-id1661 . -90) (undo-tree-id1662 . -144) (undo-tree-id1663 . -8) (undo-tree-id1664 . -8) (undo-tree-id1665 . -8) (undo-tree-id1666 . -8) (undo-tree-id1667 . -8) (undo-tree-id1668 . -145) (undo-tree-id1669 . -145) (undo-tree-id1670 . -145) (undo-tree-id1671 . -145) (undo-tree-id1672 . -90) (undo-tree-id1673 . -90) (undo-tree-id1674 . -90) (undo-tree-id1675 . -90) (undo-tree-id1676 . -90) (undo-tree-id1677 . -145) 3616 (t 25820 36923 355232 211000)) nil (25820 36940 448591 326000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2945 . 2946) (#("
" 0 1 (fontified nil)) . -3082) (2937 . 3083) 2908) nil (25820 36940 448577 184000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil)) . -3020) (undo-tree-id1643 . -8) (undo-tree-id1644 . -8) (undo-tree-id1645 . -8) (undo-tree-id1646 . -8) (undo-tree-id1647 . -8) (undo-tree-id1648 . -8) (3016 . 3020) (#("        " 0 8 (fontified nil)) . -2993) (undo-tree-id1649 . -8) (undo-tree-id1650 . -8) (2989 . 2993) (#("        " 0 8 (fontified nil)) . -2967) (undo-tree-id1651 . -8) (undo-tree-id1652 . -8) (2963 . 2967) (#("        " 0 7 (fontified nil) 7 8 (fontified nil rear-nonsticky t)) . -2942) (undo-tree-id1653 . -8) (undo-tree-id1654 . -8) (undo-tree-id1655 . -8) (undo-tree-id1656 . -8) (undo-tree-id1657 . -8) (undo-tree-id1658 . -8) (2938 . 2942) 3036) nil (25820 36940 448574 857000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3067) (undo-tree-id1639 . -4) (undo-tree-id1640 . -4) (undo-tree-id1641 . -4) (undo-tree-id1642 . -4) 3071 (3066 . 3071) 3024) nil (25820 36940 448561 419000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3656) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) 3479) nil (25820 36940 448553 577000) 0 nil])
([nil nil ((3425 . 3426) (3420 . 3425) (3411 . 3420) (#("room" 0 4 (fontified t)) . -3411) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -2) (undo-tree-id1681 . -2) (undo-tree-id1682 . -3) (undo-tree-id1683 . -3) (undo-tree-id1684 . -4) (undo-tree-id1685 . -4) (undo-tree-id1686 . -4) (undo-tree-id1687 . -4) (undo-tree-id1688 . -4) (undo-tree-id1689 . -4) (undo-tree-id1690 . -4) 3415 (3411 . 3415) (#("w" 0 1 (fontified t)) . -3411) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (#("a" 0 1 (fontified t)) . -3412) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (#("l" 0 1 (fontified t)) . -3413) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (#("l" 0 1 (fontified t)) . -3414) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) 3415 (3408 . 3415) (t 25820 36940 451898 951000)) nil (25820 37056 437724 670000) 0 nil])
([nil nil ((3414 . 3419) (#("i" 0 1 (fontified t)) . -3414) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (3413 . 3415) (3405 . 3413) (3396 . 3405) (#("room" 0 4 (fontified t)) . -3396) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -2) (undo-tree-id1744 . -2) (undo-tree-id1745 . -3) (undo-tree-id1746 . -3) (undo-tree-id1747 . -4) (undo-tree-id1748 . -4) (undo-tree-id1749 . -4) (undo-tree-id1750 . -4) (undo-tree-id1751 . -4) (undo-tree-id1752 . -4) 3400 (3395 . 3400) (#("0" 0 1 (fontified t)) . -3395) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (#("." 0 1 (fontified t)) . -3396) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (#("0" 0 1 (fontified t)) . -3397) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) 3398 (t 25820 37056 438566 178000)) nil (25820 37177 576849 8000) 0 nil])
([nil nil ((3422 . 3425) (3419 . 3422)) nil (25820 37177 576821 146000) 0 nil])
([nil nil ((3395 . 3412) (3426 . 3441) (3427 . 3428) (3431 . 3446) (3432 . 3433) (3453 . 3467) 3424) nil (25820 37177 576817 69000) 0 nil])
([nil nil ((3418 . 3424) (#("i" 0 1 (fontified t)) . -3418) (undo-tree-id1767 . -1) (3414 . 3419) (#("i" 0 1 (fontified t)) . -3414) (undo-tree-id1768 . -1) (3412 . 3415) (t 25820 37177 578566 753000)) nil (25820 37204 87008 35000) 0 nil])
([nil nil ((3424 . 3425)) nil (25820 37204 86997 504000) 0 nil])
([nil nil ((3422 . 3429)) nil (25820 37204 86993 286000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . 3412) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (t 25820 37204 88566 888000)) nil (25820 37256 443331 779000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 3412) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1)) nil (25820 37256 443329 722000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3412) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1)) nil (25820 37256 443327 722000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 3412) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1)) nil (25820 37256 443325 891000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 3412) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1)) nil (25820 37256 443324 39000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . 3412) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1)) nil (25820 37256 443321 819000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3412) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1)) nil (25820 37256 443320 43000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 3412) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1)) nil (25820 37256 443318 241000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 3412) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1)) nil (25820 37256 443316 578000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 3412) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1)) nil (25820 37256 443314 726000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3412) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1)) nil (25820 37256 443312 960000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-keyword-face)) . 3412) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1)) nil (25820 37256 443311 87000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 3412) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1)) nil (25820 37256 443309 202000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3412) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1)) nil (25820 37256 443307 318000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face font-lock-type-face)) . 3412) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1)) nil (25820 37256 443305 444000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . 3412) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1)) nil (25820 37256 443302 676000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 3412) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1)) nil (25820 37256 443293 748000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3412) (undo-tree-id2053 . 1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1)) nil (25820 37256 443291 916000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 3412) (undo-tree-id2050 . 1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1)) nil (25820 37256 443289 249000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3412) (undo-tree-id2047 . 1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1)) nil (25820 37256 443286 793000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 3412) (undo-tree-id2044 . 1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1)) nil (25820 37256 443284 472000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 3412) (undo-tree-id2040 . 1) (undo-tree-id2041 . 1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1)) nil (25820 37256 443282 111000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 3412) (undo-tree-id2036 . 1) (undo-tree-id2037 . 1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1)) nil (25820 37256 443279 264000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . 3412) (undo-tree-id2032 . 1) (undo-tree-id2033 . 1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1)) nil (25820 37256 443276 286000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 3412) (undo-tree-id2028 . 1) (undo-tree-id2029 . 1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1)) nil (25820 37256 443272 947000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 3412) (undo-tree-id2024 . 1) (undo-tree-id2025 . 1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1)) nil (25820 37256 443269 569000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 3412) (undo-tree-id2020 . 1) (undo-tree-id2021 . 1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1)) nil (25820 37256 443266 293000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3412) (undo-tree-id2016 . 1) (undo-tree-id2017 . 1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1)) nil (25820 37256 443263 25000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . 3412) (undo-tree-id2012 . 1) (undo-tree-id2013 . 1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1)) nil (25820 37256 443259 732000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 3412) (undo-tree-id2008 . 1) (undo-tree-id2009 . 1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1)) nil (25820 37256 443256 646000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3412) (undo-tree-id2004 . 1) (undo-tree-id2005 . 1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1)) nil (25820 37256 443253 461000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . 3412) (undo-tree-id2000 . 1) (undo-tree-id2001 . 1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1)) nil (25820 37256 443250 276000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3412) (undo-tree-id1996 . 1) (undo-tree-id1997 . 1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1)) nil (25820 37256 443247 174000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . 3412) (undo-tree-id1992 . 1) (undo-tree-id1993 . 1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1)) nil (25820 37256 443244 283000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 3412) (undo-tree-id1988 . 1) (undo-tree-id1989 . 1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1)) nil (25820 37256 443241 64000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 3412) (undo-tree-id1984 . 1) (undo-tree-id1985 . 1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1)) nil (25820 37256 443237 383000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 3412) (undo-tree-id1980 . 1) (undo-tree-id1981 . 1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1)) nil (25820 37256 443234 280000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 3412) (undo-tree-id1976 . 1) (undo-tree-id1977 . 1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1)) nil (25820 37256 443230 938000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . 3412) (undo-tree-id1972 . 1) (undo-tree-id1973 . 1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1)) nil (25820 37256 443175 580000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3412) (undo-tree-id1968 . 1) (undo-tree-id1969 . 1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1)) nil (25820 37256 443172 246000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 3412) (undo-tree-id1964 . 1) (undo-tree-id1965 . 1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1)) nil (25820 37256 442840 120000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 3412) (undo-tree-id1960 . 1) (undo-tree-id1961 . 1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1)) nil (25820 37256 442836 809000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . 3412) (undo-tree-id1956 . 1) (undo-tree-id1957 . 1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1)) nil (25820 37256 442833 399000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 3412) (undo-tree-id1952 . 1) (undo-tree-id1953 . 1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1)) nil (25820 37256 442830 580000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3412) (undo-tree-id1948 . 1) (undo-tree-id1949 . 1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1)) nil (25820 37256 442827 392000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . 3412) (undo-tree-id1944 . 1) (undo-tree-id1945 . 1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1)) nil (25820 37256 442823 802000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3412) (undo-tree-id1940 . 1) (undo-tree-id1941 . 1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1)) nil (25820 37256 442820 917000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 3412) (undo-tree-id1936 . 1) (undo-tree-id1937 . 1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1)) nil (25820 37256 442817 911000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 3412) (undo-tree-id1932 . 1) (undo-tree-id1933 . 1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1)) nil (25820 37256 442814 913000) 0 nil])
([nil nil ((3412 . 3414)) nil (25820 37256 442811 542000) 0 nil])
([nil nil ((3285 . 3296) (#("i" 0 1 (fontified t)) . -3285) (undo-tree-id1844 . -1) (3281 . 3286) (#("i" 0 1 (fontified t)) . -3281) (undo-tree-id1845 . -1) (3276 . 3282) (3275 . 3276) (3265 . 3275) (#("wall" 0 4 (fontified t)) . -3265) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -2) (undo-tree-id1849 . -2) (undo-tree-id1850 . -3) (undo-tree-id1851 . -3) (undo-tree-id1852 . -4) (undo-tree-id1853 . -4) (undo-tree-id1854 . -4) (undo-tree-id1855 . -4) (undo-tree-id1856 . -4) (undo-tree-id1857 . -4) (undo-tree-id1858 . -4) (undo-tree-id1859 . -4) (undo-tree-id1860 . -4) (undo-tree-id1861 . -4) (undo-tree-id1862 . -4) (undo-tree-id1863 . -4) (undo-tree-id1864 . -4) (undo-tree-id1865 . -4) (undo-tree-id1866 . -4) (undo-tree-id1867 . -4) 3269 (3262 . 3269) (3253 . 3262) (#("room" 0 4 (fontified t)) . -3253) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -2) (undo-tree-id1871 . -2) (undo-tree-id1872 . -3) (undo-tree-id1873 . -3) (undo-tree-id1874 . -4) (undo-tree-id1875 . -4) (undo-tree-id1876 . -4) (undo-tree-id1877 . -4) (undo-tree-id1878 . -4) (undo-tree-id1879 . -4) 3257 (3252 . 3257) (#("w" 0 1 (fontified t)) . -3252) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (#("a" 0 1 (fontified t)) . -3253) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (#("l" 0 1 (fontified t)) . -3254) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (#("l" 0 1 (fontified t)) . -3255) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (#("_" 0 1 (fontified t)) . -3256) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (#("d" 0 1 (fontified t)) . -3257) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (#("e" 0 1 (fontified t)) . -3258) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (#("p" 0 1 (fontified t)) . -3259) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (#("t" 0 1 (fontified t)) . -3260) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (#("h" 0 1 (fontified t)) . -3261) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) 3262) nil (25820 37256 442806 166000) 0 nil])
([nil nil ((#("
                " 0 1 (fontified t) 1 17 (fontified t)) . 3429) (undo-tree-id1769 . -17) (undo-tree-id1770 . -17) (undo-tree-id1771 . -17) (undo-tree-id1772 . -17) (undo-tree-id1773 . -17) (undo-tree-id1774 . -17) (undo-tree-id1775 . -17) (undo-tree-id1776 . -17) (undo-tree-id1777 . -17) (undo-tree-id1778 . -17) (undo-tree-id1779 . -17) (undo-tree-id1780 . -17) (undo-tree-id1781 . -17) (undo-tree-id1782 . -17) (undo-tree-id1783 . -17) (undo-tree-id1784 . -17) (undo-tree-id1785 . -17) (undo-tree-id1786 . -17) (undo-tree-id1787 . -17) (undo-tree-id1788 . -17) (undo-tree-id1789 . -17) (undo-tree-id1790 . -17) (undo-tree-id1791 . -17) (undo-tree-id1792 . -17) (undo-tree-id1793 . -17) (undo-tree-id1794 . -17) (undo-tree-id1795 . -17) (undo-tree-id1796 . -17) (undo-tree-id1797 . -17) (undo-tree-id1798 . -17) (undo-tree-id1799 . -17) (undo-tree-id1800 . -17) (undo-tree-id1801 . -17) (undo-tree-id1802 . -17) (undo-tree-id1803 . -17) (undo-tree-id1804 . -17) (undo-tree-id1805 . -17) (undo-tree-id1806 . -17) (undo-tree-id1807 . -17) (undo-tree-id1808 . -17) (undo-tree-id1809 . -17) (undo-tree-id1810 . -17) (undo-tree-id1811 . -17) (undo-tree-id1812 . -17) (undo-tree-id1813 . -17) (undo-tree-id1814 . -17) (undo-tree-id1815 . -17) (undo-tree-id1816 . -17) (undo-tree-id1817 . -17) (undo-tree-id1818 . -17) (undo-tree-id1819 . -17) (undo-tree-id1820 . -17) (undo-tree-id1821 . -17) (undo-tree-id1822 . -17) (undo-tree-id1823 . -17) (undo-tree-id1824 . -17) (undo-tree-id1825 . -17) (undo-tree-id1826 . -17) (undo-tree-id1827 . -17) (undo-tree-id1828 . -17) (undo-tree-id1829 . -17) (undo-tree-id1830 . -17) (undo-tree-id1831 . -17) (undo-tree-id1832 . -17) (undo-tree-id1833 . -17) (undo-tree-id1834 . -17) (undo-tree-id1835 . -17) (undo-tree-id1836 . -17) (undo-tree-id1837 . -17) (undo-tree-id1838 . -17) (undo-tree-id1839 . -17) (undo-tree-id1840 . -17) (undo-tree-id1841 . -17) (undo-tree-id1842 . -17) (undo-tree-id1843 . -17) (#("
              " 0 1 (fontified t) 1 15 (fontified t)) . 3450) (#(" " 0 1 (fontified t)) . 3466) (#("
              " 0 15 (fontified t)) . 3471) (#(" " 0 1 (fontified t)) . 3487) (#(",
            " 0 14 (fontified t)) . 3509) 3295) nil (25820 37256 442742 876000) 0 nil])
([nil nil ((3443 . 3446) (#("." 0 1 (fontified t)) . -3443) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (#("0" 0 1 (fontified t)) . -3444) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) 3445 (3436 . 3445) (#("i" 0 1 (fontified t)) . -3436) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (3429 . 3437) (#("0" 0 1 (fontified t)) . -3429) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (#("." 0 1 (fontified t)) . -3430) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (#("0" 0 1 (fontified t)) . -3431) (undo-tree-id2122 . 1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) 3432 (t 25820 37256 445233 798000)) nil (25820 37340 198794 634000) 0 nil])
([nil nil ((3252 . 3254) (t 25820 37340 201900 870000)) nil (25820 37584 872136 921000) 0 nil])
([nil nil ((3302 . 3306) (3299 . 3302) 3253) nil (25820 37584 872135 281000) 0 nil])
([nil nil ((3300 . 3316) (#("		" 0 2 (fontified t)) . 3300) (undo-tree-id2127 . -2) (undo-tree-id2128 . -2) 3305) nil (25820 37584 872130 300000) 0 nil])
([nil nil ((apply 6 3568 3675 undo--wrap-and-run-primitive-undo 3568 3675 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3602) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3576) 3681))) nil (25820 37689 114831 273000) 0 nil])
([nil nil ((3656 . 3659) (#("6" 0 1 (fontified t)) . -3656) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (#("." 0 1 (fontified t)) . -3657) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) 3658 (3656 . 3658) (#("w" 0 1 (fontified t)) . -3656) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (#("a" 0 1 (fontified t)) . -3657) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (#("l" 0 1 (fontified t)) . -3658) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (#("l" 0 1 (fontified t)) . -3659) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (#("_" 0 1 (fontified t)) . -3660) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (#("d" 0 1 (fontified t)) . -3661) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (#("e" 0 1 (fontified t)) . -3662) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (#("p" 0 1 (fontified t)) . -3663) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (#("t" 0 1 (fontified t)) . -3664) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (#("h" 0 1 (fontified t)) . -3665) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) 3666) nil (25820 37689 114816 223000) 0 nil])
([nil nil ((3658 . 3659) (#("4" 0 1 (fontified t)) . 3658) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (t 25820 37689 118569 225000)) nil (25820 37823 967305 635000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -3318) (3319 . 3320) 3318) nil (25820 37823 967286 71000) 0 nil])
([nil nil ((3498 . 3499) (3488 . 3498) (#("wall" 0 4 (fontified t)) . -3488) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -2) (undo-tree-id2190 . -2) (undo-tree-id2191 . -3) (undo-tree-id2192 . -3) (undo-tree-id2193 . -4) (undo-tree-id2194 . -4) (undo-tree-id2195 . -4) (undo-tree-id2196 . -4) (undo-tree-id2197 . -4) (undo-tree-id2198 . -4) (undo-tree-id2199 . -4) (undo-tree-id2200 . -4) (undo-tree-id2201 . -4) (undo-tree-id2202 . -4) (undo-tree-id2203 . -4) (undo-tree-id2204 . -4) (undo-tree-id2205 . -4) (undo-tree-id2206 . -4) (undo-tree-id2207 . -4) (undo-tree-id2208 . -4) 3492 (3487 . 3492) (3485 . 3487) (3476 . 3485) (#("room" 0 4 (fontified t)) . -3476) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -2) (undo-tree-id2212 . -2) (undo-tree-id2213 . -3) (undo-tree-id2214 . -3) (undo-tree-id2215 . -4) (undo-tree-id2216 . -4) (undo-tree-id2217 . -4) (undo-tree-id2218 . -4) (undo-tree-id2219 . -4) (undo-tree-id2220 . -4) 3480 (3475 . 3480) (#(" " 0 1 (fontified t)) . -3475) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) 3476 (#("0" 0 1 (fontified t)) . -3476) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (#("." 0 1 (fontified t)) . -3477) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (#("0" 0 1 (fontified t)) . -3478) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (#(" " 0 1 (fontified t)) . -3479) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (#("+" 0 1 (fontified t)) . -3480) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (#(" " 0 1 (fontified t)) . -3481) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (#("r" 0 1 (fontified t)) . -3482) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (#("o" 0 1 (fontified t)) . -3483) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (#("o" 0 1 (fontified t)) . -3484) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (#("m" 0 1 (fontified t)) . -3485) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (#("_" 0 1 (fontified t)) . -3486) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (#("s" 0 1 (fontified t)) . -3487) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (#("i" 0 1 (fontified t)) . -3488) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (#("z" 0 1 (fontified t)) . -3489) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (#("e" 0 1 (fontified t)) . -3490) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (#(" " 0 1 (fontified t)) . -3491) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (#("/" 0 1 (fontified t)) . -3492) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (#(" " 0 1 (fontified t)) . -3493) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (#("2" 0 1 (fontified t)) . -3494) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (#("." 0 1 (fontified t)) . -3495) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (#("0" 0 1 (fontified t)) . -3496) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) 3497 (t 25820 37823 968569 864000)) nil (25820 39078 800152 488000) 0 nil])
([nil nil ((3476 . 3477)) nil (25820 39078 799798 764000) 0 nil])
([nil nil ((3509 . 3513) (#("i" 0 1 (fontified t)) . -3509) (undo-tree-id2185 . -1) (3505 . 3510) (#("i" 0 1 (fontified t)) . -3505) (undo-tree-id2186 . -1) (3500 . 3506)) nil (25820 39078 799797 809000) 0 nil])
([nil nil ((3499 . 3505)) nil (25820 39078 799794 889000) 0 nil])
([nil nil ((3528 . 3538) (#("i" 0 1 (fontified t)) . -3528) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (3519 . 3529)) nil (25820 39078 799793 40000) 0 nil])
([nil nil ((3452 . 3469) (3470 . 3485) (3471 . 3472) (3475 . 3490) (3476 . 3477) (3538 . 3552) 3574) nil (25820 39078 799781 94000) 0 nil])
([nil nil ((3572 . 3575) (#("u" 0 1 (fontified t)) . -3572) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (#("s" 0 1 (fontified t)) . -3573) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (#("i" 0 1 (fontified t)) . -3574) (undo-tree-id2414 . -1) 3575 (3574 . 3575) (#("i" 0 1 (fontified t)) . -3574) (undo-tree-id2415 . -1) (3568 . 3575) (t 25820 39078 801909 232000)) nil (25820 39089 391835 552000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . 3549) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (t 25820 39089 395242 612000)) nil (25820 39119 723252 481000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3549) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1)) nil (25820 39119 723250 96000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 3549) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1)) nil (25820 39119 723248 66000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 3549) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1)) nil (25820 39119 723246 73000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 3549) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1)) nil (25820 39119 723243 564000) 0 nil])
([nil nil ((3570 . 3576)) nil (25820 39119 723240 664000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3548) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) 3575) nil (25820 39119 723237 134000) 0 nil])
([nil nil ((#(" + wall_width / 2.0" 0 19 (fontified t)) . 3575) (undo-tree-id2435 . -1) (undo-tree-id2436 . -18) (undo-tree-id2437 . 19) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -19) (t 25820 39119 725242 749000)) nil (25820 39142 90338 312000) 0 nil])
([nil nil ((3584 . 3594) (#("i" 0 1 (fontified t)) . -3584) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (3575 . 3585) (t 25820 39142 91909 522000)) nil (25820 39169 594542 13000) 0 nil])
([nil nil ((3356 . 3361) (#("i" 0 1 (fontified t)) . -3356) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (3347 . 3357) (#(")" 0 1 (fontified t)) . -3347) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (#("+" 0 1 (fontified t)) . -3348) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (#(" " 0 1 (fontified t)) . -3349) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) 3350 (3346 . 3350) (3335 . 3346) (#("i" 0 1 (fontified t)) . -3335) (undo-tree-id2469 . -1) (3331 . 3336) (#("i" 0 1 (fontified t)) . -3331) (undo-tree-id2470 . -1) 3332 (3325 . 3332) (#("+" 0 1 (fontified t)) . -3325) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) 3326 (3325 . 3326) (3315 . 3325) (#("wall" 0 4 (fontified t)) . -3315) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -2) (undo-tree-id2476 . -2) (undo-tree-id2477 . -3) (undo-tree-id2478 . -3) (undo-tree-id2479 . -4) (undo-tree-id2480 . -4) (undo-tree-id2481 . -4) (undo-tree-id2482 . -4) (undo-tree-id2483 . -4) (undo-tree-id2484 . -4) (undo-tree-id2485 . -4) (undo-tree-id2486 . -4) (undo-tree-id2487 . -4) (undo-tree-id2488 . -4) (undo-tree-id2489 . -4) (undo-tree-id2490 . -4) (undo-tree-id2491 . -4) (undo-tree-id2492 . -4) (undo-tree-id2493 . -4) (undo-tree-id2494 . -4) 3319 (3312 . 3319) (3303 . 3312) (#("room" 0 4 (fontified t)) . -3303) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -2) (undo-tree-id2498 . -2) (undo-tree-id2499 . -3) (undo-tree-id2500 . -3) (undo-tree-id2501 . -4) (undo-tree-id2502 . -4) (undo-tree-id2503 . -4) (undo-tree-id2504 . -4) (undo-tree-id2505 . -4) (undo-tree-id2506 . -4) 3307 (3302 . 3307) (3299 . 3302) (t 25820 39169 595242 987000) 3255) nil (25820 39249 261641 35000) 0 nil])
([nil nil ((3378 . 3380) (#("\\" 0 1 (fontified t)) . -3378) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (#("\\" 0 1 (fontified t)) . -3379) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) 3380 (3378 . 3380)) nil (25820 39249 261603 835000) 0 nil])
([nil nil ((3300 . 3316) (#("		" 0 2 (fontified t)) . 3300) (undo-tree-id2449 . -2) (undo-tree-id2450 . -2) (#(" " 0 1 (fontified t)) . 3348) 3379) nil (25820 39249 261593 603000) 0 nil])
([nil nil ((1575 . 1576) (t 25820 39249 265243 358000)) nil (25820 39267 148663 607000) 0 nil])
([nil nil ((1579 . 1580)) nil (25820 39269 501486 729000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1579) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (t 25820 39267 151910 109000)) nil (25820 39328 168946 358000) 0 nil] [nil nil ((nil rear-nonsticky nil 1598 . 1599) (nil fontified nil 1580 . 1599) (1580 . 1599) 1579 (t 25820 39267 151910 109000)) ((#(" + wall_width / 2.0" 0 18 (fontified nil) 18 19 (fontified nil rear-nonsticky nil)) . 1580) (undo-tree-id2507 . -18) (undo-tree-id2508 . -18) (undo-tree-id2509 . -18) (undo-tree-id2510 . -18) (nil rear-nonsticky t 1598 . 1599)) (25820 39269 501154 797000) 0 nil])
([nil nil ((1574 . 1575) (#("4" 0 1 (fontified t)) . 1574) (undo-tree-id2513 . -1)) nil (25820 39328 168941 374000) 0 nil])
nil
([nil nil ((#("0" 0 1 (fontified t)) . 1575) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1)) nil (25820 39328 168936 538000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t)) . -3844) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (#("." 0 1 (fontified t)) . -3845) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (#("5" 0 1 (fontified t)) . -3846) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) 3847 (t 25820 39328 171910 410000)) nil (25820 39361 642460 262000) 0 nil])
([nil nil ((#("                //(room_size + wall_width) * grid.width as f32,
" 0 16 (fontified t) 16 18 (fontified t face font-lock-comment-delimiter-face) 18 19 (fontified t face font-lock-comment-face) 19 31 (fontified t face font-lock-comment-face) 31 56 (fontified t face font-lock-comment-face) 56 58 (fontified t face font-lock-comment-face) 58 59 (fontified t face font-lock-comment-face) 59 62 (fontified t face font-lock-comment-face) 62 63 (fontified t face font-lock-comment-face) 63 64 (fontified t face font-lock-comment-face)) . 3236) (undo-tree-id2551 . -63) (undo-tree-id2552 . -30) (undo-tree-id2553 . -30) (undo-tree-id2554 . -61) (undo-tree-id2555 . -61) (undo-tree-id2556 . -61) (undo-tree-id2557 . -61) (undo-tree-id2558 . -61) (undo-tree-id2559 . -61) (undo-tree-id2560 . -64) 3297) nil (25820 39361 642445 30000) 0 nil])
([nil nil ((#("                //4.5,
" 0 16 (fontified t) 16 18 (fontified t face font-lock-comment-delimiter-face) 18 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 23 (fontified t face font-lock-comment-face)) . 3311) (undo-tree-id2533 . -22) (undo-tree-id2534 . -21) (undo-tree-id2535 . -21) (undo-tree-id2536 . -21) (undo-tree-id2537 . -21) (undo-tree-id2538 . -21) (undo-tree-id2539 . -21) (undo-tree-id2540 . -21) (undo-tree-id2541 . -21) (undo-tree-id2542 . -21) (undo-tree-id2543 . -21) (undo-tree-id2544 . -21) (undo-tree-id2545 . -21) (undo-tree-id2546 . -21) (undo-tree-id2547 . -21) (undo-tree-id2548 . -21) (undo-tree-id2549 . -21) (undo-tree-id2550 . -23) 3332) nil (25820 39361 642562 165000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3814 . 3815) (nil fontified nil 3757 . 3815) (3757 . 3815) 3756) nil (25820 39372 313308 972000) 0 nil] [nil nil ((#("(room_size + wall_width) * grid.width as f32 + wall_width," 0 1 (fontified t) 1 13 (fontified t) 13 38 (fontified t) 38 40 (fontified t face font-lock-keyword-face) 40 41 (fontified t) 41 44 (fontified t face font-lock-type-face) 44 58 (fontified t)) . 3252) (undo-tree-id2518 . -57) (undo-tree-id2519 . -14) (undo-tree-id2520 . -14) (undo-tree-id2521 . -45) (undo-tree-id2522 . -45) (undo-tree-id2523 . -45) (undo-tree-id2524 . -45) (undo-tree-id2525 . -45) (undo-tree-id2526 . -45) (undo-tree-id2527 . -45) (undo-tree-id2528 . -45) (undo-tree-id2529 . -45) (undo-tree-id2530 . -45) (undo-tree-id2531 . -58) (undo-tree-id2532 . -58)) ((3252 . 3310)) (25820 39361 642421 252000) 0 nil])
([nil nil ((#("," 0 1 (rear-nonsticky t fontified t)) . 3814) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1)) nil (25820 39372 313307 5000) 0 nil])
nil
([nil nil ((3814 . 3815)) nil (25820 39372 313297 732000) 0 nil])
([nil nil ((3757 . 3758)) nil (25820 39372 313296 585000) 0 nil])
([nil nil ((3720 . 3733) (3737 . 3748) (3738 . 3739) (3756 . 3767) (3757 . 3758) (3822 . 3832) 3757) nil (25820 39372 313291 640000) 0 nil])
([nil nil ((1575 . 1576) (t 25820 39372 315243 956000)) nil (25820 39398 714001 990000) 0 nil])
([nil nil ((1579 . 1580)) nil (25820 39398 713997 829000) 0 nil])
([nil nil ((3096 . 3112) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -3096) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (3094 . 3097) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -3094) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (3091 . 3095) (#("p" 0 1 (fontified t face font-lock-variable-name-face)) . -3091) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -3092) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -3093) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) 3094 (3087 . 3094) (3082 . 3087) (t 25820 39398 718577 417000) 3080) nil (25820 40172 302001 209000) 0 nil])
([nil nil ((#("    let position = Vec3::new(
" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 16 (fontified t face font-lock-variable-name-face) 16 19 (fontified t) 19 23 (fontified t face font-lock-type-face) 23 29 (fontified t) 29 30 (fontified t)) . 3083) (undo-tree-id3239 . -29) (undo-tree-id3240 . -30) (undo-tree-id3241 . -29) (undo-tree-id3242 . -29) (undo-tree-id3243 . -16) (undo-tree-id3244 . -16) (undo-tree-id3245 . -13) (undo-tree-id3246 . -13) (undo-tree-id3247 . -30) (undo-tree-id3248 . -30) (undo-tree-id3249 . -30)) nil (25820 40180 92226 241000) 0 nil] [nil nil ((#("                -wall_width / 2.0,
                0.0,
                (room_size + wall_width) * grid.width as f32 / 2.0 - wall_width / 2.0,
" 0 16 (fontified t) 16 33 (fontified t) 33 34 (fontified t) 34 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 55 (fontified t) 55 56 (fontified t) 56 70 (fontified t) 70 71 (fontified t) 71 72 (fontified t) 72 73 (fontified t) 73 85 (fontified t) 85 110 (fontified t) 110 112 (fontified t face font-lock-keyword-face) 112 113 (fontified t) 113 116 (fontified t face font-lock-type-face) 116 141 (fontified t) 141 143 (fontified t)) . 3475) (undo-tree-id2801 . -84) (undo-tree-id2802 . -28) (undo-tree-id2803 . -84) (undo-tree-id2804 . -142) (undo-tree-id2806 . -28) (undo-tree-id2808 . -28) (undo-tree-id2810 . -55) (undo-tree-id2812 . -84) (undo-tree-id2813 . -84) (undo-tree-id2815 . -84) 3559) ((3475 . 3618)) (25820 40171 678574 816000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3885 . 3886) (#("
" 0 1 (fontified nil)) . -4693) (3881 . 4694) 3874 (t 25820 40180 95247 778000)) nil (25820 40265 758349 510000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3128 . 3129) (#("
" 0 1 (fontified nil)) . -3255) (3112 . 3256) 3096) ((#("
                -wall_width / 2.0,
                0.0,
                (room_size + wall_width) * grid.width as f32 / 2.0 - wall_width / 2.0,
" 0 1 (fontified t) 1 16 (fontified nil) 16 17 (fontified nil rear-nonsticky nil) 17 34 (fontified nil) 34 35 (fontified nil) 35 36 (fontified nil) 36 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t) 52 56 (fontified t) 56 57 (fontified t) 57 71 (fontified nil) 71 72 (fontified nil) 72 73 (fontified nil) 73 74 (fontified nil) 74 86 (fontified nil) 86 111 (fontified nil) 111 113 (fontified nil face font-lock-keyword-face) 113 114 (fontified nil) 114 117 (fontified nil face font-lock-type-face) 117 142 (fontified nil) 142 143 (fontified nil) 143 144 (fontified nil)) . 3112) (undo-tree-id3237 . -142) (undo-tree-id3238 . -142) (3255 . 3256) (nil rear-nonsticky t 3128 . 3129)) (25820 40171 455111 308000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3886) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) 3887 (3886 . 3887) (3881 . 3886) 3878) nil (25820 40265 758347 672000) 0 nil])
([nil nil ((3135 . 3136) (#("                " 0 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil)) . 3135) (#("
" 0 1 (fontified t)) . -3135) (3130 . 3131) (#("                " 0 14 (fontified nil) 14 15 (fontified nil) 15 16 (fontified nil)) . 3130) (#("
" 0 1 (fontified t)) . -3130) (#("                " 0 15 (fontified nil) 15 16 (fontified nil rear-nonsticky t)) . 3112) (undo-tree-id2798 . -16) (#("
" 0 1 (fontified t)) . -3112) (undo-tree-id2799 . -1) 3099) ((3112 . 3113) (3112 . 3128) (3130 . 3131) (3130 . 3146) (#(" " 0 1 (fontified nil)) . 3130) (3135 . 3136) (3135 . 3151) (#(" " 0 1 (fontified t)) . 3135)) (25820 40171 230506 955000) 0 nil])
([nil nil ((3894 . 3898) (#("South" 0 5 (fontified t face font-lock-comment-face)) . 3894) (undo-tree-id3306 . -4) (undo-tree-id3307 . -5) (undo-tree-id3308 . -5)) nil (25820 40266 654619 540000) 0 nil])
([nil nil ((3205 . 3207) (#("," 0 1 (fontified t)) . -3205) (undo-tree-id2790 . -1) (undo-tree-id2792 . -1) (undo-tree-id2794 . -1) 3206) ((3205 . 3206) (#(");" 0 2 (fontified t)) . 3205)) (25820 40171 7399 280000) 0 nil])
([nil nil ((#("            wall_width / 2.0,
            wall_height / 2.0,
" 0 12 (fontified t) 12 23 (fontified t) 23 29 (fontified t) 29 30 (fontified t) 30 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 54 (fontified t) 54 60 (fontified t) 60 61 (fontified t)) . 4539) (undo-tree-id3381 . -40) (undo-tree-id3382 . -10) (undo-tree-id3383 . -40) (undo-tree-id3384 . -60) (undo-tree-id3385 . -10) (undo-tree-id3386 . -10) (undo-tree-id3387 . -40) (undo-tree-id3388 . -40) (undo-tree-id3389 . -40) (undo-tree-id3390 . -40) (undo-tree-id3391 . -10) (undo-tree-id3392 . -10) (undo-tree-id3393 . -10) (undo-tree-id3394 . -10) (undo-tree-id3395 . -40) (undo-tree-id3396 . -40) (undo-tree-id3397 . -40) (undo-tree-id3398 . -40) (undo-tree-id3399 . -10) (undo-tree-id3400 . -10) (undo-tree-id3401 . -10) (undo-tree-id3402 . -10) (undo-tree-id3403 . -40) (undo-tree-id3404 . -40) (undo-tree-id3405 . -40) (undo-tree-id3406 . -40) (undo-tree-id3407 . -10) (undo-tree-id3408 . -10) (undo-tree-id3409 . -40) (undo-tree-id3410 . -40) (undo-tree-id3411 . -10) (undo-tree-id3412 . -10) (undo-tree-id3413 . -10) (undo-tree-id3414 . -10) (undo-tree-id3415 . -30) (undo-tree-id3416 . -40) (undo-tree-id3417 . -40) (undo-tree-id3418 . -40) (undo-tree-id3419 . -40) (undo-tree-id3420 . -61) 4579) nil (25820 40280 611558 812000) 0 nil] [nil nil ((#("            wall_width / 2.0,
            wall_height / 2.0,
" 0 12 (fontified t) 12 23 (fontified t) 23 29 (fontified t) 29 30 (fontified t) 30 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 54 (fontified t) 54 60 (fontified t) 60 61 (fontified t)) . 4539) (undo-tree-id3278 . -40) (undo-tree-id3279 . -10) (undo-tree-id3280 . -40) (undo-tree-id3281 . -60) (undo-tree-id3282 . -10) (undo-tree-id3283 . -10) (undo-tree-id3284 . -40) (undo-tree-id3285 . -40) (undo-tree-id3286 . -40) (undo-tree-id3287 . -40) (undo-tree-id3288 . -10) (undo-tree-id3289 . -10) (undo-tree-id3290 . -10) (undo-tree-id3291 . -10) (undo-tree-id3292 . -40) (undo-tree-id3293 . -40) (undo-tree-id3294 . -40) (undo-tree-id3295 . -40) (undo-tree-id3296 . -10) (undo-tree-id3297 . -10) (undo-tree-id3298 . -10) (undo-tree-id3299 . -10) (undo-tree-id3300 . -30) (undo-tree-id3301 . -40) (undo-tree-id3302 . -40) (undo-tree-id3303 . -40) (undo-tree-id3304 . -40) (undo-tree-id3305 . -61) 4579) ((4539 . 4600)) (25820 40266 446294 278000) 0 nil])
([nil nil ((3558 . 3560) (#(":" 0 1 (fontified t)) . -3558) (undo-tree-id2701 . -1) (undo-tree-id2703 . -1) (undo-tree-id2705 . -1) (undo-tree-id2707 . -1) (undo-tree-id2709 . -1) (#(":" 0 1 (fontified t)) . -3559) (undo-tree-id2711 . -1) (undo-tree-id2713 . -1) (undo-tree-id2715 . -1) (undo-tree-id2717 . -1) (undo-tree-id2719 . -1) (#("f" 0 1 (fontified t)) . -3560) (undo-tree-id2721 . -1) (undo-tree-id2723 . -1) (undo-tree-id2725 . -1) (undo-tree-id2727 . -1) (undo-tree-id2729 . -1) (#("r" 0 1 (fontified t)) . -3561) (undo-tree-id2731 . -1) (undo-tree-id2733 . -1) (undo-tree-id2735 . -1) (undo-tree-id2737 . -1) 3562 (#("o" 0 1 (fontified t)) . -3562) (undo-tree-id2739 . -1) (undo-tree-id2741 . -1) (undo-tree-id2743 . -1) (undo-tree-id2745 . -1) (#("m" 0 1 (fontified t)) . -3563) (undo-tree-id2747 . -1) (undo-tree-id2749 . -1) (undo-tree-id2751 . -1) (undo-tree-id2753 . -1) (#("_" 0 1 (fontified t)) . -3564) (undo-tree-id2755 . -1) (undo-tree-id2757 . -1) (undo-tree-id2759 . -1) (undo-tree-id2761 . -1) (#("x" 0 1 (fontified t)) . -3565) (undo-tree-id2763 . -1) (undo-tree-id2765 . -1) (undo-tree-id2767 . -1) (undo-tree-id2769 . -1) (#("y" 0 1 (fontified t)) . -3566) (undo-tree-id2771 . -1) (undo-tree-id2773 . -1) (undo-tree-id2775 . -1) (undo-tree-id2777 . -1) (#("z" 0 1 (fontified t)) . -3567) (undo-tree-id2779 . -1) (undo-tree-id2781 . -1) (undo-tree-id2783 . -1) (undo-tree-id2785 . -1) (#("(" 0 1 (fontified t)) . -3568) (undo-tree-id2787 . -1) (undo-tree-id2789 . -1) 3569) ((3558 . 3569) (#(" {" 0 2 (fontified t)) . 3558) (undo-tree-id3233 . -2) (undo-tree-id3234 . -2) (undo-tree-id3235 . -2) (undo-tree-id3236 . -2)) (25820 40170 798425 174000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4629 . 4630) (#("
" 0 1 (fontified nil)) . -4678) (4617 . 4679) 4549) nil (25820 40280 611486 907000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4629 . 4630) (#("
" 0 1 (fontified nil)) . -4678) (4617 . 4679) 4549) ((#("
            wall_width / 2.0,
            wall_height / 2.0,
" 0 1 (fontified t) 1 12 (fontified nil) 12 13 (rear-nonsticky nil fontified nil) 13 24 (fontified nil) 24 30 (fontified nil) 30 31 (fontified nil) 31 41 (fontified nil) 41 42 (fontified nil) 42 43 (fontified nil) 43 55 (fontified nil) 55 61 (fontified nil) 61 62 (fontified nil)) . 4617) (4678 . 4679) (nil rear-nonsticky t 4629 . 4630)) (25820 40265 870224 743000) 0 nil])
([nil nil ((3573 . 3574) (#(")" 0 1 (fontified t)) . 3573) (undo-tree-id2694 . -1) (undo-tree-id2696 . -1) (undo-tree-id2698 . -1)) ((3573 . 3574) (#("}" 0 1 (fontified t)) . 3573)) (25820 40170 607252 8000) 0 nil])
([nil nil ((#("            wall_height / 2.0,
" 0 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 24 (fontified t) 24 30 (fontified t) 30 31 (fontified t)) . 4648) (undo-tree-id3372 . -30) (undo-tree-id3373 . -30) (undo-tree-id3374 . -12) (undo-tree-id3375 . -12) (undo-tree-id3376 . -12) (undo-tree-id3377 . -12) (undo-tree-id3378 . -12) (undo-tree-id3379 . -12) (undo-tree-id3380 . -31) 4660) nil (25820 40280 611485 740000) 0 nil])
([nil nil ((#("                -wall_width / 2.0,
                0.0,
" 0 16 (fontified t) 16 33 (fontified t) 33 34 (fontified t) 34 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 55 (fontified t) 55 56 (fontified t)) . 4261) (undo-tree-id3250 . -47) (undo-tree-id3251 . -12) (undo-tree-id3252 . -47) (undo-tree-id3253 . -55) (undo-tree-id3254 . -10) (undo-tree-id3255 . -10) (undo-tree-id3256 . -45) (undo-tree-id3257 . -45) (undo-tree-id3258 . -45) (undo-tree-id3259 . -45) (undo-tree-id3260 . -10) (undo-tree-id3261 . -10) (undo-tree-id3262 . -10) (undo-tree-id3263 . -10) (undo-tree-id3264 . -45) (undo-tree-id3265 . -45) (undo-tree-id3266 . -47) (undo-tree-id3267 . -47) (undo-tree-id3268 . -12) (undo-tree-id3269 . -12) (undo-tree-id3270 . -12) (undo-tree-id3271 . -12) (undo-tree-id3272 . -35) (undo-tree-id3273 . -47) (undo-tree-id3274 . -47) (undo-tree-id3275 . -47) (undo-tree-id3276 . -47) (undo-tree-id3277 . -56) 4308) ((4261 . 4317)) (25820 40265 758513 878000) 0 nil])
([nil nil ((3595 . 3599) (#("t" 0 1 (fontified t)) . -3595) (undo-tree-id2602 . -1) (undo-tree-id2604 . -1) 3596 (3588 . 3596) (3585 . 3588) (3584 . 3585) (#(";" 0 1 (fontified t)) . -3584) (undo-tree-id2606 . -1) (undo-tree-id2608 . -1) 3585 (3584 . 3585) (#("." 0 1 (fontified t)) . -3584) (undo-tree-id2610 . -1) (undo-tree-id2612 . -1) (undo-tree-id2614 . -1) (undo-tree-id2616 . -1) (undo-tree-id2618 . -1) (undo-tree-id2620 . -1) (undo-tree-id2622 . -1) (#("c" 0 1 (fontified t)) . -3585) (undo-tree-id2624 . -1) (undo-tree-id2626 . -1) (undo-tree-id2628 . -1) (undo-tree-id2630 . -1) (undo-tree-id2632 . -1) (undo-tree-id2634 . -1) (undo-tree-id2636 . -1) (#("l" 0 1 (fontified t)) . -3586) (undo-tree-id2638 . -1) (undo-tree-id2640 . -1) (undo-tree-id2642 . -1) (undo-tree-id2644 . -1) (undo-tree-id2646 . -1) (undo-tree-id2648 . -1) (#("o" 0 1 (fontified t)) . -3587) (undo-tree-id2650 . -1) (undo-tree-id2652 . -1) (undo-tree-id2654 . -1) (undo-tree-id2656 . -1) (undo-tree-id2658 . -1) (#("n" 0 1 (fontified t)) . -3588) (undo-tree-id2660 . -1) (undo-tree-id2662 . -1) (undo-tree-id2664 . -1) (undo-tree-id2666 . -1) (#("e" 0 1 (fontified t)) . -3589) (undo-tree-id2668 . -1) (undo-tree-id2670 . -1) (undo-tree-id2672 . -1) 3590 (3586 . 3590) (3581 . 3586) (#("i" 0 1 (fontified t)) . -3581) (undo-tree-id2673 . -1) (3579 . 3582) (#("i" 0 1 (fontified t)) . -3579) (undo-tree-id2675 . -1) (3574 . 3580) (3563 . 3574) (#("trans" 0 5 (fontified t)) . -3563) (undo-tree-id2678 . -1) (undo-tree-id2680 . -2) (undo-tree-id2682 . -3) (undo-tree-id2684 . -4) (undo-tree-id2686 . -5) (undo-tree-id2688 . -5) (undo-tree-id2690 . -5) (undo-tree-id2692 . -5) 3568 (3563 . 3568) (3560 . 3563) 3538) ((#("
		" 0 1 (fontified t) 1 3 (fontified nil)) . 3560) (undo-tree-id3183 . -3) (undo-tree-id3184 . -3) (undo-tree-id3185 . -3) (undo-tree-id3186 . -3) (undo-tree-id3187 . -1) (undo-tree-id3188 . -3) (undo-tree-id3189 . -3) (undo-tree-id3190 . -3) (#("trans" 0 5 (fontified nil)) . 3563) (undo-tree-id3191 . -5) (3563 . 3568) (#("translation" 0 11 (fontified nil face font-lock-variable-name-face)) . 3563) (undo-tree-id3192 . -11) (undo-tree-id3193 . -11) (undo-tree-id3194 . -11) (undo-tree-id3195 . -11) (undo-tree-id3196 . -11) (undo-tree-id3197 . -11) (undo-tree-id3198 . -11) (#(": posi" 0 5 (fontified nil) 5 6 (fontified nil)) . 3574) (undo-tree-id3199 . -5) (undo-tree-id3200 . -5) (undo-tree-id3201 . -5) (undo-tree-id3202 . -5) (undo-tree-id3203 . -6) (undo-tree-id3204 . -5) (undo-tree-id3205 . -5) (3579 . 3580) (#("iti" 0 2 (fontified nil) 2 3 (fontified nil)) . 3579) (undo-tree-id3206 . -2) (undo-tree-id3207 . -2) (undo-tree-id3208 . -2) (undo-tree-id3209 . -2) (undo-tree-id3210 . -3) (undo-tree-id3211 . -2) (undo-tree-id3212 . -2) (3581 . 3582) (#("ion.c" 0 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 3581) (undo-tree-id3213 . -3) (undo-tree-id3214 . -3) (undo-tree-id3215 . -3) (undo-tree-id3216 . -3) (undo-tree-id3217 . -5) (undo-tree-id3218 . -3) (undo-tree-id3219 . -3) (#("lone" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 3586) (undo-tree-id3220 . -4) (3584 . 3590) (#(";" 0 1 (fontified nil)) . 3584) (undo-tree-id3221 . -1) (3584 . 3585) (#("," 0 1 (fontified nil)) . 3584) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (#("
		" 0 1 (fontified t) 1 3 (fontified nil)) . 3585) (undo-tree-id3225 . 3) (undo-tree-id3226 . -3) (undo-tree-id3227 . -1) (undo-tree-id3228 . -3) (#("..defaut" 0 7 (fontified nil) 7 8 (fontified nil)) . 3588) (undo-tree-id3229 . -8) (undo-tree-id3230 . -7) (3595 . 3596) (#("lt()" 0 4 (fontified t)) . 3595) (undo-tree-id3231 . -3) (undo-tree-id3232 . -3)) (25820 40170 335235 34000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4629 . 4630) (#("
" 0 1 (fontified nil)) . -4648) (4617 . 4649) 4548) nil (25820 40280 611478 849000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4363 . 4364) (#("
" 0 1 (fontified nil)) . -4403) (4347 . 4404) 4273) ((#("
                -wall_width / 2.0,
                0.0,
" 0 1 (fontified t) 1 16 (fontified nil) 16 17 (fontified nil rear-nonsticky nil) 17 34 (fontified nil) 34 35 (fontified nil) 35 36 (fontified nil) 36 50 (fontified nil) 50 51 (fontified nil) 51 52 (fontified nil) 52 56 (fontified nil) 56 57 (fontified nil)) . 4347) (undo-tree-id3315 . -56) (undo-tree-id3316 . -1) (undo-tree-id3317 . -56) (undo-tree-id3318 . -1) (undo-tree-id3319 . -17) (undo-tree-id3320 . -17) (4403 . 4404) (nil rear-nonsticky t 4363 . 4364)) (25820 40265 758282 751000) 0 nil])
([nil nil ((3112 . 3121) (3130 . 3138) (3135 . 3140) (3136 . 3139) (3205 . 3211) (3561 . 3577) (#("		" 0 2 (fontified t)) . 3561) (undo-tree-id2584 . -2) (undo-tree-id2586 . -2) (undo-tree-id2588 . -2) (undo-tree-id2590 . -2) (undo-tree-id2592 . -2) (undo-tree-id2594 . -2) (undo-tree-id2596 . -2) (undo-tree-id2598 . -2) (3586 . 3602) (#("		" 0 2 (fontified t)) . 3586) (undo-tree-id2600 . -2) 3598) ((3586 . 3588) (#("                " 0 16 (fontified t)) . 3586) (3561 . 3563) (#("                " 0 16 (fontified t)) . 3561) (#(",
    " 0 2 (fontified nil) 2 6 (fontified t)) . 3205) (#("   " 0 3 (fontified nil)) . 3136) (#("
    " 0 1 (fontified nil) 1 5 (fontified t)) . 3135) (#("
       " 0 1 (fontified nil) 1 8 (fontified t)) . 3130) (#("
        " 0 1 (fontified t) 1 9 (fontified t)) . 3112)) (25820 40169 902622 9000) 0 nil])
([nil nil ((#("                -wall_width / 2.0,
                0.0,
" 0 16 (fontified t) 16 33 (fontified t) 33 34 (fontified t) 34 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 55 (fontified t) 55 56 (fontified t)) . 4261) (undo-tree-id3334 . -47) (undo-tree-id3335 . -12) (undo-tree-id3336 . -47) (undo-tree-id3337 . -55) (undo-tree-id3338 . -10) (undo-tree-id3339 . -10) (undo-tree-id3340 . -45) (undo-tree-id3341 . -45) (undo-tree-id3342 . -45) (undo-tree-id3343 . -45) (undo-tree-id3344 . -10) (undo-tree-id3345 . -10) (undo-tree-id3346 . -10) (undo-tree-id3347 . -10) (undo-tree-id3348 . -45) (undo-tree-id3349 . -45) (undo-tree-id3350 . -47) (undo-tree-id3351 . -47) (undo-tree-id3352 . -12) (undo-tree-id3353 . -12) (undo-tree-id3354 . -12) (undo-tree-id3355 . -12) (undo-tree-id3356 . -47) (undo-tree-id3357 . -47) (undo-tree-id3358 . -47) (undo-tree-id3359 . -47) (undo-tree-id3360 . -47) (undo-tree-id3361 . -47) (undo-tree-id3362 . -12) (undo-tree-id3363 . -12) (undo-tree-id3364 . -12) (undo-tree-id3365 . -12) (undo-tree-id3366 . -35) (undo-tree-id3367 . -47) (undo-tree-id3368 . -47) (undo-tree-id3369 . -47) (undo-tree-id3370 . -47) (undo-tree-id3371 . -56) 4308) nil (25820 40280 611476 705000) 0 nil])
nil
([nil nil ((3629 . 3637)) ((#(".clone()" 0 8 (fontified t)) . 3629)) (25820 40161 581967 923000) 0 nil] [nil nil ((#("((room_size + wall_width) * grid.width as f32 + wall_width) " 0 1 (fontified t) 1 39 (fontified t) 39 41 (fontified t face font-lock-keyword-face) 41 42 (fontified t) 42 45 (fontified t face font-lock-type-face) 45 59 (fontified t) 59 60 (fontified t)) . 3867) (undo-tree-id2971 . -59) (undo-tree-id2972 . -14) (undo-tree-id2973 . -14) (undo-tree-id2974 . -14) (undo-tree-id2975 . -14) (t 25820 40062 101913 881000)) ((3867 . 3927)) (25820 40094 927248 997000) 0 nil] [nil nil ((#("wall_width " 0 11 (fontified t)) . 3806) (undo-tree-id2918 . -7) (undo-tree-id2919 . -3) (undo-tree-id2920 . 3) (undo-tree-id2921 . -7) (undo-tree-id2922 . -3) (undo-tree-id2923 . -10) (undo-tree-id2924 . -7) (undo-tree-id2925 . -7) (undo-tree-id2926 . -7) (undo-tree-id2927 . -7) (undo-tree-id2928 . -7) (undo-tree-id2929 . -7) (undo-tree-id2930 . -3) (undo-tree-id2931 . -3) (undo-tree-id2932 . -7) (undo-tree-id2933 . -11) (t 25820 39695 125245 498000)) ((3806 . 3817)) (25820 40060 206362 191000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4363 . 4364) (#("
" 0 1 (fontified nil)) . -4403) (4347 . 4404) 4273) nil (25820 40280 611450 969000) 0 nil])
([nil nil ((#("((room_size + wall_width) * grid.width as f32 + wall_width) " 0 1 (fontified t) 1 39 (fontified t) 39 41 (fontified t face font-lock-keyword-face) 41 42 (fontified t) 42 45 (fontified t face font-lock-type-face) 45 59 (fontified t) 59 60 (fontified t)) . 3875) (undo-tree-id3118 . -59) (undo-tree-id3119 . -14) (undo-tree-id3120 . -14) (undo-tree-id3121 . -14) (undo-tree-id3122 . -14) (undo-tree-id3123 . -32) (undo-tree-id3124 . -32) (undo-tree-id3125 . -60)) ((3875 . 3935)) (25820 40161 23039 404000) 0 nil])
([nil nil ((3872 . 3878) (#("i" 0 1 (fontified t)) . -3872) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (3870 . 3873) (#("i" 0 1 (fontified t)) . -3870) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (3867 . 3871)) ((#("posi" 0 3 (fontified nil) 3 4 (fontified nil)) . 3867) (undo-tree-id3004 . -4) (undo-tree-id3005 . -3) (undo-tree-id3006 . -3) (undo-tree-id3007 . -3) (undo-tree-id3008 . -3) (undo-tree-id3009 . -3) (undo-tree-id3010 . -3) (undo-tree-id3011 . -3) (undo-tree-id3012 . -3) (undo-tree-id3013 . -3) (undo-tree-id3014 . -3) (undo-tree-id3015 . -3) (undo-tree-id3016 . -3) (undo-tree-id3017 . -3) (undo-tree-id3018 . -3) (undo-tree-id3019 . -3) (undo-tree-id3020 . -3) (undo-tree-id3021 . -4) (undo-tree-id3022 . -3) (undo-tree-id3023 . -3) (3870 . 3871) (#("iti" 0 2 (fontified nil) 2 3 (fontified nil)) . 3870) (undo-tree-id3024 . -3) (undo-tree-id3025 . -2) (undo-tree-id3026 . -2) (undo-tree-id3027 . -2) (undo-tree-id3028 . -2) (undo-tree-id3029 . -2) (undo-tree-id3030 . -2) (undo-tree-id3031 . -2) (undo-tree-id3032 . -2) (undo-tree-id3033 . -2) (undo-tree-id3034 . -2) (undo-tree-id3035 . -2) (undo-tree-id3036 . -2) (undo-tree-id3037 . -2) (undo-tree-id3038 . -2) (undo-tree-id3039 . -2) (undo-tree-id3040 . -3) (undo-tree-id3041 . -2) (undo-tree-id3042 . -2) (3872 . 3873) (#("ion.z " 0 6 (fontified t)) . 3872) (undo-tree-id3043 . -5) (undo-tree-id3044 . -5) (undo-tree-id3045 . -5) (undo-tree-id3046 . -5) (undo-tree-id3047 . -5) (undo-tree-id3048 . -5) (undo-tree-id3049 . -5) (undo-tree-id3050 . -5) (undo-tree-id3051 . -5) (undo-tree-id3052 . -5) (undo-tree-id3053 . -5) (undo-tree-id3054 . -5) (undo-tree-id3055 . -5) (undo-tree-id3056 . -5) (undo-tree-id3057 . -5) (undo-tree-id3058 . -5) (undo-tree-id3059 . -5) (undo-tree-id3060 . -5)) (25820 40094 238786 170000) 0 nil] [nil nil ((#("i" 0 1 (fontified t)) . -3870) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (3867 . 3871)) ((#("posi" 0 3 (fontified nil) 3 4 (fontified nil)) . 3867) (undo-tree-id2980 . -4) (3870 . 3871)) (25820 40081 483448 784000) 0 nil])
([nil nil ((#("wall_height " 0 12 (fontified t)) . 3825) (undo-tree-id2916 . -11) (undo-tree-id2917 . -12)) ((3825 . 3837)) (25820 40059 854381 65000) 0 nil])
([nil nil ((#("                0.0,
" 0 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 20 (fontified t) 20 21 (fontified t)) . 4383) (undo-tree-id3325 . -20) (undo-tree-id3326 . -20) (undo-tree-id3327 . -16) (undo-tree-id3328 . -16) (undo-tree-id3329 . -16) (undo-tree-id3330 . -16) (undo-tree-id3331 . -16) (undo-tree-id3332 . -16) (undo-tree-id3333 . -21) 4399) nil (25820 40280 611449 495000) 0 nil])
([nil nil ((3880 . 3886) (#("i" 0 1 (fontified t)) . -3880) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (3878 . 3881) (#("i" 0 1 (fontified t)) . -3878) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (3875 . 3879)) ((#("posi" 0 3 (fontified nil) 3 4 (fontified nil)) . 3875) (undo-tree-id3126 . -4) (undo-tree-id3127 . -3) (undo-tree-id3128 . -3) (undo-tree-id3129 . -3) (undo-tree-id3130 . -3) (undo-tree-id3131 . -3) (undo-tree-id3132 . -3) (undo-tree-id3133 . -3) (undo-tree-id3134 . -3) (undo-tree-id3135 . -3) (undo-tree-id3136 . -3) (undo-tree-id3137 . -3) (undo-tree-id3138 . -3) (undo-tree-id3139 . -3) (undo-tree-id3140 . -3) (undo-tree-id3141 . -3) (undo-tree-id3142 . -3) (undo-tree-id3143 . -4) (undo-tree-id3144 . -3) (undo-tree-id3145 . -3) (3878 . 3879) (#("iti" 0 2 (fontified nil) 2 3 (fontified nil)) . 3878) (undo-tree-id3146 . -3) (undo-tree-id3147 . -2) (undo-tree-id3148 . -2) (undo-tree-id3149 . -2) (undo-tree-id3150 . -2) (undo-tree-id3151 . -2) (undo-tree-id3152 . -2) (undo-tree-id3153 . -2) (undo-tree-id3154 . -2) (undo-tree-id3155 . -2) (undo-tree-id3156 . -2) (undo-tree-id3157 . -2) (undo-tree-id3158 . -2) (undo-tree-id3159 . -2) (undo-tree-id3160 . -2) (undo-tree-id3161 . -2) (undo-tree-id3162 . -3) (undo-tree-id3163 . -2) (undo-tree-id3164 . -2) (3880 . 3881) (#("ion.z " 0 6 (fontified t)) . 3880) (undo-tree-id3165 . -5) (undo-tree-id3166 . -5) (undo-tree-id3167 . -5) (undo-tree-id3168 . -5) (undo-tree-id3169 . -5) (undo-tree-id3170 . -5) (undo-tree-id3171 . -5) (undo-tree-id3172 . -5) (undo-tree-id3173 . -5) (undo-tree-id3174 . -5) (undo-tree-id3175 . -5) (undo-tree-id3176 . -5) (undo-tree-id3177 . -5) (undo-tree-id3178 . -5) (undo-tree-id3179 . -5) (undo-tree-id3180 . -5) (undo-tree-id3181 . -5) (undo-tree-id3182 . -5)) (25820 40160 222477 479000) 0 nil])
([nil nil ((#("
            " 0 1 (fontified t) 1 13 (fontified t)) . 3793) (undo-tree-id2981 . -13) (undo-tree-id2982 . -13) (undo-tree-id2983 . -13) (#("
          " 0 1 (fontified t) 1 11 (fontified t)) . 3823) (#(" " 0 1 (fontified t)) . 3835) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (#("
          " 0 1 (fontified t) 1 11 (fontified t)) . 3854) (undo-tree-id2986 . -10) (undo-tree-id2987 . -10) (undo-tree-id2988 . -1) (#(" " 0 1 (fontified t)) . 3866) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (#(",
        " 0 2 (fontified t) 2 10 (fontified t)) . 3883) 3877) ((3883 . 3893) (3866 . 3867) (3854 . 3865) (3835 . 3836) (3823 . 3834) (3793 . 3806) (t 25820 40087 5247 331000)) (25820 40087 3445 119000) 0 nil])
([nil nil ((3889 . 3890) (3887 . 3889) 3886) ((#("
	" 0 1 (fontified t) 1 2 (fontified nil)) . 3887) (undo-tree-id2977 . -1) (undo-tree-id2978 . -2) (undo-tree-id2979 . -2) (#("n" 0 1 (fontified t)) . 3889)) (25820 40081 483326 243000) 0 nil])
([nil nil ((#("((room_size + wall_width) * grid.width as f32 + wall_width) " 0 1 (fontified t) 1 39 (fontified t) 39 41 (fontified t face font-lock-keyword-face) 41 42 (fontified t) 42 45 (fontified t face font-lock-type-face) 45 59 (fontified t) 59 60 (fontified t)) . 3844) (undo-tree-id2910 . -59) (undo-tree-id2911 . -14) (undo-tree-id2912 . -14) (undo-tree-id2913 . -14) (undo-tree-id2914 . -14) (undo-tree-id2915 . -60)) ((3844 . 3904)) (25820 40059 454000 622000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4363 . 4364) (#("
" 0 1 (fontified nil)) . -4368) (4347 . 4369) 4274) nil (25820 40280 611441 713000) 0 nil])
([nil nil ((#("
            " 0 1 (fontified t) 1 13 (fontified t)) . 3801) (undo-tree-id3061 . -13) (undo-tree-id3062 . -13) (#("
          " 0 1 (fontified t) 1 11 (fontified t)) . 3831) (#(" " 0 1 (fontified t)) . 3843) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (#("
          " 0 1 (fontified t) 1 11 (fontified t)) . 3862) (undo-tree-id3065 . -10) (undo-tree-id3066 . -10) (undo-tree-id3067 . -1) (#(" " 0 1 (fontified t)) . 3874) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (#(",
        " 0 2 (fontified t) 2 10 (fontified t)) . 3891) 3885) ((3891 . 3901) (3874 . 3875) (3862 . 3873) (3843 . 3844) (3831 . 3842) (3801 . 3814) (t 25820 40115 471914 132000)) (25820 40115 399221 834000) 0 nil])
nil
nil
([nil nil ((3811 . 3816) (#("i" 0 1 (fontified t)) . -3811) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (3809 . 3812) (#("i" 0 1 (fontified t)) . -3809) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (3806 . 3810)) ((#("posi" 0 3 (fontified nil) 3 4 (fontified nil)) . 3806) (undo-tree-id2960 . -4) (undo-tree-id2961 . -3) (undo-tree-id2962 . -4) (undo-tree-id2963 . -3) (3809 . 3810) (#("iti" 0 2 (fontified nil) 2 3 (fontified nil)) . 3809) (undo-tree-id2964 . -3) (undo-tree-id2965 . -3) (undo-tree-id2966 . -2) (3811 . 3812) (#("ion.x" 0 5 (fontified t)) . 3811) (undo-tree-id2967 . -5) (undo-tree-id2968 . -5)) (25820 40059 278342 21000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 3882) (undo-tree-id3321 . -4) (undo-tree-id3322 . -4) (undo-tree-id3323 . -4) (undo-tree-id3324 . -4) 4364) nil (25820 40280 611437 861000) 0 nil])
nil
([nil nil ((3816 . 3817)) ((#(" " 0 1 (fontified t)) . 3816)) (25820 40059 102206 289000) 0 nil])
([nil nil ((#("                (room_size + wall_width) * grid.width as f32 + wall_width,
" 0 16 (fontified t) 16 17 (fontified t) 17 29 (fontified t) 29 54 (fontified t) 54 56 (fontified t face font-lock-keyword-face) 56 57 (fontified t) 57 60 (fontified t face font-lock-type-face) 60 74 (fontified t) 74 75 (fontified t)) . 4050) (undo-tree-id3433 . -74) (undo-tree-id3434 . -16) (undo-tree-id3435 . -16) (undo-tree-id3436 . -16) (undo-tree-id3437 . -16) (undo-tree-id3438 . -16) (undo-tree-id3439 . -16) (undo-tree-id3440 . -75) 4066 (t 25820 40280 615248 285000)) nil (25820 40357 740137 817000) 0 nil])
([nil nil ((3841 . 3847) (#("i" 0 1 (fontified t)) . -3841) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (3839 . 3842) (#("i" 0 1 (fontified t)) . -3839) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (3836 . 3840)) ((#("posi" 0 3 (fontified nil) 3 4 (fontified nil)) . 3836) (undo-tree-id2957 . -4) (undo-tree-id2958 . -3) (3839 . 3840) (#("iti" 0 2 (fontified nil) 2 3 (fontified nil)) . 3839) (undo-tree-id2959 . -3) (3841 . 3842) (#("ion.y " 0 6 (fontified t)) . 3841)) (25820 40058 653942 401000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4036 . 4037) (#("
" 0 1 (fontified nil)) . -4095) (4020 . 4096) 4008) nil (25820 40357 740130 317000) 0 nil])
([nil nil ((3866 . 3877)) ((#("position.y " 0 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . 3866) (undo-tree-id2934 . -9) (undo-tree-id2935 . -9) (undo-tree-id2936 . -10) (undo-tree-id2937 . -10) (undo-tree-id2938 . -9) (undo-tree-id2939 . -9) (undo-tree-id2940 . -9) (undo-tree-id2941 . -9) (undo-tree-id2942 . -9) (undo-tree-id2943 . -9) (undo-tree-id2944 . -9) (undo-tree-id2945 . -9) (undo-tree-id2946 . -9) (undo-tree-id2947 . -9) (undo-tree-id2948 . -9) (undo-tree-id2949 . -9) (undo-tree-id2950 . -9) (undo-tree-id2951 . -9) (undo-tree-id2952 . -9) (undo-tree-id2953 . -9) (undo-tree-id2954 . -9) (undo-tree-id2955 . -9) (undo-tree-id2956 . -9)) (25820 40058 494162 665000) 0 nil])
([nil nil ((#("                wall_width,
" 0 16 (fontified t) 16 27 (fontified t) 27 28 (fontified t)) . 3993) (undo-tree-id3421 . -27) (undo-tree-id3422 . -15) (undo-tree-id3423 . -15) (undo-tree-id3424 . -15) (undo-tree-id3425 . -15) (undo-tree-id3426 . -16) (undo-tree-id3427 . -16) (undo-tree-id3428 . -16) (undo-tree-id3429 . -16) (undo-tree-id3430 . -16) (undo-tree-id3431 . -16) (undo-tree-id3432 . -28) 4009) nil (25820 40357 740128 79000) 0 nil])
([nil nil ((3875 . 3876) (#("y" 0 1 (fontified t)) . 3875) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1)) ((3875 . 3876) (#("z" 0 1 (fontified t)) . 3875)) (25820 40058 302969 727000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4112 . 4113) (#("
" 0 1 (fontified nil)) . -4124) (4096 . 4125) 4084) nil (25820 40357 740106 919000) 0 nil])
([nil nil ((#("
            " 0 1 (fontified t) 1 13 (fontified t)) . 3793) (undo-tree-id2851 . -13) (undo-tree-id2852 . -13) (undo-tree-id2853 . -13) (undo-tree-id2854 . -13) (undo-tree-id2855 . -13) (undo-tree-id2856 . -13) (undo-tree-id2857 . -13) (undo-tree-id2858 . -13) (undo-tree-id2859 . -13) (undo-tree-id2860 . -13) (undo-tree-id2861 . -13) (undo-tree-id2862 . -13) (undo-tree-id2863 . -13) (undo-tree-id2864 . -13) (undo-tree-id2865 . -13) (undo-tree-id2866 . -13) (undo-tree-id2867 . -13) (undo-tree-id2868 . -13) (undo-tree-id2869 . -13) (undo-tree-id2870 . -13) (undo-tree-id2871 . -13) (undo-tree-id2872 . -13) (undo-tree-id2873 . -13) (undo-tree-id2874 . -13) (undo-tree-id2875 . -13) (#("
          " 0 1 (fontified t) 1 11 (fontified t)) . 3823) (#(" " 0 1 (fontified t)) . 3835) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (#("
          " 0 1 (fontified t) 1 11 (fontified t)) . 3853) (undo-tree-id2884 . -1) (#(" " 0 1 (fontified t)) . 3865) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (#(",
        " 0 2 (fontified t) 2 10 (fontified t)) . 3882) 3875) ((3882 . 3892) (3865 . 3866) (3853 . 3864) (3835 . 3836) (3823 . 3834) (3793 . 3806) (t 25820 40042 945247 119000)) (25820 40042 940786 869000) 0 nil])
([nil nil ((#("        Name::new(\"South Wall\"),
" 0 8 (fontified t) 8 12 (fontified t face font-lock-type-face) 12 18 (fontified t) 18 30 (fontified t face font-lock-string-face) 30 32 (fontified t) 32 33 (fontified t)) . 4450) (undo-tree-id3453 . -32) (undo-tree-id3454 . -33) (undo-tree-id3455 . -33) (undo-tree-id3456 . -33) (t 25820 40357 741915 314000)) nil (25820 42826 960970 128000) 0 nil])
nil
([nil nil ((#("        Name::new(\"South Wall\"),
" 0 8 (fontified t) 8 12 (fontified t face font-lock-type-face) 12 18 (fontified t) 18 30 (fontified t face font-lock-string-face) 30 32 (fontified t) 32 33 (fontified t)) . 3638) (undo-tree-id3441 . -32) (undo-tree-id3442 . -3) (undo-tree-id3443 . -3) (undo-tree-id3444 . -3) (undo-tree-id3445 . -3) (undo-tree-id3446 . -3) (undo-tree-id3447 . -3) (undo-tree-id3448 . -3) (undo-tree-id3449 . -3) (undo-tree-id3450 . -3) (undo-tree-id3451 . -3) (undo-tree-id3452 . -33) 3641) nil (25820 42826 960933 892000) 0 nil])
([nil nil ((2960 . 2961) (#("1" 0 1 (fontified t)) . 2960) (undo-tree-id3457 . -1) (t 25820 42826 965260 480000)) nil (25820 46961 796957 620000) 0 nil])
([nil nil ((2960 . 2961) (#("5" 0 1 (fontified t)) . 2960) (undo-tree-id3459 . -1) (t 25820 46961 801946 987000)) nil (25820 46980 342446 576000) 0 nil])
([nil nil ((2962 . 2963) (#("0" 0 1 (fontified t)) . 2962) (undo-tree-id3458 . -1)) nil (25820 46980 342441 733000) 0 nil])
([nil nil ((2962 . 2963) (#("3" 0 1 (fontified t)) . 2962) (undo-tree-id3466 . -1) (t 25820 46980 348613 746000)) nil (25820 47036 724520 756000) 0 nil])
([nil nil ((2960 . 2961) (#("0" 0 1 (fontified t)) . 2960) (undo-tree-id3465 . -1)) nil (25820 47036 724519 53000) 0 nil])
([nil nil ((3013 . 3014) (#("1" 0 1 (fontified t)) . 3013) (undo-tree-id3464 . -1)) nil (25820 47036 724517 407000) 0 nil])
([nil nil ((3015 . 3016) (#("5" 0 1 (fontified t)) . 3015) (undo-tree-id3463 . -1)) nil (25820 47036 724515 425000) 0 nil])
([nil nil ((2988 . 2989) (#("1" 0 1 (fontified t)) . 2988) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1)) nil (25820 47036 724510 733000) 0 nil])
([nil nil ((3014 . 3015) (t 25820 47036 728614 24000)) nil (25820 47055 522327 134000) 0 nil])
([nil nil ((3508 . 3514) (3497 . 3508) (#("wall" 0 4 (fontified t)) . -3497) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -2) (undo-tree-id3470 . -2) (undo-tree-id3471 . -3) (undo-tree-id3472 . -3) (undo-tree-id3473 . -4) (undo-tree-id3474 . -4) (undo-tree-id3475 . -4) (undo-tree-id3476 . -4) (undo-tree-id3477 . -4) (undo-tree-id3478 . -4) (undo-tree-id3479 . -4) (undo-tree-id3480 . -4) (undo-tree-id3481 . -4) (undo-tree-id3482 . -4) (undo-tree-id3483 . -4) (undo-tree-id3484 . -4) 3501 (3497 . 3501) (#("0.0" 0 3 (fontified t)) . 3497) (undo-tree-id3485 . -2) (undo-tree-id3486 . -3) (undo-tree-id3487 . -3) (t 25820 47055 525280 777000)) nil (25820 47111 12784 857000) 0 nil])
([nil nil ((4353 . 4359) (4342 . 4353) (#("wall" 0 4 (fontified t)) . -4342) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -2) (undo-tree-id3510 . -2) (undo-tree-id3511 . -3) (undo-tree-id3512 . -3) (undo-tree-id3513 . -3) (undo-tree-id3514 . -3) (undo-tree-id3515 . -4) (undo-tree-id3516 . -4) (undo-tree-id3517 . -4) (undo-tree-id3518 . -4) (undo-tree-id3519 . -4) (undo-tree-id3520 . -4) (undo-tree-id3521 . -4) (undo-tree-id3522 . -4) (undo-tree-id3523 . -4) (undo-tree-id3524 . -4) (undo-tree-id3525 . -4) (undo-tree-id3526 . -4) 4346 (4342 . 4346) (#("0.0" 0 3 (fontified t)) . 4342) (undo-tree-id3527 . -2) (undo-tree-id3528 . -3) (undo-tree-id3529 . -3) (undo-tree-id3530 . -3) (undo-tree-id3531 . -3) (undo-tree-id3532 . -3) (undo-tree-id3533 . -3) (t 25820 47111 18614 378000)) nil (25820 47225 158412 70000) 0 nil])
([nil nil ((6127 . 6133) (6116 . 6127) (#("wall" 0 4 (fontified nil)) . 6116) (6116 . 6120) (#("0.0" 0 3 (fontified t)) . 6116) (undo-tree-id3495 . -2) (undo-tree-id3496 . -3) (undo-tree-id3497 . -3) (undo-tree-id3498 . -3) (undo-tree-id3499 . -3) (undo-tree-id3500 . -3) (undo-tree-id3501 . -3) (undo-tree-id3502 . -3) (undo-tree-id3503 . -3) (undo-tree-id3504 . -3) (undo-tree-id3505 . -3) (undo-tree-id3506 . -3)) nil (25820 47225 158392 823000) 0 nil])
([nil nil ((7137 . 7143) (7126 . 7137) (#("wall" 0 4 (fontified nil)) . 7126) (7126 . 7130) (#("0.0" 0 3 (fontified t)) . 7126) (undo-tree-id3488 . -2) (undo-tree-id3489 . -3) (undo-tree-id3490 . -3) (undo-tree-id3491 . -3) (undo-tree-id3492 . -3) (undo-tree-id3493 . -3) (undo-tree-id3494 . -3)) nil (25820 47225 158381 154000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 3014) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (t 25820 47225 161948 259000)) nil (25820 47270 693886 823000) 0 nil])
([nil nil ((2960 . 2961) (#("2" 0 1 (fontified t)) . 2960) (undo-tree-id3551 . -1)) nil (25820 47270 693884 318000) 0 nil])
([nil nil ((3013 . 3014) (#("3" 0 1 (fontified t)) . 3013) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1)) nil (25820 47270 693882 231000) 0 nil])
([nil nil ((2988 . 2989) (#("2" 0 1 (fontified t)) . 2988) (undo-tree-id3544 . -1)) nil (25820 47270 693867 610000) 0 nil])
([nil nil ((2989 . 2990) (#("9" 0 1 (fontified t)) . -2989) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) 2990 (2988 . 2990) (#("1" 0 1 (fontified t)) . -2988) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) 2989) nil (25820 47270 693862 352000) 0 nil])
([nil nil ((1576 . 1577) (t 25820 47270 698615 133000)) nil (25820 47333 715083 58000) 0 nil])
([nil nil ((1581 . 1582)) nil (25820 47333 715078 639000) 0 nil])
([nil nil ((1579 . 1580) (#("2" 0 1 (fontified t)) . 1579) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (t 25820 47333 718615 442000)) nil (25820 47370 493914 834000) 0 nil])
([nil nil ((1574 . 1575) (#("2" 0 1 (fontified t)) . 1574) (undo-tree-id3554 . -1)) nil (25820 47370 493908 539000) 0 nil])
([nil nil ((1579 . 1580) (#("1" 0 1 (fontified t)) . 1579) (undo-tree-id3561 . -1) (t 25820 47370 498615 622000)) nil (25820 47398 7008 12000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1580) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1)) nil (25820 47398 7005 55000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1580) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1)) nil (25820 47398 6999 650000) 0 nil])
([nil nil ((4025 . 4029) (#("i" 0 1 (fontified t)) . -4025) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (4023 . 4026) (#("width" 0 5 (fontified t)) . 4023) (undo-tree-id3572 . -4) (undo-tree-id3573 . -5) (undo-tree-id3574 . -5) (t 25820 47398 11949 82000)) nil (25820 47454 518471 390000) 0 nil])
([nil nil ((4288 . 4294) (#("width" 0 5 (fontified t)) . 4288) (undo-tree-id3565 . -4) (undo-tree-id3566 . -5) (undo-tree-id3567 . -5) (undo-tree-id3568 . -5) (undo-tree-id3569 . -5)) nil (25820 47454 518465 566000) 0 nil])
([nil nil ((4545 . 4551) (#("width" 0 4 (fontified t) 4 5 (fontified t)) . 4545) (undo-tree-id3562 . -4) (undo-tree-id3563 . -5) (undo-tree-id3564 . -5)) nil (25820 47454 518456 878000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 1574) (undo-tree-id3578 . -1) (undo-tree-id3579 . -1) (t 25820 47454 521949 339000)) nil (25820 47482 596217 884000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1574) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1)) nil (25820 47482 596213 640000) 0 nil])
([nil nil ((1574 . 1575) (#("0" 0 1 (fontified t)) . 1574) (undo-tree-id3575 . -1)) nil (25820 47482 596207 461000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 2986) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (t 25820 47482 601949 485000)) nil (25820 47504 69171 705000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . 2986) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1)) nil (25820 47504 69169 103000) 0 nil])
([nil nil ((2984 . 2985) (#("0" 0 1 (fontified t)) . 2984) (undo-tree-id3580 . -1)) nil (25820 47504 69163 382000) 0 nil])
([nil nil ((2986 . 2987)) nil (25820 47504 69152 855000) 0 nil])
([nil nil ((2984 . 2985) (#("1" 0 1 (fontified t)) . 2984) (undo-tree-id3589 . -1) (t 25820 47504 75282 928000)) nil (25820 47526 613263 485000) 0 nil])
([nil nil ((2986 . 2987) (#("0" 0 1 (fontified t)) . 2986) (undo-tree-id3588 . -1)) nil (25820 47526 613260 539000) 0 nil])
([nil nil ((3013 . 3014) (#("0" 0 1 (fontified t)) . 3013) (undo-tree-id3587 . -1)) nil (25820 47625 976388 547000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3071 . 3072) (#("
" 0 1 (fontified nil)) . -3207) (3067 . 3208) (t 25820 52343 771864 900000)) nil (25822 32216 312038 926000) 0 nil] [nil nil ((apply 48 4729 5414 undo--wrap-and-run-primitive-undo 4729 5414 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5412) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5396) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5368) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5349) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5270) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5245) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5166) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5118) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5098) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5045) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5020) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4967) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4909) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4830) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4791) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4737) 5462))) ((apply -48 4729 5462 undo--wrap-and-run-primitive-undo 4729 5462 ((4737 . 4740) (4791 . 4794) (4830 . 4833) (4909 . 4912) (4967 . 4970) (5020 . 5023) (5045 . 5048) (5098 . 5101) (5118 . 5121) (5166 . 5169) (5245 . 5248) (5270 . 5273) (5349 . 5352) (5368 . 5371) (5396 . 5399) (5412 . 5415)))) (25820 47590 656130 496000) 0 nil])
([nil nil ((3075 . 3080) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -3075) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("F" 0 1 (fontified t face font-lock-comment-face)) . -3076) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 3077 (3074 . 3077) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -3074) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -3075) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -3076) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 3077 (3073 . 3077) (#("f" 0 1 (fontified t)) . -3073) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("l" 0 1 (fontified t)) . -3074) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) 3075 (3072 . 3075) (3067 . 3072) 3067) nil (25822 32216 312155 344000) 0 nil])
nil
([nil nil ((3135 . 3146) (#("i" 0 1 (fontified t)) . -3135) (undo-tree-id115 . -1) (3133 . 3136) (3131 . 3133) (#("i" 0 1 (fontified t)) . -3131) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (3121 . 3132) (#("i" 0 1 (fontified t)) . -3121) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (3112 . 3122) (3103 . 3112) (#("room" 0 4 (fontified t)) . -3103) (undo-tree-id120 . -4) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -3) (undo-tree-id126 . -3) (undo-tree-id127 . -4) (undo-tree-id128 . -4) (undo-tree-id129 . -4) (undo-tree-id130 . -4) (undo-tree-id131 . -4) 3107 (3102 . 3107) (3096 . 3102) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -3096) (undo-tree-id132 . -1) (3095 . 3097) (#("w" 0 1 (fontified t face font-lock-variable-name-face)) . -3095) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -3096) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("d" 0 1 (fontified t face font-lock-variable-name-face)) . -3097) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -3098) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (#("h" 0 1 (fontified t face font-lock-variable-name-face)) . -3099) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (#(" " 0 1 (fontified t)) . -3100) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("=" 0 1 (fontified t)) . -3101) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#(" " 0 1 (fontified t)) . -3102) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) 3103 (3096 . 3103) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -3096) (undo-tree-id171 . -1) (3089 . 3097) (3085 . 3089) (3080 . 3085) 3079) nil (25822 32281 787649 650000) 0 nil] [nil nil ((#("5" 0 1 (fontified t)) . -3127) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("0" 0 1 (fontified t)) . -3128) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("." 0 1 (fontified t)) . -3129) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("0" 0 1 (fontified t)) . -3130) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 3131) ((3127 . 3131)) (25822 32216 312011 344000) 0 nil])
([nil nil ((3096 . 3100) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -3096) (undo-tree-id109 . -1) (3095 . 3097) (#("size" 0 4 (fontified t face font-lock-variable-name-face)) . 3095) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -3) (undo-tree-id113 . -4) (undo-tree-id114 . -4)) nil (25822 32281 787287 330000) 0 nil])
nil
([nil nil ((3168 . 3173) (3162 . 3168) (#("i" 0 1 (fontified t)) . -3162) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (3147 . 3163)) nil (25822 32281 787283 62000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3177 . 3178) (#("
" 0 1 (fontified nil)) . -3266) (3173 . 3267) 3172) nil (25822 32281 787280 998000) 0 nil])
([nil nil ((3190 . 3194) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -3190) (undo-tree-id103 . -1) (3188 . 3191) (#("width" 0 5 (fontified t face font-lock-variable-name-face)) . 3188) (undo-tree-id104 . -4) (undo-tree-id105 . -5) (undo-tree-id106 . -5)) nil (25822 32281 787279 586000) 0 nil])
([nil nil ((3231 . 3235) (#("i" 0 1 (fontified t)) . -3231) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (3229 . 3232) (#("width" 0 5 (fontified t)) . 3229) (undo-tree-id100 . -4) (undo-tree-id101 . -5) (undo-tree-id102 . -5)) nil (25822 32281 787276 290000) 0 nil])
([nil nil ((3315 . 3326) (#("floor" 0 5 (fontified t)) . -3315) (undo-tree-id71 . -5) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -3) (undo-tree-id77 . -3) (undo-tree-id78 . -4) (undo-tree-id79 . -4) (undo-tree-id80 . -5) (undo-tree-id81 . -5) (undo-tree-id82 . -5) (undo-tree-id83 . -5) (undo-tree-id84 . -5) (undo-tree-id85 . -5) (undo-tree-id86 . -5) 3320 (3315 . 3320) (#("w" 0 1 (fontified t)) . -3315) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) 3316 (3315 . 3316) (#("50.0" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 3315) (undo-tree-id91 . -3) (undo-tree-id92 . -4) (undo-tree-id93 . -4) (undo-tree-id94 . -4) (undo-tree-id95 . -4) (undo-tree-id96 . -4) (undo-tree-id97 . -4)) nil (25822 32281 787269 226000) 0 nil])
([nil nil ((3333 . 3344) (#("floor" 0 5 (fontified nil)) . 3333) (3333 . 3338) (#("w" 0 1 (fontified nil)) . -3333) (undo-tree-id65 . -1) 3334 (3333 . 3334) (#("50.0)" 0 5 (fontified t)) . 3333) (undo-tree-id66 . -4) (undo-tree-id67 . -5) (undo-tree-id68 . -5) (undo-tree-id69 . -5) (undo-tree-id70 . -5)) nil (25822 32281 787253 697000) 0 nil])
([nil nil ((3341 . 3345) (#("i" 0 1 (fontified t)) . -3341) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (3339 . 3342) (#("width" 0 5 (fontified t)) . 3339) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -5) (undo-tree-id60 . -5) (undo-tree-id61 . -4) (undo-tree-id62 . -4) (undo-tree-id63 . -5) (undo-tree-id64 . -5)) nil (25822 32281 787247 325000) 0 nil])
([nil nil ((3345 . 3346)) nil (25822 32281 787229 792000) 0 nil])
([nil nil ((#(" - wall_width / 2.0" 0 19 (fontified t)) . 3153) (undo-tree-id174 . -1) (undo-tree-id175 . -18) (undo-tree-id176 . -9) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -19) (t 25822 32281 790520 494000)) nil (25822 32355 351121 751000) 0 nil])
([nil nil ((#(" - wall_width / 2.0" 0 19 (fontified t)) . 3229) (undo-tree-id172 . -18) (undo-tree-id173 . -19)) nil (25822 32355 351110 560000) 0 nil])
([nil nil ((3296 . 3300) (#("i" 0 1 (fontified t)) . -3296) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (3290 . 3297) (#("0" 0 1 (fontified t)) . -3290) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#("." 0 1 (fontified t)) . -3291) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (#("1" 0 1 (fontified t)) . -3292) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) 3293 (t 25822 32355 353854 952000)) nil (25822 32407 982230 164000) 0 nil])
([nil nil ((3383 . 3389) (3373 . 3383) (#("wall" 0 4 (fontified t)) . -3373) (undo-tree-id222 . -4) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -3) (undo-tree-id228 . -3) (undo-tree-id229 . -4) (undo-tree-id230 . -4) (undo-tree-id231 . -4) (undo-tree-id232 . -4) (undo-tree-id233 . -4) (undo-tree-id234 . -4) (undo-tree-id235 . -4) (undo-tree-id236 . -4) (undo-tree-id237 . -4) 3377 (3373 . 3377) (#("0" 0 1 (fontified t)) . -3373) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (#("." 0 1 (fontified t)) . -3374) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (#("1" 0 1 (fontified t)) . -3375) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) 3376 (t 25822 32407 990522 468000)) nil (25822 32440 69726 118000) 0 nil])
([nil nil ((3388 . 3390) (3373 . 3388) (#("i" 0 1 (fontified t)) . -3373) (undo-tree-id207 . -1) (3369 . 3374) (#("i" 0 1 (fontified t)) . -3369) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (3367 . 3370) (#("0" 0 1 (fontified t)) . -3367) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (#("." 0 1 (fontified t)) . -3368) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (#("0" 0 1 (fontified t)) . -3369) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) 3370) nil (25822 32440 69859 819000) 0 nil])
([nil nil ((3432 . 3434) (3411 . 3432) (#("0" 0 1 (fontified nil)) . -3411) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (#("." 0 1 (fontified nil)) . -3412) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (#("0" 0 1 (fontified t)) . -3413) (undo-tree-id273 . -1) (undo-tree-id274 . -1) 3414) nil (25822 32444 183916 466000) 0 nil] [nil nil ((3433 . 3435) (3412 . 3433) (#("." 0 1 (fontified nil)) . -3412) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (#("0" 0 1 (fontified nil)) . -3413) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (#(")" 0 1 (fontified t)) . -3414) (undo-tree-id205 . -1) (undo-tree-id206 . -1) 3415) ((3412 . 3415) (#("grid.width as f32 / 2" 0 11 (fontified nil) 11 13 (fontified nil face font-lock-keyword-face) 13 14 (fontified nil) 14 17 (fontified nil face font-lock-type-face) 17 21 (fontified nil)) . 3412) (undo-tree-id260 . -21) (undo-tree-id261 . -21) (#(".0" 0 2 (fontified t)) . 3433) (undo-tree-id262 . -1) (undo-tree-id263 . -1)) (25822 32440 69692 966000) 0 nil])
([nil nil ((3421 . 3422) (3418 . 3421) (#("i" 0 1 (fontified t)) . -3418) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (3416 . 3419) (#("width" 0 5 (fontified t)) . 3416) (undo-tree-id266 . -4) (undo-tree-id267 . -5) (undo-tree-id268 . -5)) nil (25822 32444 183909 663000) 0 nil])
nil
([nil nil ((3367 . 3380) (3391 . 3402) (3392 . 3393) (3410 . 3421) (3411 . 3412) (3435 . 3445) 3421) nil (25822 32444 183894 565000) 0 nil])
([nil nil ((3162 . 3166) (#("i" 0 1 (fontified t)) . -3162) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (3153 . 3163) (t 25822 32444 187189 804000)) nil (25822 32538 164167 808000) 0 nil])
([nil nil ((3242 . 3255)) nil (25822 32538 164154 774000) 0 nil])
([nil nil ((3166 . 3172) (t 25822 32538 170524 608000)) nil (25822 32562 79224 485000) 0 nil])
([nil nil ((3261 . 3267)) nil (25822 32598 610926 549000) 0 nil])
([nil nil ((3454 . 3460) (3444 . 3454) (#("wall" 0 4 (fontified t)) . -3444) (undo-tree-id280 . -4) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -2) (undo-tree-id284 . -2) (undo-tree-id285 . -3) (undo-tree-id286 . -3) (undo-tree-id287 . -4) (undo-tree-id288 . -4) (undo-tree-id289 . -4) (undo-tree-id290 . -4) (undo-tree-id291 . -4) (undo-tree-id292 . -4) (undo-tree-id293 . -4) (undo-tree-id294 . -4) (undo-tree-id295 . -4) 3448 (3441 . 3448) (t 25822 32562 83858 318000)) nil (25822 32605 207881 909000) 0 nil] [nil nil ((nil rear-nonsticky nil 3446 . 3447) (nil fontified nil 3442 . 3447) (3442 . 3447) 3441 (t 25822 32562 83858 318000)) ((#("width" 0 4 (fontified nil) 4 5 (fontified nil rear-nonsticky nil)) . 3442) (undo-tree-id277 . -4) (undo-tree-id278 . -4) (undo-tree-id279 . -4) (nil rear-nonsticky t 3446 . 3447)) (25822 32598 610681 680000) 0 nil])
([nil nil ((3542 . 3548) (3532 . 3542) (#("wall" 0 4 (fontified nil)) . 3532) (3529 . 3536)) nil (25822 32605 207861 731000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . 3485) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (t 25822 32605 210525 692000)) nil (25822 32712 87646 253000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . 3485) (undo-tree-id384 . -1) (undo-tree-id385 . -1)) nil (25822 32712 87644 449000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3485) (undo-tree-id382 . -1) (undo-tree-id383 . -1)) nil (25822 32712 87642 766000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 3485) (undo-tree-id380 . -1) (undo-tree-id381 . -1)) nil (25822 32712 87641 203000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 3485) (undo-tree-id378 . -1) (undo-tree-id379 . -1)) nil (25822 32712 87639 660000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 3485) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1)) nil (25822 32712 87637 827000) 0 nil])
([nil nil ((3418 . 3419)) nil (25822 32712 87635 262000) 0 nil])
([nil nil ((3437 . 3439)) nil (25822 32712 87634 631000) 0 nil])
([nil nil ((#("+ wall_width" 0 2 (fontified t) 2 12 (fontified t)) . 3445) (undo-tree-id352 . -11) (undo-tree-id353 . -11) (undo-tree-id354 . -11) (undo-tree-id355 . -2) (undo-tree-id356 . -2) (undo-tree-id357 . -2) (undo-tree-id358 . -2) (undo-tree-id359 . -2) (undo-tree-id360 . -2) (undo-tree-id361 . -2) (undo-tree-id362 . -2) (undo-tree-id363 . -2) (undo-tree-id364 . -2) (undo-tree-id365 . -2) (undo-tree-id366 . -2) (undo-tree-id367 . -2) (undo-tree-id368 . -2) (undo-tree-id369 . -11) (undo-tree-id370 . -12) (undo-tree-id371 . -11) (undo-tree-id372 . -11) (undo-tree-id373 . -12) 3456) nil (25822 32712 87632 998000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3448 . 3449) (nil fontified nil 3437 . 3449) (3437 . 3449) 3436) nil (25822 32712 87588 454000) 0 nil])
([nil nil ((#("  / 2.0" 0 1 (fontified t) 1 7 (fontified t)) . 3456) (undo-tree-id327 . -6) (undo-tree-id328 . -1) (undo-tree-id329 . 6) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -7)) nil (25822 32712 87586 30000) 0 nil])
([nil nil ((#("            grid.height as f32 / 2.0 + wall_width / 2.0,
" 0 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 24 (fontified t) 24 26 (fontified t face font-lock-keyword-face) 26 27 (fontified t) 27 30 (fontified t face font-lock-type-face) 30 39 (fontified t) 39 55 (fontified t) 55 57 (fontified t)) . 3483) (undo-tree-id303 . -56) (undo-tree-id304 . -54) (undo-tree-id305 . -54) (undo-tree-id306 . -54) (undo-tree-id307 . -50) (undo-tree-id308 . -54) (undo-tree-id309 . -54) (undo-tree-id310 . -54) (undo-tree-id311 . -54) (undo-tree-id312 . -54) (undo-tree-id313 . -54) (undo-tree-id314 . -54) (undo-tree-id315 . -54) (undo-tree-id316 . -54) (undo-tree-id317 . -54) (undo-tree-id318 . -54) (undo-tree-id319 . -50) (undo-tree-id320 . -50) (undo-tree-id321 . -50) (undo-tree-id322 . -50) (undo-tree-id323 . -50) (undo-tree-id324 . -50) (undo-tree-id325 . -50) (undo-tree-id326 . -57) 3533) nil (25822 32712 87462 338000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3494 . 3495) (#("
" 0 1 (fontified nil)) . -3534) (3482 . 3535) 3468) nil (25822 32712 87448 993000) 0 nil])
([nil nil ((3503 . 3507) (#("i" 0 1 (fontified t)) . -3503) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (3501 . 3504) (#("width" 0 5 (fontified t)) . 3501) (undo-tree-id300 . -4) (undo-tree-id301 . -5) (undo-tree-id302 . -5)) nil (25822 32712 87446 919000) 0 nil])
([nil nil ((3338 . 3344) (#("r" 0 1 (fontified t)) . -3338) (undo-tree-id296 . -1) (undo-tree-id297 . -1) 3339 (3338 . 3339)) nil (25822 32712 87439 806000) 0 nil])
([nil nil ((3487 . 3493) (t 25822 32712 90527 756000)) nil (25822 32738 424176 795000) 0 nil])
([nil nil ((3488 . 3489) (#("*" 0 1 (fontified t)) . 3488) (undo-tree-id388 . -1)) nil (25822 32738 424173 108000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3272 . 3273) (#("
" 0 1 (fontified nil)) . -4048) (3268 . 4049) 3193 (t 25822 32738 427194 949000)) nil (25822 32850 979186 955000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3269) (undo-tree-id592 . -4) (undo-tree-id593 . -4) (undo-tree-id594 . -4) (undo-tree-id595 . -4) 3273 (3268 . 3273) 3178) nil (25822 32850 979185 211000) 0 nil])
([nil nil ((#("        Collider::cuboid(
            wall_width / 2.0,
            wall_height / 2.0,
            ((room_size + wall_width) * grid.width as f32 + wall_width) / 2.0,
        ),
" 0 8 (fontified t) 8 16 (fontified t face font-lock-type-face) 16 138 (fontified t) 138 140 (fontified t face font-lock-keyword-face) 140 141 (fontified t) 141 144 (fontified t face font-lock-type-face) 144 177 (fontified t)) . 3865) (undo-tree-id575 . -166) (undo-tree-id576 . -176) (undo-tree-id577 . -166) (undo-tree-id578 . -166) (undo-tree-id579 . -177) (undo-tree-id580 . -166) (undo-tree-id581 . -26) (undo-tree-id582 . -26) (undo-tree-id583 . -56) (undo-tree-id584 . -56) (undo-tree-id585 . -87) (undo-tree-id586 . -87) (undo-tree-id587 . -166) (undo-tree-id588 . -166) (undo-tree-id589 . -166) (undo-tree-id590 . -166) (undo-tree-id591 . -177) 4031) nil (25822 32850 979180 443000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3872 . 3873) (#("
" 0 1 (fontified nil)) . -3935) (3864 . 3936) 3839) nil (25822 32850 979166 967000) 0 nil])
([nil nil ((apply -24 3944 4280 undo--wrap-and-run-primitive-undo 3944 4280 ((4260 . 4263) (4245 . 4248) (4189 . 4192) (4155 . 4158) (4100 . 4103) (4046 . 4049) (3972 . 3975) (3948 . 3951) 4243))) nil (25822 32850 979165 264000) 0 nil])
([nil nil ((#("                -wall_width / 2.0,
                wall_height / 2.0,
                (room_size + wall_width) * grid.width as f32 / 2.0 - wall_width / 2.0,
" 0 124 (fontified t) 124 126 (fontified t face font-lock-keyword-face) 126 127 (fontified t) 127 130 (fontified t face font-lock-type-face) 130 157 (fontified t)) . 3632) (undo-tree-id546 . -79) (undo-tree-id547 . -156) (undo-tree-id548 . -9) (undo-tree-id549 . -79) (undo-tree-id550 . -79) (undo-tree-id551 . -35) (undo-tree-id552 . -35) (undo-tree-id553 . -70) (undo-tree-id554 . -70) (undo-tree-id555 . -157) (undo-tree-id556 . -157) (undo-tree-id557 . -79) (undo-tree-id558 . -79) (undo-tree-id559 . -44) (undo-tree-id560 . -44) (undo-tree-id561 . -9) (undo-tree-id562 . -9) (undo-tree-id563 . -157) (undo-tree-id564 . -9) (undo-tree-id565 . -79) (undo-tree-id566 . -9) (undo-tree-id567 . -9) (undo-tree-id568 . -44) (undo-tree-id569 . -44) (undo-tree-id570 . -70) (undo-tree-id571 . -79) (undo-tree-id572 . -79) (undo-tree-id573 . -79) (undo-tree-id574 . -157) 3711) nil (25822 32850 979163 391000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3635 . 3636) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -3776) (3631 . 3777) 3597) nil (25822 32850 979149 334000) 0 nil])
([nil nil ((apply 9 3632 3768 undo--wrap-and-run-primitive-undo 3632 3768 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3719) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3688) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3636) 3777))) nil (25822 32850 979147 942000) 0 nil])
([nil nil ((#("            " 0 3 (fontified nil) 3 4 (fontified nil rear-nonsticky t) 4 12 (fontified nil)) . -3634) (undo-tree-id529 . -4) (undo-tree-id530 . -4) (undo-tree-id531 . -4) (undo-tree-id532 . -4) (undo-tree-id533 . -4) (undo-tree-id534 . -4) (undo-tree-id535 . -4) (undo-tree-id536 . -4) (undo-tree-id537 . -4) (undo-tree-id538 . -4) (undo-tree-id539 . -4) (undo-tree-id540 . -4) (undo-tree-id541 . -4) (undo-tree-id542 . -4) (undo-tree-id543 . -4) (undo-tree-id544 . -4) (undo-tree-id545 . -4) (3632 . 3634) 3636) nil (25822 32850 979146 359000) 0 nil])
([nil nil ((#("            " 0 4 (fontified nil) 4 10 (fontified nil) 10 11 (fontified nil) 11 12 (fontified nil)) . -3676) (undo-tree-id512 . -8) (undo-tree-id513 . -4) (undo-tree-id514 . -4) (undo-tree-id515 . -4) (undo-tree-id516 . -4) (undo-tree-id517 . -4) (undo-tree-id518 . -4) (undo-tree-id519 . -4) (undo-tree-id520 . -4) (undo-tree-id521 . -8) (undo-tree-id522 . -8) (undo-tree-id523 . -8) (undo-tree-id524 . -8) (undo-tree-id525 . -8) (undo-tree-id526 . -8) (undo-tree-id527 . -8) (undo-tree-id528 . -8) (3674 . 3676) 3682) nil (25822 32850 979136 320000) 0 nil])
([nil nil ((#("            " 0 4 (fontified nil) 4 11 (fontified nil) 11 12 (rear-nonsticky t fontified nil)) . -3697) (undo-tree-id485 . -4) (undo-tree-id486 . -8) (undo-tree-id487 . -4) (undo-tree-id488 . -4) (undo-tree-id489 . -4) (undo-tree-id490 . -4) (undo-tree-id491 . -4) (undo-tree-id492 . -4) (undo-tree-id493 . -4) (undo-tree-id494 . -4) (undo-tree-id495 . -4) (undo-tree-id496 . -4) (undo-tree-id497 . -4) (undo-tree-id498 . -4) (undo-tree-id499 . -4) (undo-tree-id500 . -4) (undo-tree-id501 . -4) (undo-tree-id502 . -4) (undo-tree-id503 . -4) (undo-tree-id504 . -8) (undo-tree-id505 . -8) (undo-tree-id506 . -8) (undo-tree-id507 . -8) (undo-tree-id508 . -8) (undo-tree-id509 . -8) (undo-tree-id510 . -8) (undo-tree-id511 . -8) (3695 . 3697) 3703) nil (25822 32850 979126 311000) 0 nil])
([nil nil ((#("                wall_width,
                wall_height,
                (room_size + wall_width) * grid.width as f32 + wall_width,
" 0 111 (fontified t) 111 113 (fontified t face font-lock-keyword-face) 113 114 (fontified t) 114 117 (fontified t face font-lock-type-face) 117 132 (fontified t)) . 3368) (undo-tree-id456 . -72) (undo-tree-id457 . -131) (undo-tree-id458 . -15) (undo-tree-id459 . -72) (undo-tree-id460 . -72) (undo-tree-id461 . -28) (undo-tree-id462 . -28) (undo-tree-id463 . -57) (undo-tree-id464 . -57) (undo-tree-id465 . -132) (undo-tree-id466 . -132) (undo-tree-id467 . -65) (undo-tree-id468 . -65) (undo-tree-id469 . -36) (undo-tree-id470 . -36) (undo-tree-id471 . -8) (undo-tree-id472 . -8) (undo-tree-id473 . -132) (undo-tree-id474 . -15) (undo-tree-id475 . -72) (undo-tree-id476 . -15) (undo-tree-id477 . -15) (undo-tree-id478 . -43) (undo-tree-id479 . -43) (undo-tree-id480 . -57) (undo-tree-id481 . -72) (undo-tree-id482 . -72) (undo-tree-id483 . -72) (undo-tree-id484 . -132) 3440) nil (25822 32850 979110 151000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3409 . 3410) (nil fontified nil 3367 . 3410) (3367 . 3410) 3366) nil (25822 32850 978934 301000) 0 nil])
([nil nil ((3367 . 3384) (3379 . 3388) (3380 . 3387) (3397 . 3403) (3398 . 3408) (3410 . 3411) (3543 . 3559) (#("		" 0 2 (fontified t)) . 3543) (undo-tree-id389 . -2) (undo-tree-id390 . -2) (undo-tree-id391 . -2) (undo-tree-id392 . -2) (undo-tree-id393 . -2) (undo-tree-id394 . -2) (undo-tree-id395 . -2) (undo-tree-id396 . -2) (undo-tree-id397 . -2) (undo-tree-id398 . -2) (undo-tree-id399 . -2) (undo-tree-id400 . -2) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (3585 . 3601) (#("		" 0 2 (fontified t)) . 3585) (undo-tree-id407 . -2) (undo-tree-id408 . -2) (undo-tree-id409 . -2) (undo-tree-id410 . -2) (undo-tree-id411 . -2) (undo-tree-id412 . -2) (undo-tree-id413 . -2) (undo-tree-id414 . -2) (undo-tree-id415 . -2) (undo-tree-id416 . -2) (undo-tree-id417 . -2) (undo-tree-id418 . -2) (undo-tree-id419 . -2) (undo-tree-id420 . -2) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (3606 . 3622) (#("		" 0 2 (fontified t)) . 3606) (undo-tree-id429 . -2) (undo-tree-id430 . -2) (undo-tree-id431 . -2) (undo-tree-id432 . -2) (undo-tree-id433 . -2) (undo-tree-id434 . -2) (undo-tree-id435 . -2) (undo-tree-id436 . -2) (undo-tree-id437 . -2) (undo-tree-id438 . -2) (undo-tree-id439 . -2) (undo-tree-id440 . -2) (undo-tree-id441 . -2) (undo-tree-id442 . -2) (undo-tree-id443 . -2) (undo-tree-id444 . -2) (undo-tree-id445 . -2) (undo-tree-id446 . -2) (undo-tree-id447 . -2) (undo-tree-id448 . -2) (undo-tree-id449 . -2) (undo-tree-id450 . -2) (undo-tree-id451 . -2) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) 3409) nil (25822 32906 469884 722000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3272 . 3273) (#("
" 0 1 (fontified nil)) . -3456) (3268 . 3457) 3240 (t 25822 32850 987197 267000)) nil (25822 32922 584717 704000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . 3147) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (t 25822 32850 987197 267000)) ((3147 . 3148)) (25822 32905 883556 233000) 0 nil])
([nil nil ((apply -6 3081 3368 undo--wrap-and-run-primitive-undo 3081 3368 ((3181 . 3184) (3085 . 3088) 3269))) nil (25822 32922 584716 91000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . 3147) (undo-tree-id604 . -1) (undo-tree-id605 . -1)) ((3147 . 3148)) (25822 32905 506764 344000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . 3342) (undo-tree-id630 . -1) (undo-tree-id631 . -1)) nil (25822 32922 584715 119000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3147) (undo-tree-id602 . -1) (undo-tree-id603 . -1)) ((3147 . 3148)) (25822 32905 382817 306000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3342) (undo-tree-id628 . -1) (undo-tree-id629 . -1)) nil (25822 32922 584712 534000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 3147) (undo-tree-id600 . -1) (undo-tree-id601 . -1)) ((3147 . 3148)) (25822 32905 212719 404000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . 3342) (undo-tree-id626 . -1) (undo-tree-id627 . -1)) nil (25822 32922 584710 390000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 3147) (undo-tree-id598 . -1) (undo-tree-id599 . -1)) ((3147 . 3148)) (25822 32904 832696 334000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 3342) (undo-tree-id624 . -1) (undo-tree-id625 . -1)) nil (25822 32922 584708 897000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 3147) (undo-tree-id596 . -1) (undo-tree-id597 . -1)) ((3147 . 3148)) (25822 32904 832609 211000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 3342) (undo-tree-id622 . -1) (undo-tree-id623 . -1)) nil (25822 32922 584707 184000) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . 3342) (undo-tree-id620 . -1) (undo-tree-id621 . -1)) nil (25822 32922 584705 341000) 0 nil])
([nil nil ((#("/ 2.0 " 0 6 (fontified t)) . 3431) (undo-tree-id618 . -5) (undo-tree-id619 . -6)) nil (25822 32922 584703 227000) 0 nil])
([nil nil ((#(" / 2.0" 0 6 (fontified t)) . 3354) (undo-tree-id616 . -5) (undo-tree-id617 . -6)) nil (25822 32922 584701 153000) 0 nil])
([nil nil ((#(" / 2.0" 0 6 (fontified t)) . 3437) (undo-tree-id614 . -5) (undo-tree-id615 . -6)) nil (25822 32922 584698 939000) 0 nil])
([nil nil ((#(" / 2.0" 0 6 (fontified t)) . 3593) (undo-tree-id608 . -5) (undo-tree-id609 . -6) (undo-tree-id610 . -6) (undo-tree-id611 . -6) (undo-tree-id612 . -6) (undo-tree-id613 . -6)) nil (25822 32922 584694 80000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -4023) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (#("s" 0 1 (fontified t)) . -4024) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (#("s" 0 1 (fontified t)) . -4025) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (#("s" 0 1 (fontified t)) . -4026) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (#("s" 0 1 (fontified t)) . -4027) (undo-tree-id647 . -1) (undo-tree-id648 . -1) 4028 (4023 . 4028) (4017 . 4023) (t 25822 32922 587198 756000)) nil (25822 32992 898997 319000) 0 nil])
([nil nil ((#("s" 0 1 (fontified nil)) . -4061) (undo-tree-id632 . -1) (#("s" 0 1 (fontified nil)) . -4062) (undo-tree-id633 . -1) (#("s" 0 1 (fontified nil)) . -4063) (undo-tree-id634 . -1) (#("s" 0 1 (fontified nil)) . -4064) (undo-tree-id635 . -1) (#("s" 0 1 (fontified nil)) . -4065) (undo-tree-id636 . -1) 4066 (4055 . 4066)) nil (25822 32992 898984 374000) 0 nil])
([nil nil ((#("    // commands.spawn((
    //     Collider::cuboid(floor_width, wall_width / 2.0, floor_height),
    //     TransformBundle::from(Transform::from_xyz(
    //         (grid.width as f32 + wall_width) / 2.0,
    //         -wall_width / 2.0,
    //         (grid.height as f32 + wall_width) / 2.0,
    //     )),
    // ));
" 0 3 (fontified t) 3 4 (rear-nonsticky t fontified t) 4 7 (fontified t face font-lock-comment-delimiter-face) 7 24 (fontified t face font-lock-comment-face) 24 28 (fontified t) 28 31 (fontified t face font-lock-comment-delimiter-face) 31 35 (fontified t face font-lock-comment-delimiter-face) 35 43 (fontified t face font-lock-comment-face) 43 52 (fontified t face font-lock-comment-face) 52 63 (fontified t face font-lock-comment-face) 63 83 (fontified t face font-lock-comment-face) 83 96 (fontified t face font-lock-comment-face) 96 98 (fontified t face font-lock-comment-face) 98 102 (fontified t) 102 105 (fontified t face font-lock-comment-delimiter-face) 105 109 (fontified t face font-lock-comment-delimiter-face) 109 124 (fontified t face font-lock-comment-face) 124 131 (fontified t face font-lock-comment-face) 131 140 (fontified t face font-lock-comment-face) 140 151 (fontified t face font-lock-comment-face) 151 152 (fontified t face font-lock-comment-face) 152 156 (fontified t) 156 159 (fontified t face font-lock-comment-delimiter-face) 159 167 (fontified t face font-lock-comment-delimiter-face) 167 168 (fontified t face font-lock-comment-face) 168 179 (fontified t face font-lock-comment-face) 179 181 (fontified t face font-lock-comment-face) 181 182 (fontified t face font-lock-comment-face) 182 185 (fontified t face font-lock-comment-face) 185 186 (fontified t face font-lock-comment-face) 186 197 (fontified t face font-lock-comment-face) 197 198 (rear-nonsticky t fontified t face font-lock-comment-face) 198 205 (fontified t face font-lock-comment-face) 205 206 (fontified t face font-lock-comment-face) 206 207 (fontified t face font-lock-comment-face) 207 211 (fontified t) 211 214 (fontified t face font-lock-comment-delimiter-face) 214 220 (fontified t face font-lock-comment-delimiter-face) 220 221 (fontified t face font-lock-comment-delimiter-face) 221 222 (fontified t face font-lock-comment-delimiter-face) 222 223 (fontified t face font-lock-comment-face) 223 234 (fontified t face font-lock-comment-face) 234 235 (fontified t face font-lock-comment-face) 235 239 (fontified t face font-lock-comment-face) 239 240 (fontified t face font-lock-comment-face) 240 241 (fontified t face font-lock-comment-face) 241 245 (fontified t) 245 248 (fontified t face font-lock-comment-delimiter-face) 248 255 (fontified t face font-lock-comment-delimiter-face) 255 256 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face) 256 257 (fontified t face font-lock-comment-face) 257 269 (fontified t face font-lock-comment-face) 269 271 (fontified t face font-lock-comment-face) 271 272 (fontified t face font-lock-comment-face) 272 275 (fontified t face font-lock-comment-face) 275 276 (fontified t face font-lock-comment-face) 276 287 (fontified t face font-lock-comment-face) 287 288 (rear-nonsticky t fontified t face font-lock-comment-face) 288 295 (fontified t face font-lock-comment-face) 295 296 (fontified t face font-lock-comment-face) 296 297 (fontified t face font-lock-comment-face) 297 301 (fontified t) 301 304 (fontified t face font-lock-comment-delimiter-face) 304 308 (fontified t face font-lock-comment-delimiter-face) 308 309 (fontified t face font-lock-comment-face) 309 312 (fontified t face font-lock-comment-face) 312 316 (fontified t) 316 319 (fontified t face font-lock-comment-delimiter-face) 319 322 (fontified t face font-lock-comment-face) 322 323 (fontified t face font-lock-comment-face)) . 4072) (undo-tree-id671 . -322) (undo-tree-id672 . -322) (undo-tree-id673 . -22) (undo-tree-id674 . -322) (undo-tree-id675 . -205) (undo-tree-id676 . -205) (undo-tree-id677 . -322) (undo-tree-id678 . -22) (undo-tree-id679 . -22) (undo-tree-id680 . -323) (undo-tree-id681 . -22) (undo-tree-id682 . -322) (undo-tree-id683 . -22) (undo-tree-id684 . -22) (undo-tree-id685 . -46) (undo-tree-id686 . -46) (undo-tree-id687 . -120) (undo-tree-id688 . -120) (undo-tree-id689 . -174) (undo-tree-id690 . -174) (undo-tree-id691 . -229) (undo-tree-id692 . -229) (undo-tree-id693 . -263) (undo-tree-id694 . -263) (undo-tree-id695 . -311) (undo-tree-id696 . -311) (undo-tree-id697 . -312) (undo-tree-id698 . -322) (undo-tree-id699 . -322) (undo-tree-id700 . -322) (undo-tree-id701 . -323) 4394 (t 25822 32992 900533 410000)) nil (25822 33025 228806 821000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4072) (undo-tree-id667 . -4) (undo-tree-id668 . -4) (undo-tree-id669 . -4) (undo-tree-id670 . -4) 4076 (4071 . 4076) 4070) nil (25822 33025 228788 216000) 0 nil])
([nil nil ((#("    // let floor_width = (room_size + wall_width) * grid.width as f32 / 2.0 + wall_width / 2.0;
    // let floor_height = (room_size + wall_width) * grid.height as f32 / 2.0 + wall_width / 2.0;
" 0 4 (fontified t) 4 7 (fontified t face font-lock-comment-delimiter-face) 7 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 22 (fontified t face font-lock-comment-face) 22 26 (fontified t face font-lock-comment-face) 26 63 (fontified t face font-lock-comment-face) 63 65 (fontified t face font-lock-comment-face) 65 66 (fontified t face font-lock-comment-face) 66 69 (fontified t face font-lock-comment-face) 69 70 (fontified t face font-lock-comment-face) 70 71 (fontified t face font-lock-comment-face) 71 72 (fontified t face font-lock-comment-face) 72 73 (fontified t face font-lock-comment-face) 73 74 (fontified t face font-lock-comment-face) 74 75 (fontified t face font-lock-comment-face) 75 95 (fontified t face font-lock-comment-face) 95 96 (fontified t face font-lock-comment-face) 96 99 (fontified t) 99 100 (rear-nonsticky t fontified t) 100 103 (fontified t face font-lock-comment-delimiter-face) 103 106 (fontified t face font-lock-comment-face) 106 107 (fontified t face font-lock-comment-face) 107 119 (fontified t face font-lock-comment-face) 119 123 (fontified t face font-lock-comment-face) 123 161 (fontified t face font-lock-comment-face) 161 163 (fontified t face font-lock-comment-face) 163 164 (fontified t face font-lock-comment-face) 164 167 (fontified t face font-lock-comment-face) 167 193 (fontified t face font-lock-comment-face) 193 194 (fontified t face font-lock-comment-face)) . 3081) (undo-tree-id652 . -96) (undo-tree-id653 . -193) (undo-tree-id654 . -96) (undo-tree-id655 . -96) (undo-tree-id656 . -194) (undo-tree-id657 . -194) (undo-tree-id658 . -96) (undo-tree-id659 . -96) (undo-tree-id660 . -194) (undo-tree-id661 . -96) (undo-tree-id662 . -96) (undo-tree-id663 . -96) (undo-tree-id664 . -96) (undo-tree-id665 . -96) (undo-tree-id666 . -194) 3177) nil (25822 33025 228883 64000) 0 nil])
([nil nil ((#("floor_width" 0 11 (fontified t)) . 3810) (3821 . 3831) (#("floor_width" 0 11 (fontified t)) . 3359) (3370 . 3380) (nil fontified t 3093 . 3099) (nil face font-lock-variable-name-face 3093 . 3099) (nil fontified t 3089 . 3093) (nil face font-lock-variable-name-face 3089 . 3093) (#("floor_width" 0 5 (fontified t face font-lock-variable-name-face) 5 11 (fontified t face font-lock-variable-name-face)) . 3089) (3100 . 3110)) nil (25822 33311 566163 945000) 0 nil] [nil nil ((#("floor" 0 5 (fontified t face font-lock-variable-name-face)) . 3089) (undo-tree-id649 . -4) (undo-tree-id650 . -5) (undo-tree-id651 . -5)) ((3089 . 3094)) (25822 33025 228771 715000) 0 nil])
([nil nil ((#("        " 0 7 (fontified nil) 7 8 (rear-nonsticky t fontified nil)) . 3787) (undo-tree-id964 . -8) (undo-tree-id965 . -8) (3783 . 3787) (#("floor_height" 0 12 (fontified nil)) . 3844) (3856 . 3867) (nil rear-nonsticky t 3424 . 3425) (#("floor_height" 0 11 (fontified nil) 11 12 (rear-nonsticky t fontified nil)) . 3414) (3426 . 3437) (#("floor_height" 0 12 (fontified nil face font-lock-variable-name-face)) . 3169) (undo-tree-id966 . -12) (undo-tree-id967 . -12) (undo-tree-id968 . -12) (undo-tree-id969 . -12) (undo-tree-id970 . -12) (undo-tree-id971 . -12) (undo-tree-id972 . -12) (undo-tree-id973 . -12) (3181 . 3192)) ((#("maze_height" 0 11 (fontified nil face font-lock-variable-name-face)) . 3181) (3169 . 3181) (#("maze_height" 0 10 (fontified nil) 10 11 (rear-nonsticky t fontified nil)) . 3426) (3414 . 3426) (nil rear-nonsticky nil 3424 . 3425) (#("maze_height" 0 11 (fontified nil)) . 3856) (3844 . 3856) (#("    " 0 4 (fontified nil)) . 3783) (undo-tree-id961 . -4) (undo-tree-id962 . -4) (undo-tree-id963 . -4) (3787 . 3795)) (25822 33313 17581 843000) 0 nil])
nil
([nil nil ((3787 . 3791)) nil (25822 33315 954680 181000) 0 nil] [nil nil ((4059 . 4063) (#("i" 0 1 (fontified t)) . -4059) (undo-tree-id800 . -1) (4053 . 4060) (#("(room_size + wall_width) * grid.width as f32 + wall_width" 0 35 (fontified t) 35 38 (fontified t) 38 40 (fontified t face font-lock-keyword-face) 40 41 (fontified t) 41 44 (fontified t face font-lock-type-face) 44 57 (fontified t)) . 4053) (undo-tree-id802 . -56) (undo-tree-id803 . -24) (undo-tree-id804 . -24) (undo-tree-id805 . -24) (undo-tree-id806 . -24) (undo-tree-id807 . 57) (undo-tree-id808 . -1) (undo-tree-id809 . 34) (undo-tree-id810 . -24) (undo-tree-id812 . -57)) ((4053 . 4110) (#("maze_wi" 0 6 (fontified nil) 6 7 (fontified nil)) . 4053) (4059 . 4060) ("idth" . 4059)) (25822 33304 682992 457000) 0 nil] [nil nil ((4059 . 4063) (#("i" 0 1 (fontified t)) . -4059) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (4053 . 4060) (#("(room_size + wall_width) * grid.width as f32 + wall_width" 0 35 (fontified t) 35 38 (fontified t) 38 40 (fontified t face font-lock-keyword-face) 40 41 (fontified t) 41 44 (fontified t face font-lock-type-face) 44 57 (fontified t)) . 4053) (undo-tree-id745 . -56) (undo-tree-id746 . -24) (undo-tree-id747 . -24) (undo-tree-id748 . -24) (undo-tree-id749 . -24) (undo-tree-id750 . 57) (undo-tree-id751 . -1) (undo-tree-id752 . 34) (undo-tree-id753 . -24) (undo-tree-id754 . -57) (undo-tree-id755 . -57)) ((4053 . 4110) (#("maze_wi" 0 6 (fontified nil) 6 7 (fontified nil)) . 4053) (undo-tree-id766 . -7) (4059 . 4060) (#("idth" 0 4 (fontified t)) . 4059)) (25822 33119 763252 664000) 0 nil] [nil nil ((#("(room_size + wall_width) * grid.width as f32 + wall_width" 0 35 (fontified t) 35 38 (fontified t) 38 40 (fontified t face font-lock-keyword-face) 40 41 (fontified t) 41 44 (fontified t face font-lock-type-face) 44 57 (fontified t)) . 4053) (undo-tree-id702 . -56) (undo-tree-id703 . -24) (undo-tree-id704 . -24) (undo-tree-id705 . -24) (undo-tree-id706 . -24) (undo-tree-id707 . 57) (undo-tree-id708 . -1) (undo-tree-id709 . 34) (undo-tree-id710 . -24) (undo-tree-id711 . -57)) ((4053 . 4110)) (25822 33095 665770 542000) 0 nil])
([nil nil ((1574 . 1575) (#("2" 0 1 (fontified t)) . 1574) (undo-tree-id975 . -1) (t 25822 33315 960540 369000)) nil (25822 33675 406688 538000) 0 nil])
([nil nil ((4535 . 4539) (#("i" 0 1 (fontified t)) . -4535) (undo-tree-id787 . -1) (4533 . 4536) (4529 . 4533) (#("((room_size + wall_width) * grid.width as f32 + wall_width)" 0 39 (fontified t) 39 41 (fontified t face font-lock-keyword-face) 41 42 (fontified t) 42 45 (fontified t face font-lock-type-face) 45 59 (fontified t)) . 4529) (undo-tree-id789 . -58) (undo-tree-id791 . -13) (undo-tree-id793 . -17) (undo-tree-id794 . 59) (undo-tree-id795 . -1) (undo-tree-id796 . 1) (undo-tree-id797 . -59) (undo-tree-id799 . -59)) ((4529 . 4588) (#("maze" 0 4 (fontified nil)) . 4529) (#("_wi" 0 2 (fontified nil) 2 3 (fontified nil)) . 4533) (4535 . 4536) (#("idth" 0 4 (fontified t)) . 4535)) (25822 33304 98116 963000) 0 nil])
([nil nil ((4283 . 4293) (#("(room_size + wall_width) * grid.width as f32 / 2.0 - wall_width / 2.0" 0 38 (fontified t) 38 40 (fontified t face font-lock-keyword-face) 40 41 (fontified t) 41 44 (fontified t face font-lock-type-face) 44 69 (fontified t)) . 4283) (undo-tree-id734 . -68) (undo-tree-id735 . -9) (undo-tree-id736 . -9) (undo-tree-id737 . 69) (undo-tree-id738 . -1) (undo-tree-id739 . 46) (undo-tree-id740 . -24) (undo-tree-id741 . -69) (undo-tree-id742 . -69)) ((4283 . 4352) (#("maze_width" 0 10 (fontified t)) . 4283) (undo-tree-id760 . -10) (undo-tree-id761 . -10) (undo-tree-id762 . -10) (undo-tree-id763 . -10) (undo-tree-id764 . -10) (undo-tree-id765 . -10)) (25822 33119 422602 120000) 0 nil])
nil
([nil nil ((apply -54 3244 3927 undo--wrap-and-run-primitive-undo 3244 3927 ((3919 . 3922) (3835 . 3838) (3806 . 3809) (3792 . 3795) (3765 . 3768) (3747 . 3750) (3687 . 3690) (3649 . 3652) (3590 . 3593) (3543 . 3546) (3469 . 3472) (3449 . 3452) (3417 . 3420) (3386 . 3389) (3355 . 3358) (3295 . 3298) (3272 . 3275) (3248 . 3251) 3872)) (t 25822 33677 730547 658000)) nil (25822 33702 326279 71000) 0 nil] [nil nil ((1577 . 1578) (#("2" 0 1 (fontified t)) . 1577)) ((1577 . 1578) (#("8" 0 1 (fontified t)) . 1577)) (25822 33672 272248 403000) 0 nil])
([nil nil ((3787 . 3791) (#("
            " 0 13 (fontified t)) . 4455) (#("
        " 0 9 (fontified t)) . 4485) (#("   " 0 3 (fontified t)) . 4495) (#("
         " 0 1 (fontified t) 1 10 (fontified t)) . 4516) (#("  " 0 2 (fontified t)) . 4527) (undo-tree-id775 . -2) (undo-tree-id776 . -2) (undo-tree-id778 . -2) (undo-tree-id780 . -2) (undo-tree-id782 . -2) (undo-tree-id784 . -2) (undo-tree-id786 . -2) (#(",
        " 0 2 (fontified t) 2 10 (fontified t)) . 4545) 4566) ((4545 . 4555) (4527 . 4529) (4516 . 4526) (4495 . 4498) (4485 . 4494) (4455 . 4468) ("    " . 3787)) (25822 33303 465841 71000) 0 nil])
([nil nil ((4294 . 4299) (#("l" 0 1 (fontified t)) . -4294) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (#(" " 0 1 (fontified t)) . -4295) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) 4296 (4293 . 4296)) ((#(" l " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 4293) (undo-tree-id756 . -2) (undo-tree-id757 . -2) (undo-tree-id758 . -3) (undo-tree-id759 . -3) (4294 . 4296) (#("/ 2.0" 0 5 (fontified t)) . 4294)) (25822 33119 422449 403000) 0 nil])
([nil nil ((apply -66 3940 4799 undo--wrap-and-run-primitive-undo 3940 4799 ((4779 . 4782) (4765 . 4768) (4683 . 4686) (4649 . 4652) (4616 . 4619) (4587 . 4590) (4558 . 4561) (4544 . 4547) (4517 . 4520) (4499 . 4502) (4409 . 4412) (4371 . 4374) (4333 . 4336) (4286 . 4289) (4212 . 4215) (4192 . 4195) (4114 . 4117) (4082 . 4085) (4051 . 4054) (3991 . 3994) (3968 . 3971) (3944 . 3947) 4721)) (t 25822 33702 330548 125000)) nil (25822 33739 871326 812000) 0 nil])
([nil nil ((#("        }
" 0 10 (fontified t)) . 7280) (undo-tree-id982 . -9) (undo-tree-id984 . -10) (undo-tree-id986 . -10) (undo-tree-id988 . -10) (undo-tree-id990 . -10)) ((7280 . 7290)) (25822 33672 125256 739000) 0 nil] [nil nil ((apply 48 5534 6219 undo--wrap-and-run-primitive-undo 5534 6219 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6217) (#<marker at 6641 in maze2.rs> . -3) (#<marker at 6641 in maze2.rs> . -3) (#<marker at 6641 in maze2.rs> . -3) (#<marker at 6641 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6201) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6173) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6154) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6075) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6050) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5971) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5923) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5903) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5850) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5825) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5772) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5714) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5635) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5596) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5542) 6267)) (t 25822 33330 533873 994000)) ((apply -48 5534 6267 undo--wrap-and-run-primitive-undo 5534 6267 ((5542 . 5545) (5596 . 5599) (5635 . 5638) (5714 . 5717) (5772 . 5775) (5825 . 5828) (5850 . 5853) (5903 . 5906) (5923 . 5926) (5971 . 5974) (6050 . 6053) (6075 . 6078) (6154 . 6157) (6173 . 6176) (6201 . 6204) (6217 . 6220) 5534)) (t 25822 33418 820542 357000)) (25822 33418 815469 527000) 0 nil])
([nil nil ((4657 . 4661) (#("i" 0 1 (fontified nil)) . 4657) (4650 . 4658) (#("(room_size + wall_width) * grid.height as f32 + wall_width" 0 24 (fontified t) 24 39 (fontified t) 39 41 (fontified t face font-lock-keyword-face) 41 42 (fontified t) 42 45 (fontified t face font-lock-type-face) 45 58 (fontified t)) . 4650) (undo-tree-id913 . -4) (undo-tree-id914 . 58) (undo-tree-id915 . -1) (undo-tree-id916 . 35) (undo-tree-id917 . -24)) ((4650 . 4708) (#("maze_hei" 0 7 (fontified nil) 7 8 (fontified nil)) . 4650) (4657 . 4658) (#("ight" 0 4 (fontified t)) . 4657)) (25822 33303 155949 936000) 0 nil])
nil
([nil nil ((apply -66 4799 5704 undo--wrap-and-run-primitive-undo 4799 5704 ((5641 . 5644) (5627 . 5630) (5594 . 5597) (5560 . 5563) (5477 . 5480) (5448 . 5451) (5419 . 5422) (5405 . 5408) (5378 . 5381) (5360 . 5363) (5322 . 5325) (5284 . 5287) (5193 . 5196) (5146 . 5149) (5072 . 5075) (5052 . 5055) (5021 . 5024) (4989 . 4992) (4910 . 4913) (4850 . 4853) (4827 . 4830) (4803 . 4806) 5583))) nil (25822 33739 871322 845000) 0 nil])
([nil nil ((#("        for (col_i, cell) in row.iter().enumerate() {
" 0 8 (fontified t) 8 11 (fontified t face font-lock-keyword-face) 11 26 (fontified t) 26 28 (fontified t face font-lock-keyword-face) 28 54 (fontified t)) . 7296) (undo-tree-id976 . -53) (undo-tree-id978 . -54) (undo-tree-id980 . -54)) ((7296 . 7350)) (25822 33671 978220 654000) 0 nil])
nil
([nil nil ((5131 . 5135) (#("i" 0 1 (fontified nil)) . 5131) (5124 . 5132) (#("((room_size + wall_width) * grid.height as f32 + wall_width)" 0 7 (fontified t) 7 39 (fontified t) 39 40 (fontified t) 40 42 (fontified t face font-lock-keyword-face) 42 43 (fontified t) 43 46 (fontified t face font-lock-type-face) 46 51 (fontified t) 51 59 (fontified t) 59 60 (fontified t)) . 5124) (undo-tree-id919 . -59) (undo-tree-id920 . -14) (undo-tree-id921 . -14)) ((5124 . 5184) (#("maze_hei" 0 7 (fontified nil) 7 8 (fontified nil)) . 5124) (5131 . 5132) (#("ight" 0 4 (fontified nil)) . 5131)) (25822 33302 939878 884000) 0 nil])
([nil nil ((#("        for (col_i, cell) in row.iter().enumerate() {
" 0 8 (fontified t) 8 11 (fontified t face font-lock-keyword-face) 11 26 (fontified t) 26 28 (fontified t face font-lock-keyword-face) 28 54 (fontified t)) . 7492) (undo-tree-id1077 . -53) (undo-tree-id1078 . -54) (undo-tree-id1079 . -54) (undo-tree-id1080 . -54) (undo-tree-id1081 . -54) (undo-tree-id1082 . -54) (t 25822 33739 873882 124000)) nil (25822 33778 375440 454000) 0 nil])
([nil nil ((7288 . 7292) 7296) ((#("    " 0 4 (fontified t)) . 7288)) (25822 33671 831281 517000) 0 nil])
([nil nil ((1574 . 1575) (#("2" 0 1 (fontified t)) . 1574) (undo-tree-id952 . -1)) ((1574 . 1575) (#("4" 0 1 (fontified t)) . 1574)) (25822 33302 631893 919000) 0 nil] [nil nil ((#("
            " 0 1 (fontified t) 1 13 (fontified t)) . 5111) (undo-tree-id813 . -13) (undo-tree-id814 . -13) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -13) (undo-tree-id820 . -13) (undo-tree-id821 . -13) (undo-tree-id822 . -13) (undo-tree-id823 . -13) (undo-tree-id824 . -13) (undo-tree-id825 . -13) (undo-tree-id826 . -13) (undo-tree-id827 . -13) (undo-tree-id828 . -13) (undo-tree-id829 . -13) (undo-tree-id830 . -1) (#("
          " 0 1 (fontified t) 1 11 (fontified t)) . 5142) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (#(" " 0 1 (fontified t)) . 5154) (#("
          " 0 1 (fontified t) 1 11 (fontified t)) . 5173) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (#(" " 0 1 (fontified t)) . 5185) (#(",
        " 0 10 (fontified t)) . 5202) (undo-tree-id839 . -2) (undo-tree-id840 . -2) (undo-tree-id841 . -2) (undo-tree-id842 . -2) 5134) ((5202 . 5212) (5185 . 5186) (5173 . 5184) (5154 . 5155) (5142 . 5153) (5111 . 5124) (t 25822 33202 87204 790000)) (25822 33202 86000 184000) 0 nil])
([nil nil ((#("        }
" 0 10 (fontified t)) . 7466) (undo-tree-id1069 . -9) (undo-tree-id1070 . -10) (undo-tree-id1071 . -10) (undo-tree-id1072 . -10) (undo-tree-id1073 . -10) (undo-tree-id1074 . -10) (undo-tree-id1075 . -10) (undo-tree-id1076 . -10)) nil (25822 33778 375436 537000) 0 nil])
([nil nil ((1574 . 1575) (#("4" 0 1 (fontified t)) . 1574) (t 25822 33498 480544 155000)) ((1574 . 1575) (#("2" 0 1 (fontified t)) . 1574)) (25822 33671 684283 774000) 0 nil])
([nil nil ((1577 . 1578) (#("2" 0 1 (fontified t)) . 1577) (undo-tree-id951 . -1)) ((1577 . 1578) (#("8" 0 1 (fontified t)) . 1577)) (25822 33302 300689 25000) 0 nil])
nil
([nil nil ((#("        // North
" 0 8 (fontified t) 8 11 (fontified t face font-lock-comment-delimiter-face) 11 17 (fontified t face font-lock-comment-face)) . 6454) (undo-tree-id1063 . -16) (undo-tree-id1064 . -17) (undo-tree-id1065 . -17) (undo-tree-id1066 . -17) (undo-tree-id1067 . -17) (undo-tree-id1068 . -17)) nil (25822 33825 698141 995000) 0 nil])
([nil nil ((1577 . 1578) (#("8" 0 1 (fontified t)) . 1577)) ((1577 . 1578) (#("4" 0 1 (fontified t)) . 1577)) (25822 33671 561262 99000) 0 nil])
([nil nil (("
            " . 5111) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -13) (undo-tree-id927 . -13) (undo-tree-id928 . -13) (undo-tree-id929 . -13) (undo-tree-id930 . -13) (undo-tree-id931 . -13) (undo-tree-id932 . -13) (undo-tree-id933 . -13) (undo-tree-id934 . -13) (undo-tree-id935 . -13) (undo-tree-id936 . -13) (undo-tree-id937 . -13) (undo-tree-id938 . -13) ("
          " . 5142) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (" " . 5154) ("
          " . 5173) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (" " . 5185) (",
        " . 5202) (undo-tree-id947 . -2) (undo-tree-id948 . -2) (undo-tree-id949 . -2) (undo-tree-id950 . -2) 1577) ((5202 . 5212) (5185 . 5186) (5173 . 5184) (5154 . 5155) (5142 . 5153) (5111 . 5124) (t 25822 33261 617206 102000)) (25822 33261 613489 235000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6515 . 6516) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . 6524) (6507 . 6525)) ((#("
        // North
" 0 1 (fontified t) 1 8 (fontified nil) 8 9 (rear-nonsticky nil fontified nil) 9 12 (fontified nil face font-lock-comment-delimiter-face) 12 17 (fontified nil face font-lock-comment-face) 17 18 (face font-lock-comment-face fontified nil)) . 6507) (undo-tree-id1128 . -17) (undo-tree-id1129 . -16) (undo-tree-id1130 . -16) (6524 . 6525) (nil rear-nonsticky t 6515 . 6516)) (25822 33826 572276 125000) 0 nil])
([nil nil ((6821 . 6824) (#("row" 0 3 (fontified t)) . 6821) (undo-tree-id1013 . -2) (undo-tree-id1014 . -3) (undo-tree-id1015 . -3) (t 25822 33520 50544 547000)) ((6821 . 6824) (#("col" 0 3 (fontified t)) . 6821)) (25822 33671 391279 853000) 0 nil])
nil
([nil nil ((6516 . 6520) (7466 . 7470) 6523) nil (25822 33880 106936 307000) 0 nil] [nil nil ((7007 . 7010) (#("row" 0 3 (fontified t)) . 7007) (undo-tree-id1060 . -2) (undo-tree-id1061 . -3) (undo-tree-id1062 . -3)) ((7007 . 7010) (#("col" 0 3 (fontified t)) . 7007) (undo-tree-id1124 . -2) (undo-tree-id1125 . -2) (undo-tree-id1126 . -2) (undo-tree-id1127 . -2)) (25822 33824 182745 788000) 0 nil])
([nil nil ((6968 . 6971) (#("col" 0 3 (fontified t)) . 6968) (undo-tree-id1008 . -2) (undo-tree-id1009 . -2) (undo-tree-id1010 . -2) (undo-tree-id1011 . -3) (undo-tree-id1012 . -3)) ((6968 . 6971) (#("row" 0 3 (fontified t)) . 6968)) (25822 33671 175244 847000) 0 nil])
([nil nil ((6555 . 6556) (#("0" 0 1 (fontified t)) . 6555) (undo-tree-id1132 . -1)) nil (25822 33888 379175 114000) 0 nil] [nil nil ((apply -60 7490 8501 undo--wrap-and-run-primitive-undo 7490 8501 ((8486 . 8489) (8463 . 8466) (8367 . 8370) (8326 . 8329) (8300 . 8303) (8261 . 8264) (8231 . 8234) (8128 . 8131) (8078 . 8081) (7986 . 7989) (7927 . 7930) (7841 . 7844) (7809 . 7812) (7766 . 7769) (7722 . 7725) (7679 . 7682) (7607 . 7610) (7572 . 7575) (7536 . 7539) (7502 . 7505) 8431)) (t 25822 33828 283883 891000)) ((apply 60 7490 8441 undo--wrap-and-run-primitive-undo 7490 8441 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 7502) (#<marker at 7695 in maze2.rs> . -3) (#<marker at 7695 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 7536) (#<marker at 7726 in maze2.rs> . -3) (#<marker at 7726 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 7572) (#<marker at 7759 in maze2.rs> . -3) (#<marker at 7759 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 7607) (#<marker at 7791 in maze2.rs> . -3) (#<marker at 7791 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 7679) (#<marker at 7860 in maze2.rs> . -3) (#<marker at 7860 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 7722) (#<marker at 7900 in maze2.rs> . -3) (#<marker at 7900 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 7766) (#<marker at 7941 in maze2.rs> . -3) (#<marker at 7941 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 7809) (#<marker at 7981 in maze2.rs> . -3) (#<marker at 7981 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 7841) (#<marker at 8010 in maze2.rs> . -3) (#<marker at 8010 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 7927) (#<marker at 8093 in maze2.rs> . -3) (#<marker at 8093 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 7986) (#<marker at 8149 in maze2.rs> . -3) (#<marker at 8149 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 8078) (#<marker at 8238 in maze2.rs> . -3) (#<marker at 8238 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 8128) (#<marker at 8285 in maze2.rs> . -3) (#<marker at 8285 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 8231) (#<marker at 8385 in maze2.rs> . -3) (#<marker at 8385 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 8261) (#<marker at 8412 in maze2.rs> . -3) (#<marker at 8412 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 8300) (#<marker at 8448 in maze2.rs> . -3) (#<marker at 8448 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 8326) (#<marker at 8471 in maze2.rs> . -3) (#<marker at 8471 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 8367) (#<marker at 8509 in maze2.rs> . -3) (#<marker at 8509 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 8463) (#<marker at 8602 in maze2.rs> . -3) (#<marker at 8602 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 8486) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) (#<marker at 8622 in maze2.rs> . -3) 7931)) (t 25822 33848 897217 639000)) (25822 33848 895405 103000) 0 nil])
([nil nil ((7964 . 7967) (#("row" 0 3 (fontified t)) . 7964) (undo-tree-id1055 . -2) (undo-tree-id1056 . -2) (undo-tree-id1057 . -2) (undo-tree-id1058 . -3) (undo-tree-id1059 . -3)) ((7964 . 7967) (#("col" 0 3 (fontified t)) . 7964)) (25822 33823 180893 115000) 0 nil])
([nil nil ((7918 . 7921) (#("col" 0 3 (fontified t)) . 7918) (undo-tree-id1003 . -2) (undo-tree-id1005 . -2) (undo-tree-id1007 . -3)) ((7918 . 7921) (#("row" 0 3 (fontified t)) . 7918)) (25822 33670 797408 933000) 0 nil])
([nil nil ((7516 . 7517) (#("1" 0 1 (fontified t)) . 7516) (undo-tree-id1131 . -1)) nil (25822 33888 379170 705000) 0 nil])
nil
([nil nil ((8100 . 8103) (#("col" 0 3 (fontified t)) . 8100) (undo-tree-id1048 . -2) (undo-tree-id1049 . -2) (undo-tree-id1050 . -2) (undo-tree-id1051 . -2) (undo-tree-id1052 . -2) (undo-tree-id1053 . -3) (undo-tree-id1054 . -3)) ((8100 . 8103) ("row" . 8100)) (25822 33822 480164 342000) 0 nil])
([nil nil ((7782 . 7785) (#("row" 0 3 (fontified t)) . 7782) (undo-tree-id994 . -2) (undo-tree-id996 . -2) (undo-tree-id998 . -2) (undo-tree-id1000 . -2) (undo-tree-id1002 . -3)) ((7782 . 7785) ("col" . 7782) (t 25822 33635 277213 611000)) (25822 33625 84657 143000) 0 nil])
([nil nil ((7972 . 7975) (#("row" 0 3 (fontified t)) . 7972) (undo-tree-id1154 . -2) (undo-tree-id1155 . -2) (undo-tree-id1156 . -2) (undo-tree-id1157 . -3) (undo-tree-id1158 . -3) (t 25822 33888 383885 112000)) nil (25822 33907 101032 255000) 0 nil])
([nil nil ((7154 . 7157) (#("col" 0 3 (fontified t)) . 7154) (undo-tree-id1039 . -2) (undo-tree-id1040 . -2) (undo-tree-id1041 . -2) (undo-tree-id1042 . -2) (undo-tree-id1043 . -2) (undo-tree-id1044 . -2) (undo-tree-id1045 . -2) (undo-tree-id1046 . -3) (undo-tree-id1047 . -3)) ((7154 . 7157) (#("row" 0 3 (fontified t)) . 7154) (undo-tree-id1083 . -2) (undo-tree-id1084 . -2) (undo-tree-id1085 . -2) (undo-tree-id1086 . -2) (undo-tree-id1087 . -2) (undo-tree-id1088 . -2) (undo-tree-id1089 . -2) (undo-tree-id1090 . -2) (undo-tree-id1091 . -2) (undo-tree-id1092 . -2) (undo-tree-id1093 . -2) (undo-tree-id1094 . -2) (undo-tree-id1095 . -2) (undo-tree-id1096 . -2) (undo-tree-id1097 . -2) (undo-tree-id1098 . -2) (undo-tree-id1099 . -2) (undo-tree-id1100 . -2) (undo-tree-id1101 . -2) (undo-tree-id1102 . -2) (undo-tree-id1103 . -2) (undo-tree-id1104 . -2) (undo-tree-id1105 . -2) (undo-tree-id1106 . -2) (undo-tree-id1107 . -2) (undo-tree-id1108 . -2) (undo-tree-id1109 . -2) (undo-tree-id1110 . -2) (undo-tree-id1111 . -2) (undo-tree-id1112 . -2) (undo-tree-id1113 . -2) (undo-tree-id1114 . -2) (undo-tree-id1115 . -2) (undo-tree-id1116 . -2) (undo-tree-id1117 . -2) (undo-tree-id1118 . -2) (undo-tree-id1119 . -2) (undo-tree-id1120 . -2) (undo-tree-id1121 . -2) (undo-tree-id1122 . -2) (undo-tree-id1123 . -2)) (25822 33822 287251 522000) 0 nil])
([nil nil ((#("                (room_size + wall_width) * grid.height as f32 / 2.0 - wall_width / 2.0,
" 0 24 (fontified t) 24 32 (fontified t) 32 55 (fontified t) 55 57 (fontified t face font-lock-keyword-face) 57 58 (fontified t) 58 61 (fontified t face font-lock-type-face) 61 68 (fontified t) 68 81 (fontified t) 81 88 (fontified t)) . 5042) (undo-tree-id1026 . -87) (undo-tree-id1027 . -30) (undo-tree-id1028 . -30) (undo-tree-id1029 . -30) (undo-tree-id1030 . -30) (undo-tree-id1031 . -30) (undo-tree-id1032 . -30) (undo-tree-id1033 . -30) (undo-tree-id1034 . -30) (undo-tree-id1035 . -88) 5072 (t 25822 33574 630545 642000)) ((5042 . 5130)) (25822 33624 590622 135000) 0 nil])
([nil nil ((8108 . 8111) (#("col" 0 3 (fontified t)) . 8108) (undo-tree-id1145 . -2) (undo-tree-id1146 . -2) (undo-tree-id1147 . -2) (undo-tree-id1148 . -2) (undo-tree-id1149 . -2) (undo-tree-id1150 . -2) (undo-tree-id1151 . -2) (undo-tree-id1152 . -3) (undo-tree-id1153 . -3)) nil (25822 33907 101028 117000) 0 nil])
([nil nil ((6516 . 6520) (7466 . 7470) 7156) ((#("    " 0 4 (fontified t)) . 7466) (#("    " 0 4 (fontified t)) . 6516) (t 25822 33778 380549 576000)) (25822 33778 375394 558000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5092 . 5093) (#("
" 0 1 (fontified nil)) . -5164) (5076 . 5165) 5072) ((#("
                (room_size + wall_width) * grid.height as f32 / 2.0 - wall_width / 2.0,
" 0 1 (fontified t) 1 16 (fontified nil) 16 17 (rear-nonsticky nil fontified nil) 17 25 (fontified nil) 25 33 (fontified nil) 33 56 (fontified nil) 56 58 (fontified nil face font-lock-keyword-face) 58 59 (fontified nil) 59 62 (fontified nil face font-lock-type-face) 62 69 (fontified nil) 69 82 (fontified nil) 82 88 (fontified nil) 88 89 (fontified nil)) . 5076) (5164 . 5165) (nil rear-nonsticky t 5092 . 5093)) (25822 33623 450634 524000) 0 nil])
([nil nil ((7011 . 7014) (#("row" 0 3 (fontified t)) . 7011) (undo-tree-id1140 . -2) (undo-tree-id1141 . -2) (undo-tree-id1142 . -2) (undo-tree-id1143 . -3) (undo-tree-id1144 . -3)) nil (25822 33907 101021 94000) 0 nil])
nil
([nil nil ((#("                -wall_width / 2.0,
" 0 7 (fontified t) 7 35 (fontified t)) . 5165) (undo-tree-id1016 . -34) (undo-tree-id1017 . -16) (undo-tree-id1018 . -30) (undo-tree-id1019 . -30) (undo-tree-id1020 . -16) (undo-tree-id1021 . -16) (undo-tree-id1022 . -16) (undo-tree-id1023 . -16) (undo-tree-id1024 . -16) (undo-tree-id1025 . -35) 5181) ((5165 . 5200)) (25822 33621 712018 356000) 0 nil])
([nil nil ((7158 . 7161) (#("col" 0 3 (fontified t)) . 7158) (undo-tree-id1133 . -2) (undo-tree-id1134 . -2) (undo-tree-id1135 . -2) (undo-tree-id1136 . -2) (undo-tree-id1137 . -2) (undo-tree-id1138 . -3) (undo-tree-id1139 . -3)) nil (25822 33907 101014 602000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5057 . 5058) (#("
" 0 1 (fontified nil)) . -5076) (5041 . 5077) 5011) ((#("
                -wall_width / 2.0,
" 0 1 (fontified t) 1 8 (fontified nil) 8 16 (fontified nil) 16 17 (fontified nil rear-nonsticky nil) 17 35 (fontified nil) 35 36 (fontified nil)) . 5041) (undo-tree-id1036 . -35) (undo-tree-id1037 . -1) (undo-tree-id1038 . -35) (5076 . 5077) (nil rear-nonsticky t 5057 . 5058) (t 25822 33615 237213 178000)) (25822 33615 233498 579000) 0 nil])
([nil nil ((apply 48 5720 6405 undo--wrap-and-run-primitive-undo 5720 6405 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6403) (#<marker at 6641 in maze2.rs> . -3) (#<marker at 6641 in maze2.rs> . -3) (#<marker at 6641 in maze2.rs> . -3) (#<marker at 6641 in maze2.rs> . -3) (#<marker at 6641 in maze2.rs> . -3) (#<marker at 6641 in maze2.rs> . -3) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6387) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6359) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6340) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6261) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6236) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6157) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6109) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6089) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6036) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -6011) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5958) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5900) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5821) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5782) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5728) 6453)) (t 25822 33907 107218 817000)) nil (25822 33929 720796 569000) 0 nil])
nil
([nil nil ((6169 . 6172) (#("row" 0 3 (fontified t)) . 6169) (undo-tree-id1164 . -2) (undo-tree-id1165 . -3) (undo-tree-id1166 . -3)) nil (25822 33929 720794 936000) 0 nil])
([nil nil ((6273 . 6276) (#("col" 0 3 (fontified t)) . 6273) (undo-tree-id1159 . -2) (undo-tree-id1160 . -2) (undo-tree-id1161 . -2) (undo-tree-id1162 . -3) (undo-tree-id1163 . -3)) nil (25822 33929 720788 644000) 0 nil])
([nil nil ((6259 . 6265) (6248 . 6259) (#("wall" 0 4 (fontified t)) . -6248) (undo-tree-id1167 . -4) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -2) (undo-tree-id1171 . -2) (undo-tree-id1172 . -3) (undo-tree-id1173 . -3) (undo-tree-id1174 . -4) (undo-tree-id1175 . -4) (undo-tree-id1176 . -4) (undo-tree-id1177 . -4) (undo-tree-id1178 . -4) (undo-tree-id1179 . -4) (undo-tree-id1180 . -4) 6252 (6248 . 6252) (#("0" 0 1 (fontified t)) . -6248) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (#("." 0 1 (fontified t)) . -6249) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (#("0" 0 1 (fontified t)) . -6250) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) 6251 (t 25822 33929 727219 311000)) nil (25822 33973 473789 835000) 0 nil])
([nil nil ((apply 66 3940 4720 undo--wrap-and-run-primitive-undo 3940 4720 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4716) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4705) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4626) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4595) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4565) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4539) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4513) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4502) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4478) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4463) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4376) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4341) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4306) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4262) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4191) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4174) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4099) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4070) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4042) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3985) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3965) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3944) 4786)) (t 25822 33973 510553 372000)) nil (25822 34019 30875 177000) 0 nil])
([nil nil ((apply 66 4733 5516 undo--wrap-and-run-primitive-undo 4733 5516 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5512) (#<marker at 3870 in maze2.rs> . -2) (#<marker at 1579 in maze2.rs> . -2) (#<marker in no buffer> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5501) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5471) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5440) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5360) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5334) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5308) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5297) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5273) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5258) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5223) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5188) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5100) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5056) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4985) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4968) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4940) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4911) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4835) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4778) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4758) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4737) (#<marker at 3870 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker in no buffer> . -2) (#<marker at 5828 in maze2.rs> . -2) (#<marker at 5828 in maze2.rs> . -2) 5582))) nil (25822 34019 30871 230000) 0 nil])
([nil nil ((apply -66 4733 5583 undo--wrap-and-run-primitive-undo 4733 5583 ((5575 . 5578) (5561 . 5564) (5528 . 5531) (5494 . 5497) (5411 . 5414) (5382 . 5385) (5353 . 5356) (5339 . 5342) (5312 . 5315) (5294 . 5297) (5256 . 5259) (5218 . 5221) (5127 . 5130) (5080 . 5083) (5006 . 5009) (4986 . 4989) (4955 . 4958) (4923 . 4926) (4844 . 4847) (4784 . 4787) (4761 . 4764) (4737 . 4740) 5516)) (t 25822 34019 40554 128000)) nil (25822 34119 906934 737000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3929 . 3930) (#("
" 0 1 (fontified nil)) . -4705) (3925 . 4706) 3919 (t 25822 34122 120555 780000)) nil (25822 34156 932466 334000) 0 nil] [nil nil ((#("                wall_width,
" 0 4 (fontified t) 4 16 (fontified t) 16 28 (fontified t)) . 4038) (undo-tree-id1227 . -27) (undo-tree-id1228 . -4) (undo-tree-id1229 . -4) (undo-tree-id1230 . -4) (undo-tree-id1231 . -4) (undo-tree-id1232 . -4) (undo-tree-id1233 . -4) (undo-tree-id1234 . -28) 4042 (t 25822 34064 453888 142000)) ((4038 . 4066)) (25822 34119 505891 119000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3926) (undo-tree-id1336 . -4) (undo-tree-id1337 . -4) (undo-tree-id1338 . -4) (undo-tree-id1339 . -4) 3930 (3925 . 3930) 3919) nil (25822 34156 932464 501000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4157 . 4158) (#("
" 0 1 (fontified nil)) . -4169) (4141 . 4170) 4071) ((#("
                wall_width,
" 0 1 (fontified t) 1 5 (fontified nil) 5 16 (fontified nil) 16 17 (rear-nonsticky nil fontified nil) 17 28 (fontified nil) 28 29 (fontified nil)) . 4141) (4169 . 4170) (nil rear-nonsticky t 4157 . 4158)) (25822 34119 81981 97000) 0 nil])
([nil nil ((3930 . 3942) (3926 . 3930)) nil (25822 34156 932461 495000) 0 nil])
([nil nil ((#("                (room_size + wall_width) * grid.width as f32 + wall_width,
" 0 4 (fontified t) 4 16 (fontified t) 16 51 (fontified t) 51 54 (fontified t) 54 56 (fontified t face font-lock-keyword-face) 56 57 (fontified t) 57 60 (fontified t face font-lock-type-face) 60 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t)) . 4067) (undo-tree-id1205 . -74) (undo-tree-id1206 . -16) (undo-tree-id1207 . -4) (undo-tree-id1208 . -4) (undo-tree-id1209 . -4) (undo-tree-id1210 . -4) (undo-tree-id1211 . -4) (undo-tree-id1212 . -4) (undo-tree-id1213 . -4) (undo-tree-id1214 . -4) (undo-tree-id1215 . -4) (undo-tree-id1216 . -4) (undo-tree-id1217 . -16) (undo-tree-id1218 . -16) (undo-tree-id1219 . 59) (undo-tree-id1220 . -17) (undo-tree-id1221 . 36) (undo-tree-id1222 . -40) (undo-tree-id1223 . -16) (undo-tree-id1224 . -16) (undo-tree-id1225 . -16) (undo-tree-id1226 . -75) 4083) ((4067 . 4142)) (25822 34118 473144 725000) 0 nil])
([nil nil ((#("                (room_size + wall_width) * grid.width as f32 + wall_width,
" 0 4 (fontified t) 4 16 (fontified t) 16 51 (fontified t) 51 54 (fontified t) 54 56 (fontified t face font-lock-keyword-face) 56 57 (fontified t) 57 60 (fontified t face font-lock-type-face) 60 73 (fontified t) 73 74 (fontified t) 74 75 (fontified t)) . 4098) (undo-tree-id1328 . -74) (undo-tree-id1329 . -15) (undo-tree-id1330 . -15) (undo-tree-id1331 . -15) (undo-tree-id1332 . -15) (undo-tree-id1333 . -15) (undo-tree-id1334 . -15) (undo-tree-id1335 . -75) 4113) nil (25822 34156 932460 363000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4053 . 4054) (#("
" 0 1 (fontified nil)) . -4112) (4037 . 4113) 3997) ((#("
                (room_size + wall_width) * grid.width as f32 + wall_width,
" 0 1 (fontified t) 1 5 (fontified nil) 5 16 (fontified nil) 16 17 (fontified nil rear-nonsticky nil) 17 52 (fontified nil) 52 55 (fontified nil) 55 57 (fontified nil face font-lock-keyword-face) 57 58 (fontified nil) 58 61 (fontified nil face font-lock-type-face) 61 74 (fontified nil) 74 75 (fontified nil) 75 76 (fontified nil)) . 4037) (undo-tree-id1235 . -75) (undo-tree-id1236 . -1) (undo-tree-id1237 . -75) (undo-tree-id1238 . 59) (undo-tree-id1239 . -18) (undo-tree-id1240 . 36) (undo-tree-id1241 . -41) (undo-tree-id1242 . -17) (undo-tree-id1243 . -17) (undo-tree-id1244 . -17) (undo-tree-id1245 . -17) (undo-tree-id1246 . -17) (undo-tree-id1247 . -1) (undo-tree-id1248 . -17) (undo-tree-id1249 . -17) (undo-tree-id1250 . -17) (undo-tree-id1251 . -17) (undo-tree-id1252 . -17) (undo-tree-id1253 . -17) (undo-tree-id1254 . -17) (undo-tree-id1255 . -17) (undo-tree-id1256 . -17) (undo-tree-id1257 . -17) (undo-tree-id1258 . -17) (4112 . 4113) (nil rear-nonsticky t 4053 . 4054) (t 25822 34094 390555 337000)) (25822 34094 384447 428000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4056 . 4057) (#("
" 0 1 (fontified nil)) . -4115) (4040 . 4116) 3999) nil (25822 34156 932455 474000) 0 nil])
nil
([nil nil ((#("                wall_width,
" 0 4 (fontified t) 4 16 (fontified t) 16 28 (fontified t)) . 4116) (undo-tree-id1314 . -27) (undo-tree-id1315 . -16) (undo-tree-id1316 . -15) (undo-tree-id1317 . -15) (undo-tree-id1318 . -15) (undo-tree-id1319 . -15) (undo-tree-id1320 . -15) (undo-tree-id1321 . -15) (undo-tree-id1322 . -16) (undo-tree-id1323 . -16) (undo-tree-id1324 . -16) (undo-tree-id1325 . -16) (undo-tree-id1326 . -16) (undo-tree-id1327 . -28) 4132) nil (25822 34156 932453 901000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4160 . 4161) (#("
" 0 1 (fontified nil)) . -4172) (4144 . 4173) 4132) nil (25822 34156 932446 297000) 0 nil])
([nil nil ((#("            ((room_size + wall_width) * grid.width as f32 + wall_width) / 2.0,
" 0 4 (fontified t) 4 9 (fontified t) 9 10 (fontified t) 10 12 (fontified t) 12 13 (fontified t) 13 51 (fontified t) 51 53 (fontified t face font-lock-keyword-face) 53 54 (fontified t) 54 57 (fontified t face font-lock-type-face) 57 71 (fontified t) 71 77 (fontified t) 77 79 (fontified t)) . 4625) (undo-tree-id1304 . -78) (undo-tree-id1305 . -16) (undo-tree-id1306 . -16) (undo-tree-id1307 . -16) (undo-tree-id1308 . -16) (undo-tree-id1309 . -16) (undo-tree-id1310 . -16) (undo-tree-id1311 . -16) (undo-tree-id1312 . -16) (undo-tree-id1313 . -79) 4641) nil (25822 34156 932444 844000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4575 . 4576) (#("
" 0 1 (fontified nil)) . -4642) (4563 . 4643) 4547) nil (25822 34156 932438 472000) 0 nil])
([nil nil ((#("            wall_width / 2.0,
" 0 4 (fontified t) 4 12 (fontified t) 12 29 (fontified t) 29 30 (fontified t)) . 4643) (undo-tree-id1290 . -29) (undo-tree-id1291 . -12) (undo-tree-id1292 . -16) (undo-tree-id1293 . -16) (undo-tree-id1294 . -9) (undo-tree-id1295 . -9) (undo-tree-id1296 . -9) (undo-tree-id1297 . -9) (undo-tree-id1298 . -12) (undo-tree-id1299 . -12) (undo-tree-id1300 . -12) (undo-tree-id1301 . -12) (undo-tree-id1302 . -12) (undo-tree-id1303 . -30) 4655) nil (25822 34156 932436 739000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4685 . 4686) (#("
" 0 1 (fontified nil)) . -4703) (4673 . 4704) 4655) nil (25822 34156 932428 834000) 0 nil])
([nil nil ((#("                -wall_width / 2.0,
                wall_height / 2.0,
                (room_size + wall_width) * grid.width as f32 / 2.0 - wall_width / 2.0,
" 0 4 (fontified t) 4 16 (fontified t) 16 35 (fontified t) 35 39 (fontified t) 39 46 (fontified t) 46 51 (fontified t) 51 70 (fontified t) 70 74 (fontified t) 74 80 (fontified t) 80 86 (fontified t) 86 124 (fontified t) 124 126 (fontified t face font-lock-keyword-face) 126 127 (fontified t) 127 130 (fontified t face font-lock-type-face) 130 155 (fontified t) 155 157 (fontified t)) . 4305) (undo-tree-id1259 . -82) (undo-tree-id1260 . -156) (undo-tree-id1261 . -12) (undo-tree-id1262 . -82) (undo-tree-id1263 . -82) (undo-tree-id1264 . -16) (undo-tree-id1265 . -16) (undo-tree-id1266 . -51) (undo-tree-id1267 . -51) (undo-tree-id1268 . -86) (undo-tree-id1269 . -86) (undo-tree-id1270 . -82) (undo-tree-id1271 . -82) (undo-tree-id1272 . -47) (undo-tree-id1273 . -47) (undo-tree-id1274 . -12) (undo-tree-id1275 . -12) (undo-tree-id1276 . -12) (undo-tree-id1277 . -12) (undo-tree-id1278 . -157) (undo-tree-id1279 . -12) (undo-tree-id1280 . -82) (undo-tree-id1281 . -12) (undo-tree-id1282 . -12) (undo-tree-id1283 . -47) (undo-tree-id1284 . -47) (undo-tree-id1285 . -70) (undo-tree-id1286 . -82) (undo-tree-id1287 . -82) (undo-tree-id1288 . -82) (undo-tree-id1289 . -157) 4387) nil (25822 34156 932426 89000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4308 . 4309) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -4471) (4304 . 4472) 4273) nil (25822 34156 932400 160000) 0 nil])
([nil nil ((apply 9 4305 4463 undo--wrap-and-run-primitive-undo 4305 4463 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4432) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4397) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4309) 4472))) nil (25822 34237 868589 315000) 0 nil])
([nil nil ((apply -66 4738 5585 undo--wrap-and-run-primitive-undo 4738 5585 ((5577 . 5580) (5563 . 5566) (5481 . 5484) (5447 . 5450) (5414 . 5417) (5385 . 5388) (5356 . 5359) (5342 . 5345) (5315 . 5318) (5297 . 5300) (5207 . 5210) (5169 . 5172) (5131 . 5134) (5084 . 5087) (5010 . 5013) (4990 . 4993) (4912 . 4915) (4880 . 4883) (4849 . 4852) (4789 . 4792) (4766 . 4769) (4742 . 4745) 4759))) ((apply 66 4738 5519 undo--wrap-and-run-primitive-undo 4738 5519 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 4742) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 4766) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 4789) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 4849) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 4880) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 4912) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 4990) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 5010) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 5084) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 5131) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 5169) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 5207) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 5297) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 5315) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 5342) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 5356) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 5385) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 5414) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 5447) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 5481) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 5563) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 5577) 4420))) (25822 34238 879712 475000) 0 nil])
([nil nil ((4354 . 4358) (#("i" 0 1 (fontified t)) . -4354) (undo-tree-id1348 . -1) (4353 . 4355) (#("height" 0 6 (fontified t)) . 4353) (undo-tree-id1349 . -5) (undo-tree-id1350 . -6) (undo-tree-id1351 . -6)) nil (25822 34252 611609 105000) 0 nil] [nil nil ((#(" / 2.0" 0 6 (fontified t)) . 4420) (undo-tree-id1346 . -5) (undo-tree-id1347 . -6) (t 25822 34173 290556 556000)) ((4420 . 4426)) (25822 34233 62052 334000) 0 nil])
([nil nil ((4728 . 4739) (4724 . 4728) (#("
" 0 1 (fontified t)) . -4724) (undo-tree-id1572 . -1) (undo-tree-id1573 . 1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (#(" " 0 1 (fontified t)) . -4725) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (#(" " 0 1 (fontified t)) . -4726) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (#(" " 0 1 (fontified t)) . -4727) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (#(" " 0 1 (fontified t)) . -4728) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) 4729 (4725 . 4729) (#("    " 0 4 (fontified nil)) . 4724) (undo-tree-id1594 . -4) (undo-tree-id1595 . -4) (undo-tree-id1596 . -4) (undo-tree-id1597 . -4) (4724 . 4729) (#("    " 0 4 (fontified nil)) . 4723) (undo-tree-id1598 . -4) (undo-tree-id1599 . -4) (undo-tree-id1600 . -4) (undo-tree-id1601 . -4) (4727 . 4728) (4722 . 4727) (t 25822 34252 617224 525000) 4721) nil (25822 34328 85047 398000) 0 nil])
([nil nil ((#(" / 2.0" 0 6 (fontified t)) . 4449) (undo-tree-id1344 . -5) (undo-tree-id1345 . -6)) ((4449 . 4455)) (25822 34232 892261 332000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4726 . 4727) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -5571) (4722 . 5572) 4721) nil (25822 34328 85031 669000) 0 nil])
([nil nil ((#(" / 2.0" 0 1 (fontified t) 1 6 (fontified t)) . 4385) (undo-tree-id1340 . -5) (undo-tree-id1341 . -6) (undo-tree-id1342 . -6) (undo-tree-id1343 . -6)) ((4385 . 4391) (t 25822 34220 800557 318000)) (25822 34220 796334 669000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4723) (undo-tree-id1568 . -4) (undo-tree-id1569 . -4) (undo-tree-id1570 . -4) (undo-tree-id1571 . -4) 4727 (4722 . 4727) 4719) nil (25822 34328 85030 236000) 0 nil])
nil
([nil nil ((apply 66 4724 5507 undo--wrap-and-run-primitive-undo 4724 5507 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5503) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5492) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5462) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5431) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5351) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5325) (#("// " 0 1 (fontified t face font-lock-comment-delimiter-face) 1 3 (fontified t face font-lock-comment-delimiter-face)) . -5299) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5288) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5264) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5249) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5214) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5179) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5091) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5047) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4976) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4959) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4931) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4902) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4826) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4769) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4749) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -4728) 5573))) nil (25822 34328 85027 211000) 0 nil])
([nil nil ((#("                (room_size + wall_width) * grid.height as f32 + wall_width,
" 0 4 (fontified t) 4 16 (fontified t) 16 33 (fontified t) 33 40 (fontified t) 40 55 (fontified t) 55 57 (fontified t face font-lock-keyword-face) 57 58 (fontified t) 58 61 (fontified t face font-lock-type-face) 61 74 (fontified t) 74 76 (fontified t)) . 4822) (undo-tree-id1554 . -75) (undo-tree-id1555 . -16) (undo-tree-id1556 . -76) (undo-tree-id1557 . -76) (undo-tree-id1558 . -76) (undo-tree-id1559 . -76) (undo-tree-id1560 . 60) (undo-tree-id1561 . -17) (undo-tree-id1562 . 37) (undo-tree-id1563 . -40) (undo-tree-id1564 . -16) (undo-tree-id1565 . -16) (undo-tree-id1566 . -16) (undo-tree-id1567 . -76) 4838) nil (25822 34328 85025 668000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4894 . 4895) (#("
" 0 1 (fontified nil)) . -4954) (4878 . 4955) 4867) nil (25822 34328 84964 323000) 0 nil])
([nil nil ((#("                wall_width,
" 0 4 (fontified t) 4 13 (fontified t) 13 16 (fontified t) 16 20 (fontified t) 20 27 (fontified t) 27 28 (fontified t)) . 4851) (undo-tree-id1544 . -27) (undo-tree-id1545 . -16) (undo-tree-id1546 . -16) (undo-tree-id1547 . -16) (undo-tree-id1548 . -16) (undo-tree-id1549 . -16) (undo-tree-id1550 . -16) (undo-tree-id1551 . -16) (undo-tree-id1552 . -16) (undo-tree-id1553 . -28) 4867) nil (25822 34328 84962 770000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4837 . 4838) (#("
" 0 1 (fontified nil)) . -4849) (4821 . 4850) 4781) nil (25822 34328 84945 577000) 0 nil])
([nil nil ((#("            ((room_size + wall_width) * grid.height as f32 + wall_width) / 2.0,
" 0 4 (fontified t) 4 12 (fontified t) 12 16 (fontified t) 16 19 (fontified t) 19 30 (fontified t) 30 51 (fontified t) 51 52 (fontified t) 52 54 (fontified t face font-lock-keyword-face) 54 55 (fontified t) 55 58 (fontified t face font-lock-type-face) 58 63 (fontified t) 63 71 (fontified t) 71 72 (fontified t) 72 79 (fontified t) 79 80 (fontified t)) . 5347) (undo-tree-id1530 . -79) (undo-tree-id1531 . -16) (undo-tree-id1532 . -80) (undo-tree-id1533 . -80) (undo-tree-id1534 . -80) (undo-tree-id1535 . -80) (undo-tree-id1536 . -16) (undo-tree-id1537 . -16) (undo-tree-id1538 . -16) (undo-tree-id1539 . -16) (undo-tree-id1540 . -16) (undo-tree-id1541 . -16) (undo-tree-id1542 . -16) (undo-tree-id1543 . -80) 5363) nil (25822 34328 84944 85000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5419 . 5420) (#("
" 0 1 (fontified nil)) . -5487) (5407 . 5488) 5394) nil (25822 34328 84937 81000) 0 nil])
([nil nil ((#("            wall_width / 2.0,
" 0 4 (fontified t) 4 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t)) . 5378) (undo-tree-id1518 . -29) (undo-tree-id1519 . -12) (undo-tree-id1520 . -16) (undo-tree-id1521 . -16) (undo-tree-id1522 . -16) (undo-tree-id1523 . -16) (undo-tree-id1524 . -12) (undo-tree-id1525 . -12) (undo-tree-id1526 . -12) (undo-tree-id1527 . -12) (undo-tree-id1528 . -12) (undo-tree-id1529 . -30) 5390) nil (25822 34328 84935 609000) 0 nil])
([nil nil ((5347 . 5377) 5359) nil (25822 34328 84929 106000) 0 nil])
([nil nil ((#("                wall_height / 2.0,
                -wall_width / 2.0,
" 0 4 (fontified t) 4 12 (fontified t) 12 16 (fontified t) 16 34 (fontified t) 34 35 (fontified t) 35 39 (fontified t) 39 42 (fontified t) 42 51 (fontified t) 51 70 (fontified t)) . 5175) (undo-tree-id1479 . -47) (undo-tree-id1480 . -69) (undo-tree-id1481 . -12) (undo-tree-id1482 . -47) (undo-tree-id1483 . -47) (undo-tree-id1484 . -35) (undo-tree-id1485 . -35) (undo-tree-id1486 . -70) (undo-tree-id1487 . -70) (undo-tree-id1488 . -70) (undo-tree-id1489 . -70) (undo-tree-id1490 . -35) (undo-tree-id1491 . -35) (undo-tree-id1492 . -16) (undo-tree-id1493 . -16) (undo-tree-id1494 . -51) (undo-tree-id1495 . -51) (undo-tree-id1496 . -51) (undo-tree-id1497 . -51) (undo-tree-id1498 . -16) (undo-tree-id1499 . -16) (undo-tree-id1500 . -16) (undo-tree-id1501 . -16) (undo-tree-id1502 . -51) (undo-tree-id1503 . -51) (undo-tree-id1504 . -47) (undo-tree-id1505 . -47) (undo-tree-id1506 . -12) (undo-tree-id1507 . -12) (undo-tree-id1508 . -70) (undo-tree-id1509 . -12) (undo-tree-id1510 . -47) (undo-tree-id1511 . -12) (undo-tree-id1512 . -12) (undo-tree-id1513 . -35) (undo-tree-id1514 . -47) (undo-tree-id1515 . -47) (undo-tree-id1516 . -47) (undo-tree-id1517 . -70) 5222) nil (25822 34328 84926 502000) 0 nil])
([nil nil ((#("                (room_size + wall_width) * grid.height as f32 / 2.0 - wall_width / 2.0,
" 0 4 (fontified t) 4 16 (fontified t) 16 24 (fontified t) 24 32 (fontified t) 32 39 (fontified t) 39 54 (fontified t) 54 55 (fontified t) 55 57 (fontified t face font-lock-keyword-face) 57 58 (fontified t) 58 61 (fontified t face font-lock-type-face) 61 68 (fontified t) 68 81 (fontified t) 81 88 (fontified t)) . 5087) (undo-tree-id1429 . -88) (undo-tree-id1430 . -87) (undo-tree-id1431 . -88) (undo-tree-id1432 . -88) (undo-tree-id1433 . -88) (undo-tree-id1434 . -12) (undo-tree-id1435 . -88) (undo-tree-id1436 . -88) (undo-tree-id1437 . -88) (undo-tree-id1438 . -88) (undo-tree-id1439 . -88) (undo-tree-id1440 . -88) (undo-tree-id1441 . -88) (undo-tree-id1442 . -88) (undo-tree-id1443 . -88) (undo-tree-id1444 . -88) (undo-tree-id1445 . -88) (undo-tree-id1446 . -88) (undo-tree-id1447 . -16) (undo-tree-id1448 . -16) (undo-tree-id1449 . -88) (undo-tree-id1450 . -88) (undo-tree-id1451 . -88) (undo-tree-id1452 . -88) (undo-tree-id1453 . -88) (undo-tree-id1454 . -88) (undo-tree-id1455 . -88) (undo-tree-id1456 . -88) (undo-tree-id1457 . -16) (undo-tree-id1458 . -16) (undo-tree-id1459 . -88) (undo-tree-id1460 . -88) (undo-tree-id1461 . -88) (undo-tree-id1462 . -88) (undo-tree-id1463 . -88) (undo-tree-id1464 . -88) (undo-tree-id1465 . -88) (undo-tree-id1466 . -88) (undo-tree-id1467 . -88) (undo-tree-id1468 . -88) (undo-tree-id1469 . -88) (undo-tree-id1470 . -88) (undo-tree-id1471 . -12) (undo-tree-id1472 . -12) (undo-tree-id1473 . -12) (undo-tree-id1474 . -12) (undo-tree-id1475 . -12) (undo-tree-id1476 . -12) (undo-tree-id1477 . -12) (undo-tree-id1478 . -88) 5099) nil (25822 34328 84905 552000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5090 . 5091) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -5252) (5086 . 5253) 5055) nil (25822 34328 85208 420000) 0 nil])
([nil nil ((apply 9 5087 5244 undo--wrap-and-run-primitive-undo 5087 5244 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5161) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5126) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -5091) 5253))) nil (25822 34334 611947 755000) 0 nil] [nil nil ((#("    //             -wall_width / 2.0,
    //             wall_height / 2.0,
    //             (room_size + wall_width) * grid.width as f32 / 2.0 - wall_width / 2.0,
" 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t) 4 7 (fontified t face font-lock-comment-delimiter-face) 7 19 (fontified t face font-lock-comment-delimiter-face) 19 38 (fontified t face font-lock-comment-face) 38 42 (fontified t) 42 45 (fontified t face font-lock-comment-delimiter-face) 45 52 (fontified t face font-lock-comment-delimiter-face) 52 57 (fontified t face font-lock-comment-delimiter-face) 57 76 (fontified t face font-lock-comment-face) 76 80 (fontified t) 80 83 (fontified t face font-lock-comment-delimiter-face) 83 89 (fontified t face font-lock-comment-delimiter-face) 89 95 (fontified t face font-lock-comment-delimiter-face) 95 133 (fontified t face font-lock-comment-face) 133 135 (fontified t face font-lock-comment-face) 135 136 (fontified t face font-lock-comment-face) 136 139 (fontified t face font-lock-comment-face) 139 164 (fontified t face font-lock-comment-face) 164 165 (fontified t face font-lock-comment-face) 165 166 (fontified t face font-lock-comment-face)) . 5087) (undo-tree-id1352 . -80) (undo-tree-id1353 . -165) (undo-tree-id1354 . -4) (undo-tree-id1355 . -80) (undo-tree-id1356 . -80) (undo-tree-id1357 . -166) (undo-tree-id1358 . -166) (undo-tree-id1359 . -166) (undo-tree-id1360 . -166) (undo-tree-id1361 . -166) (undo-tree-id1362 . -166) (undo-tree-id1363 . -166) (undo-tree-id1364 . -166) (undo-tree-id1365 . -166) (undo-tree-id1366 . -166) (undo-tree-id1367 . -166) (undo-tree-id1368 . -166) (undo-tree-id1369 . -166) (undo-tree-id1370 . -166) (undo-tree-id1371 . -166) (undo-tree-id1372 . -166) (undo-tree-id1373 . -166) (undo-tree-id1374 . -166) (undo-tree-id1375 . -166) (undo-tree-id1376 . -166) (undo-tree-id1377 . -166) (undo-tree-id1378 . -166) (undo-tree-id1379 . -166) (undo-tree-id1380 . -166) (undo-tree-id1381 . -166) (undo-tree-id1382 . -166) (undo-tree-id1383 . -166) (undo-tree-id1384 . -166) (undo-tree-id1385 . -166) (undo-tree-id1386 . -166) (undo-tree-id1387 . -166) (undo-tree-id1388 . -166) (undo-tree-id1389 . -166) (undo-tree-id1390 . -166) (undo-tree-id1391 . -166) (undo-tree-id1392 . -166) (undo-tree-id1393 . -166) (undo-tree-id1394 . -166) (undo-tree-id1395 . -166) (undo-tree-id1396 . -166) (undo-tree-id1397 . -166) (undo-tree-id1398 . -166) (undo-tree-id1399 . -166) (undo-tree-id1400 . -166) (undo-tree-id1401 . -166) (undo-tree-id1402 . -166) (undo-tree-id1403 . -4) (undo-tree-id1404 . -4) (undo-tree-id1405 . -4) (undo-tree-id1406 . -4) (undo-tree-id1407 . -42) (undo-tree-id1408 . -42) (undo-tree-id1409 . -80) (undo-tree-id1410 . -80) (undo-tree-id1411 . -80) (undo-tree-id1412 . -80) (undo-tree-id1413 . -42) (undo-tree-id1414 . -42) (undo-tree-id1415 . -4) (undo-tree-id1416 . -4) (undo-tree-id1417 . -166) (undo-tree-id1418 . -4) (undo-tree-id1419 . -80) (undo-tree-id1420 . -4) (undo-tree-id1421 . -4) (undo-tree-id1422 . -42) (undo-tree-id1423 . -42) (undo-tree-id1424 . -76) (undo-tree-id1425 . -80) (undo-tree-id1426 . -80) (undo-tree-id1427 . -80) (undo-tree-id1428 . -166) 5167) ((5087 . 5253)) (25822 34328 84873 793000) 0 nil])
([nil nil ((5207 . 5211) (#("i" 0 1 (fontified t)) . -5207) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (5205 . 5208) (#("width" 0 5 (fontified t)) . 5205) (undo-tree-id1604 . -4) (undo-tree-id1605 . -5) (undo-tree-id1606 . -5)) nil (25822 34334 611944 168000) 0 nil])
nil
([nil nil ((#("    // New West
" 0 4 (fontified t) 4 7 (fontified t face font-lock-comment-delimiter-face) 7 15 (fontified t face font-lock-comment-face) 15 16 (fontified t face font-lock-comment-face)) . 5508) (undo-tree-id1622 . -15) (undo-tree-id1623 . -14) (undo-tree-id1624 . -14) (undo-tree-id1625 . -14) (undo-tree-id1626 . -14) (undo-tree-id1627 . -14) (undo-tree-id1628 . -14) (undo-tree-id1629 . -16) 5522 (t 25822 34334 620559 326000)) nil (25822 34363 864198 302000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4726 . 4727) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -4738) (4722 . 4739) 4715) nil (25822 34363 864193 172000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4723) (undo-tree-id1618 . -4) (undo-tree-id1619 . -4) (undo-tree-id1620 . -4) (undo-tree-id1621 . -4) 4727 (4722 . 4727) 4719) nil (25822 34363 864191 760000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4740) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1)) nil (25822 34363 864188 93000) 0 nil])
([nil nil ((apply 54 3244 3872 undo--wrap-and-run-primitive-undo 3244 3872 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3868) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3787) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3761) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3750) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3726) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3711) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3654) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3619) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3563) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3519) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3448) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3431) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3402) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3374) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3346) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3289) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3269) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . -3248) 3926))) nil (25822 34363 864183 584000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -3872) (undo-tree-id1609 . -4) (undo-tree-id1610 . -4) (undo-tree-id1611 . -4) (undo-tree-id1612 . -4) 3876 (3871 . 3876) 3864) nil (25822 34363 864181 981000) 0 nil])
([nil nil (("
" . 5471) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) 3872) nil (25822 34409 5013 467000) 0 nil])
([nil nil ((3622 . 3626) (#("i" 0 1 (fontified t)) . -3622) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (3622 . 3623) (3613 . 3622)) nil (25822 34420 927364 674000) 0 nil] [nil nil ((4346 . 4350) (#("i" 0 1 (fontified t)) . -4346) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (4337 . 4347) (t 25822 34363 870559 792000)) ((#(" + wall_wi" 0 9 (fontified nil) 9 10 (fontified nil)) . 4337) (undo-tree-id1632 . -10) (undo-tree-id1633 . -9) (undo-tree-id1634 . -9) (undo-tree-id1635 . -9) (undo-tree-id1636 . -10) (undo-tree-id1637 . -9) (undo-tree-id1638 . -9) (undo-tree-id1639 . -9) (undo-tree-id1640 . -9) (undo-tree-id1641 . -9) (undo-tree-id1642 . -9) (undo-tree-id1643 . -9) (undo-tree-id1644 . -9) (undo-tree-id1645 . -9) (undo-tree-id1646 . -9) (undo-tree-id1647 . -9) (undo-tree-id1648 . -9) (4346 . 4347) (#("idth" 0 4 (fontified t)) . 4346) (undo-tree-id1649 . -3) (undo-tree-id1650 . -3) (undo-tree-id1651 . -3) (undo-tree-id1652 . -3) (undo-tree-id1653 . -3) (undo-tree-id1654 . -3) (undo-tree-id1655 . -3) (undo-tree-id1656 . -3) (undo-tree-id1657 . -3) (undo-tree-id1658 . -3) (undo-tree-id1659 . -3) (undo-tree-id1660 . -3) (undo-tree-id1661 . -3) (undo-tree-id1662 . -3) (undo-tree-id1663 . -3) (undo-tree-id1664 . -3) (t 25822 34393 33893 609000)) (25822 34393 28862 690000) 0 nil])
([nil nil ((#("    // South
    // commands.spawn((
    //     PbrBundle {
    //         mesh: meshes.add(Mesh::from(shape::Box::new(
    //             wall_width,
    //             wall_height,
    //             (room_size + wall_width) * grid.width as f32 + wall_width,
    //         ))),
    //         material: materials.add(Color::rgb(1.0, 0.0, 0.0).into()),
    //         transform: Transform::from_xyz(
    //             -wall_width / 2.0,
    //             wall_height / 2.0,
    //             (room_size + wall_width) * grid.width as f32 / 2.0 - wall_width / 2.0,
    //         ),
    //         ..default()
    //     },
    //     RigidBody::Fixed,
    //     Collider::cuboid(
    //         wall_width / 2.0,
    //         wall_height / 2.0,
    //         ((room_size + wall_width) * grid.width as f32 + wall_width) / 2.0,
    //     ),
    // ));

    // West
    // commands.spawn((
    //     PbrBundle {
    //         mesh: meshes.add(Mesh::from(shape::Box::new(
    //             (room_size + wall_width) * grid.height as f32 + wall_width,
    //             wall_height,
    //             wall_width,
    //         ))),
    //         material: materials.add(Color::rgb(1.0, 0.0, 0.0).into()),
    //         transform: Transform::from_xyz(
    //             (room_size + wall_width) * grid.height as f32 / 2.0 - wall_width / 2.0,
    //             wall_height / 2.0,
    //             -wall_width / 2.0,
    //         ),
    //         ..default()
    //     },
    //     RigidBody::Fixed,
    //     Collider::cuboid(
    //         ((room_size + wall_width) * grid.height as f32 + wall_width) / 2.0,
    //         wall_height / 2.0,
    //         wall_width / 2.0,
    //     ),
    // ));
" 0 4 (fontified t) 4 7 (fontified t face font-lock-comment-delimiter-face) 7 13 (fontified t face font-lock-comment-face) 13 17 (fontified t) 17 20 (fontified t face font-lock-comment-delimiter-face) 20 37 (fontified t face font-lock-comment-face) 37 41 (fontified t) 41 44 (fontified t face font-lock-comment-delimiter-face) 44 48 (fontified t face font-lock-comment-delimiter-face) 48 57 (fontified t face font-lock-comment-face) 57 60 (fontified t face font-lock-comment-face) 60 64 (fontified t) 64 67 (fontified t face font-lock-comment-delimiter-face) 67 75 (fontified t face font-lock-comment-delimiter-face) 75 79 (fontified t face font-lock-comment-face) 79 92 (fontified t face font-lock-comment-face) 92 96 (fontified t face font-lock-comment-face) 96 103 (fontified t face font-lock-comment-face) 103 108 (fontified t face font-lock-comment-face) 108 110 (fontified t face font-lock-comment-face) 110 113 (fontified t face font-lock-comment-face) 113 119 (fontified t face font-lock-comment-face) 119 120 (fontified t face font-lock-comment-face) 120 124 (fontified t) 124 127 (fontified t face font-lock-comment-delimiter-face) 127 139 (fontified t face font-lock-comment-delimiter-face) 139 151 (fontified t face font-lock-comment-face) 151 155 (fontified t) 155 158 (fontified t face font-lock-comment-delimiter-face) 158 170 (fontified t face font-lock-comment-delimiter-face) 170 183 (fontified t face font-lock-comment-face) 183 187 (fontified t) 187 190 (fontified t face font-lock-comment-delimiter-face) 190 202 (fontified t face font-lock-comment-delimiter-face) 202 237 (fontified t face font-lock-comment-face) 237 240 (fontified t face font-lock-comment-face) 240 242 (fontified t face font-lock-comment-face) 242 243 (fontified t face font-lock-comment-face) 243 246 (fontified t face font-lock-comment-face) 246 259 (fontified t face font-lock-comment-face) 259 260 (fontified t face font-lock-comment-face) 260 261 (fontified t face font-lock-comment-face) 261 265 (fontified t) 265 268 (fontified t face font-lock-comment-delimiter-face) 268 276 (fontified t face font-lock-comment-delimiter-face) 276 281 (fontified t face font-lock-comment-face) 281 285 (fontified t) 285 288 (fontified t face font-lock-comment-delimiter-face) 288 296 (fontified t face font-lock-comment-delimiter-face) 296 304 (fontified t face font-lock-comment-face) 304 320 (fontified t face font-lock-comment-face) 320 325 (fontified t face font-lock-comment-face) 325 355 (fontified t face font-lock-comment-face) 355 359 (fontified t) 359 362 (fontified t face font-lock-comment-delimiter-face) 362 368 (fontified t face font-lock-comment-delimiter-face) 368 370 (fontified t face font-lock-comment-delimiter-face) 370 379 (fontified t face font-lock-comment-face) 379 381 (fontified t face font-lock-comment-face) 381 390 (fontified t face font-lock-comment-face) 390 402 (fontified t face font-lock-comment-face) 402 406 (fontified t) 406 409 (fontified t face font-lock-comment-delimiter-face) 409 421 (fontified t face font-lock-comment-delimiter-face) 421 440 (fontified t face font-lock-comment-face) 440 444 (fontified t) 444 447 (fontified t face font-lock-comment-delimiter-face) 447 454 (fontified t face font-lock-comment-delimiter-face) 454 459 (fontified t face font-lock-comment-delimiter-face) 459 478 (fontified t face font-lock-comment-face) 478 482 (fontified t) 482 485 (fontified t face font-lock-comment-delimiter-face) 485 491 (fontified t face font-lock-comment-delimiter-face) 491 497 (fontified t face font-lock-comment-delimiter-face) 497 535 (fontified t face font-lock-comment-face) 535 537 (fontified t face font-lock-comment-face) 537 538 (fontified t face font-lock-comment-face) 538 541 (fontified t face font-lock-comment-face) 541 566 (fontified t face font-lock-comment-face) 566 568 (fontified t face font-lock-comment-face) 568 572 (fontified t) 572 575 (fontified t face font-lock-comment-delimiter-face) 575 583 (fontified t face font-lock-comment-delimiter-face) 583 586 (fontified t face font-lock-comment-face) 586 589 (fontified t) 589 590 (fontified t) 590 593 (fontified t face font-lock-comment-delimiter-face) 593 598 (fontified t face font-lock-comment-delimiter-face) 598 601 (fontified t face font-lock-comment-delimiter-face) 601 613 (fontified t face font-lock-comment-face) 613 617 (fontified t) 617 620 (fontified t face font-lock-comment-delimiter-face) 620 624 (fontified t face font-lock-comment-delimiter-face) 624 627 (fontified t face font-lock-comment-face) 627 631 (fontified t) 631 634 (fontified t face font-lock-comment-delimiter-face) 634 638 (fontified t face font-lock-comment-delimiter-face) 638 647 (fontified t face font-lock-comment-face) 647 649 (fontified t face font-lock-comment-face) 649 654 (fontified t face font-lock-comment-face) 654 656 (fontified t face font-lock-comment-face) 656 660 (fontified t) 660 663 (fontified t face font-lock-comment-delimiter-face) 663 667 (fontified t face font-lock-comment-delimiter-face) 667 675 (fontified t face font-lock-comment-face) 675 684 (fontified t face font-lock-comment-face) 684 685 (fontified t face font-lock-comment-face) 685 689 (fontified t) 689 692 (fontified t face font-lock-comment-delimiter-face) 692 700 (fontified t face font-lock-comment-delimiter-face) 700 717 (fontified t face font-lock-comment-face) 717 718 (fontified t face font-lock-comment-face) 718 722 (fontified t) 722 725 (fontified t face font-lock-comment-delimiter-face) 725 729 (fontified t face font-lock-comment-delimiter-face) 729 730 (fontified t face font-lock-comment-delimiter-face) 730 733 (fontified t face font-lock-comment-delimiter-face) 733 741 (fontified t face font-lock-comment-face) 741 751 (fontified t face font-lock-comment-face) 751 752 (fontified t face font-lock-comment-face) 752 756 (fontified t) 756 759 (fontified t face font-lock-comment-delimiter-face) 759 764 (fontified t face font-lock-comment-delimiter-face) 764 765 (fontified t face font-lock-comment-delimiter-face) 765 767 (fontified t face font-lock-comment-delimiter-face) 767 768 (fontified t face font-lock-comment-face) 768 779 (fontified t face font-lock-comment-face) 779 806 (fontified t face font-lock-comment-face) 806 808 (fontified t face font-lock-comment-face) 808 809 (fontified t face font-lock-comment-face) 809 812 (fontified t face font-lock-comment-face) 812 825 (fontified t face font-lock-comment-face) 825 826 (fontified t face font-lock-comment-face) 826 832 (fontified t face font-lock-comment-face) 832 834 (fontified t face font-lock-comment-face) 834 838 (fontified t) 838 841 (fontified t face font-lock-comment-delimiter-face) 841 845 (fontified t face font-lock-comment-delimiter-face) 845 846 (fontified t face font-lock-comment-face) 846 847 (fontified t face font-lock-comment-face) 847 848 (fontified t face font-lock-comment-face) 848 851 (fontified t) 851 852 (fontified t) 852 855 (fontified t face font-lock-comment-delimiter-face) 855 858 (fontified t face font-lock-comment-face) 858 859 (fontified t face font-lock-comment-face) 859 860 (fontified t) 860 864 (fontified t) 864 867 (fontified t face font-lock-comment-delimiter-face) 867 872 (fontified t face font-lock-comment-face) 872 876 (fontified t) 876 879 (fontified t face font-lock-comment-delimiter-face) 879 886 (fontified t face font-lock-comment-face) 886 896 (fontified t face font-lock-comment-face) 896 900 (fontified t) 900 903 (fontified t face font-lock-comment-delimiter-face) 903 907 (fontified t face font-lock-comment-delimiter-face) 907 909 (fontified t face font-lock-comment-face) 909 916 (fontified t face font-lock-comment-face) 916 919 (fontified t face font-lock-comment-face) 919 923 (fontified t) 923 926 (fontified t face font-lock-comment-delimiter-face) 926 934 (fontified t face font-lock-comment-delimiter-face) 934 938 (fontified t face font-lock-comment-face) 938 943 (fontified t face font-lock-comment-face) 943 949 (fontified t face font-lock-comment-face) 949 951 (fontified t face font-lock-comment-face) 951 955 (fontified t face font-lock-comment-face) 955 962 (fontified t face font-lock-comment-face) 962 967 (fontified t face font-lock-comment-face) 967 969 (fontified t face font-lock-comment-face) 969 972 (fontified t face font-lock-comment-face) 972 979 (fontified t face font-lock-comment-face) 979 983 (fontified t) 983 986 (fontified t face font-lock-comment-delimiter-face) 986 998 (fontified t face font-lock-comment-delimiter-face) 998 1015 (fontified t face font-lock-comment-face) 1015 1022 (fontified t face font-lock-comment-face) 1022 1035 (fontified t face font-lock-comment-face) 1035 1037 (fontified t face font-lock-comment-face) 1037 1039 (fontified t face font-lock-comment-face) 1039 1040 (fontified t face font-lock-comment-face) 1040 1043 (fontified t face font-lock-comment-face) 1043 1056 (fontified t face font-lock-comment-face) 1056 1058 (fontified t face font-lock-comment-face) 1058 1062 (fontified t) 1062 1065 (fontified t face font-lock-comment-delimiter-face) 1065 1077 (fontified t face font-lock-comment-delimiter-face) 1077 1090 (fontified t face font-lock-comment-face) 1090 1094 (fontified t) 1094 1097 (fontified t face font-lock-comment-delimiter-face) 1097 1106 (fontified t face font-lock-comment-delimiter-face) 1106 1109 (fontified t face font-lock-comment-delimiter-face) 1109 1113 (fontified t face font-lock-comment-face) 1113 1121 (fontified t face font-lock-comment-face) 1121 1125 (fontified t) 1125 1128 (fontified t face font-lock-comment-delimiter-face) 1128 1136 (fontified t face font-lock-comment-delimiter-face) 1136 1141 (fontified t face font-lock-comment-face) 1141 1145 (fontified t) 1145 1148 (fontified t face font-lock-comment-delimiter-face) 1148 1149 (fontified t face font-lock-comment-delimiter-face) 1149 1156 (face font-lock-comment-delimiter-face fontified t) 1156 1164 (face font-lock-comment-face fontified t) 1164 1168 (face font-lock-comment-face fontified t) 1168 1176 (face font-lock-comment-face fontified t) 1176 1180 (face font-lock-comment-face fontified t) 1180 1185 (face font-lock-comment-face fontified t) 1185 1215 (face font-lock-comment-face fontified t) 1215 1219 (fontified t) 1219 1220 (fontified t face font-lock-comment-delimiter-face) 1220 1222 (fontified t face font-lock-comment-delimiter-face) 1222 1230 (fontified t face font-lock-comment-delimiter-face) 1230 1235 (fontified t face font-lock-comment-face) 1235 1239 (fontified t face font-lock-comment-face) 1239 1241 (fontified t face font-lock-comment-face) 1241 1250 (fontified t face font-lock-comment-face) 1250 1254 (fontified t face font-lock-comment-face) 1254 1261 (fontified t face font-lock-comment-face) 1261 1262 (fontified t face font-lock-comment-face) 1262 1266 (fontified t) 1266 1269 (fontified t face font-lock-comment-delimiter-face) 1269 1281 (fontified t face font-lock-comment-delimiter-face) 1281 1289 (fontified t face font-lock-comment-face) 1289 1297 (fontified t face font-lock-comment-face) 1297 1304 (fontified t face font-lock-comment-face) 1304 1319 (fontified t face font-lock-comment-face) 1319 1320 (fontified t face font-lock-comment-face) 1320 1322 (fontified t face font-lock-comment-face) 1322 1323 (fontified t face font-lock-comment-face) 1323 1326 (fontified t face font-lock-comment-face) 1326 1333 (fontified t face font-lock-comment-face) 1333 1346 (fontified t face font-lock-comment-face) 1346 1353 (fontified t face font-lock-comment-face) 1353 1357 (fontified t) 1357 1360 (fontified t face font-lock-comment-delimiter-face) 1360 1368 (fontified t face font-lock-comment-delimiter-face) 1368 1372 (fontified t face font-lock-comment-delimiter-face) 1372 1383 (fontified t face font-lock-comment-face) 1383 1390 (fontified t face font-lock-comment-face) 1390 1391 (fontified t face font-lock-comment-face) 1391 1395 (fontified t) 1395 1398 (fontified t face font-lock-comment-delimiter-face) 1398 1401 (fontified t face font-lock-comment-delimiter-face) 1401 1402 (fontified t face font-lock-comment-delimiter-face) 1402 1410 (fontified t face font-lock-comment-delimiter-face) 1410 1429 (fontified t face font-lock-comment-face) 1429 1433 (fontified t) 1433 1436 (fontified t face font-lock-comment-delimiter-face) 1436 1444 (fontified t face font-lock-comment-delimiter-face) 1444 1447 (fontified t face font-lock-comment-face) 1447 1450 (fontified t) 1450 1451 (fontified t) 1451 1454 (fontified t face font-lock-comment-delimiter-face) 1454 1462 (fontified t face font-lock-comment-delimiter-face) 1462 1468 (fontified t face font-lock-comment-face) 1468 1474 (fontified t face font-lock-comment-face) 1474 1475 (fontified t) 1475 1477 (fontified t) 1477 1478 (fontified t) 1478 1481 (fontified t face font-lock-comment-delimiter-face) 1481 1483 (fontified t face font-lock-comment-delimiter-face) 1483 1485 (fontified t face font-lock-comment-delimiter-face) 1485 1486 (fontified t face font-lock-comment-face) 1486 1488 (fontified t face font-lock-comment-face) 1488 1492 (fontified t) 1492 1493 (fontified t face font-lock-comment-delimiter-face) 1493 1495 (fontified t face font-lock-comment-delimiter-face) 1495 1496 (fontified t face font-lock-comment-delimiter-face) 1496 1499 (fontified t face font-lock-comment-delimiter-face) 1499 1500 (fontified t face font-lock-comment-face) 1500 1506 (fontified t face font-lock-comment-face) 1506 1508 (fontified t face font-lock-comment-face) 1508 1510 (fontified t face font-lock-comment-face) 1510 1512 (fontified t face font-lock-comment-face) 1512 1513 (fontified t face font-lock-comment-face) 1513 1515 (fontified t face font-lock-comment-face) 1515 1517 (fontified t face font-lock-comment-face) 1517 1521 (fontified t) 1521 1524 (fontified t face font-lock-comment-delimiter-face) 1524 1528 (fontified t face font-lock-comment-delimiter-face) 1528 1531 (fontified t face font-lock-comment-face) 1531 1536 (fontified t face font-lock-comment-face) 1536 1541 (fontified t face font-lock-comment-face) 1541 1544 (fontified t face font-lock-comment-face) 1544 1545 (fontified t face font-lock-comment-face) 1545 1546 (fontified t face font-lock-comment-face) 1546 1550 (fontified t) 1550 1553 (fontified t face font-lock-comment-delimiter-face) 1553 1561 (fontified t face font-lock-comment-delimiter-face) 1561 1565 (fontified t face font-lock-comment-face) 1565 1568 (fontified t face font-lock-comment-face) 1568 1579 (fontified t face font-lock-comment-face) 1579 1600 (fontified t face font-lock-comment-face) 1600 1601 (fontified t face font-lock-comment-face) 1601 1603 (fontified t face font-lock-comment-face) 1603 1604 (fontified t face font-lock-comment-face) 1604 1607 (fontified t face font-lock-comment-face) 1607 1612 (fontified t face font-lock-comment-face) 1612 1620 (fontified t face font-lock-comment-face) 1620 1621 (fontified t face font-lock-comment-face) 1621 1628 (fontified t face font-lock-comment-face) 1628 1629 (fontified t face font-lock-comment-face) 1629 1633 (fontified t) 1633 1636 (fontified t face font-lock-comment-delimiter-face) 1636 1642 (fontified t face font-lock-comment-delimiter-face) 1642 1643 (fontified t face font-lock-comment-delimiter-face) 1643 1644 (fontified t face font-lock-comment-delimiter-face) 1644 1657 (fontified t face font-lock-comment-face) 1657 1662 (fontified t face font-lock-comment-face) 1662 1663 (fontified t face font-lock-comment-face) 1663 1667 (fontified t) 1667 1670 (fontified t face font-lock-comment-delimiter-face) 1670 1676 (fontified t face font-lock-comment-delimiter-face) 1676 1677 (fontified t face font-lock-comment-delimiter-face) 1677 1678 (fontified t face font-lock-comment-delimiter-face) 1678 1694 (fontified t face font-lock-comment-face) 1694 1696 (fontified t face font-lock-comment-face) 1696 1700 (fontified t) 1700 1703 (fontified t face font-lock-comment-delimiter-face) 1703 1707 (fontified t face font-lock-comment-delimiter-face) 1707 1710 (fontified t face font-lock-comment-face) 1710 1714 (fontified t) 1714 1717 (fontified t face font-lock-comment-delimiter-face) 1717 1721 (fontified t face font-lock-comment-face)) . 5484) (undo-tree-id1673 . -1719) (undo-tree-id1674 . -1720) (undo-tree-id1675 . -1719) (undo-tree-id1676 . -9) (undo-tree-id1677 . -35) (undo-tree-id1678 . -17) (undo-tree-id1679 . -872) (undo-tree-id1680 . -876) (undo-tree-id1681 . -876) (undo-tree-id1682 . -900) (undo-tree-id1683 . -900) (undo-tree-id1684 . -923) (undo-tree-id1685 . -923) (undo-tree-id1686 . -983) (undo-tree-id1687 . -983) (undo-tree-id1688 . -1062) (undo-tree-id1689 . -1062) (undo-tree-id1690 . -1094) (undo-tree-id1691 . -1094) (undo-tree-id1692 . -1125) (undo-tree-id1693 . -1125) (undo-tree-id1694 . -1145) (undo-tree-id1695 . -1145) (undo-tree-id1696 . -1219) (undo-tree-id1697 . -1219) (undo-tree-id1698 . -1266) (undo-tree-id1699 . -1266) (undo-tree-id1700 . -1357) (undo-tree-id1701 . -1357) (undo-tree-id1702 . -1395) (undo-tree-id1703 . -1395) (undo-tree-id1704 . -1433) (undo-tree-id1705 . -1433) (undo-tree-id1706 . -1451) (undo-tree-id1707 . -1451) (undo-tree-id1708 . -1478) (undo-tree-id1709 . -1478) (undo-tree-id1710 . -1451) (undo-tree-id1711 . -1451) (undo-tree-id1712 . -1433) (undo-tree-id1713 . -1433) (undo-tree-id1714 . -1395) (undo-tree-id1715 . -1395) (undo-tree-id1716 . -1357) (undo-tree-id1717 . -1357) (undo-tree-id1718 . -1266) (undo-tree-id1719 . -1266) (undo-tree-id1720 . -1219) (undo-tree-id1721 . -1219) (undo-tree-id1722 . -1145) (undo-tree-id1723 . -1145) (undo-tree-id1724 . -1125) (undo-tree-id1725 . -1125) (undo-tree-id1726 . -1094) (undo-tree-id1727 . -1094) (undo-tree-id1728 . -1062) (undo-tree-id1729 . -1062) (undo-tree-id1730 . -983) (undo-tree-id1731 . -983) (undo-tree-id1732 . -923) (undo-tree-id1733 . -923) (undo-tree-id1734 . -900) (undo-tree-id1735 . -900) (undo-tree-id1736 . -876) (undo-tree-id1737 . -876) (undo-tree-id1738 . -876) (undo-tree-id1739 . -876) (undo-tree-id1740 . -900) (undo-tree-id1741 . -900) (undo-tree-id1742 . -923) (undo-tree-id1743 . -923) (undo-tree-id1744 . -983) (undo-tree-id1745 . -983) (undo-tree-id1746 . -1062) (undo-tree-id1747 . -1062) (undo-tree-id1748 . -1094) (undo-tree-id1749 . -1094) (undo-tree-id1750 . -1125) (undo-tree-id1751 . -1125) (undo-tree-id1752 . -1145) (undo-tree-id1753 . -1145) (undo-tree-id1754 . -1219) (undo-tree-id1755 . -1219) (undo-tree-id1756 . -1266) (undo-tree-id1757 . -1266) (undo-tree-id1758 . -1357) (undo-tree-id1759 . -1357) (undo-tree-id1760 . -1395) (undo-tree-id1761 . -1395) (undo-tree-id1762 . -1433) (undo-tree-id1763 . -1433) (undo-tree-id1764 . -1451) (undo-tree-id1765 . -1451) (undo-tree-id1766 . -1478) (undo-tree-id1767 . -1478) (undo-tree-id1768 . -1492) (undo-tree-id1769 . -1492) (undo-tree-id1770 . -1521) (undo-tree-id1771 . -1521) (undo-tree-id1772 . -1550) (undo-tree-id1773 . -1550) (undo-tree-id1774 . -1633) (undo-tree-id1775 . -1633) (undo-tree-id1776 . -1667) (undo-tree-id1777 . -1667) (undo-tree-id1778 . -1700) (undo-tree-id1779 . -1700) (undo-tree-id1780 . -1714) (undo-tree-id1781 . -1714) (undo-tree-id1782 . -9) (undo-tree-id1783 . -11) (undo-tree-id1784 . -11) (undo-tree-id1785 . -35) (undo-tree-id1786 . -35) (undo-tree-id1787 . -58) (undo-tree-id1788 . -58) (undo-tree-id1789 . -118) (undo-tree-id1790 . -118) (undo-tree-id1791 . -149) (undo-tree-id1792 . -149) (undo-tree-id1793 . -181) (undo-tree-id1794 . -181) (undo-tree-id1795 . -249) (undo-tree-id1796 . -249) (undo-tree-id1797 . -279) (undo-tree-id1798 . -279) (undo-tree-id1799 . -347) (undo-tree-id1800 . -347) (undo-tree-id1801 . -400) (undo-tree-id1802 . -400) (undo-tree-id1803 . -438) (undo-tree-id1804 . -438) (undo-tree-id1805 . -476) (undo-tree-id1806 . -476) (undo-tree-id1807 . -544) (undo-tree-id1808 . -544) (undo-tree-id1809 . -584) (undo-tree-id1810 . -584) (undo-tree-id1811 . -611) (undo-tree-id1812 . -611) (undo-tree-id1813 . -625) (undo-tree-id1814 . -625) (undo-tree-id1815 . -654) (undo-tree-id1816 . -654) (undo-tree-id1817 . -683) (undo-tree-id1818 . -683) (undo-tree-id1819 . -716) (undo-tree-id1820 . -716) (undo-tree-id1821 . -750) (undo-tree-id1822 . -750) (undo-tree-id1823 . -818) (undo-tree-id1824 . -818) (undo-tree-id1825 . -846) (undo-tree-id1826 . -846) (undo-tree-id1827 . -857) (undo-tree-id1828 . -857) (undo-tree-id1829 . -859) (undo-tree-id1830 . -859) (undo-tree-id1831 . -870) (undo-tree-id1832 . -870) (undo-tree-id1833 . -894) (undo-tree-id1834 . -894) (undo-tree-id1835 . -917) (undo-tree-id1836 . -917) (undo-tree-id1837 . -977) (undo-tree-id1838 . -977) (undo-tree-id1839 . -1045) (undo-tree-id1840 . -1045) (undo-tree-id1841 . -1088) (undo-tree-id1842 . -1088) (undo-tree-id1843 . -1119) (undo-tree-id1844 . -1119) (undo-tree-id1845 . -1139) (undo-tree-id1846 . -1139) (undo-tree-id1847 . -1119) (undo-tree-id1848 . -1119) (undo-tree-id1849 . -1088) (undo-tree-id1850 . -1088) (undo-tree-id1851 . -1045) (undo-tree-id1852 . -1045) (undo-tree-id1853 . -1088) (undo-tree-id1854 . -1088) (undo-tree-id1855 . -1119) (undo-tree-id1856 . -1119) (undo-tree-id1857 . -1139) (undo-tree-id1858 . -1139) (undo-tree-id1859 . -1207) (undo-tree-id1860 . -1207) (undo-tree-id1861 . -1260) (undo-tree-id1862 . -1260) (undo-tree-id1863 . -1328) (undo-tree-id1864 . -1328) (undo-tree-id1865 . -1389) (undo-tree-id1866 . -1389) (undo-tree-id1867 . -1427) (undo-tree-id1868 . -1427) (undo-tree-id1869 . -1445) (undo-tree-id1870 . -1445) (undo-tree-id1871 . -1472) (undo-tree-id1872 . -1472) (undo-tree-id1873 . -1486) (undo-tree-id1874 . -1486) (undo-tree-id1875 . -1515) (undo-tree-id1876 . -1515) (undo-tree-id1877 . -1544) (undo-tree-id1878 . -1544) (undo-tree-id1879 . -1612) (undo-tree-id1880 . -1612) (undo-tree-id1881 . -1661) (undo-tree-id1882 . -1661) (undo-tree-id1883 . -1694) (undo-tree-id1884 . -1694) (undo-tree-id1885 . -1708) (undo-tree-id1886 . -1708) (undo-tree-id1887 . -1719) (undo-tree-id1888 . -1719) (undo-tree-id1889 . -1721) (undo-tree-id1890 . -1721) (undo-tree-id1891 . -1719) (undo-tree-id1892 . -1719) (undo-tree-id1893 . -1721) (undo-tree-id1894 . -9) (undo-tree-id1895 . -1719) (undo-tree-id1896 . -1719) (undo-tree-id1897 . -1719) (undo-tree-id1898 . -1705) (undo-tree-id1899 . -1705) (undo-tree-id1900 . -1672) (undo-tree-id1901 . -1672) (undo-tree-id1902 . -1638) (undo-tree-id1903 . -1638) (undo-tree-id1904 . -1555) (undo-tree-id1905 . -1555) (undo-tree-id1906 . -1526) (undo-tree-id1907 . -1526) (undo-tree-id1908 . -1497) (undo-tree-id1909 . -1497) (undo-tree-id1910 . -1483) (undo-tree-id1911 . -1483) (undo-tree-id1912 . -1456) (undo-tree-id1913 . -1456) (undo-tree-id1914 . -1438) (undo-tree-id1915 . -1438) (undo-tree-id1916 . -1400) (undo-tree-id1917 . -1400) (undo-tree-id1918 . -1362) (undo-tree-id1919 . -1362) (undo-tree-id1920 . -1271) (undo-tree-id1921 . -1271) (undo-tree-id1922 . -1224) (undo-tree-id1923 . -1224) (undo-tree-id1924 . -1150) (undo-tree-id1925 . -1150) (undo-tree-id1926 . -1130) (undo-tree-id1927 . -1130) (undo-tree-id1928 . -1099) (undo-tree-id1929 . -1099) (undo-tree-id1930 . -1067) (undo-tree-id1931 . -1067) (undo-tree-id1932 . -988) (undo-tree-id1933 . -988) (undo-tree-id1934 . -928) (undo-tree-id1935 . -928) (undo-tree-id1936 . -905) (undo-tree-id1937 . -905) (undo-tree-id1938 . -881) (undo-tree-id1939 . -881) (undo-tree-id1940 . -869) (undo-tree-id1941 . -869) (undo-tree-id1942 . -859) (undo-tree-id1943 . -859) (undo-tree-id1944 . -857) (undo-tree-id1945 . -857) (undo-tree-id1946 . -843) (undo-tree-id1947 . -843) (undo-tree-id1948 . -761) (undo-tree-id1949 . -761) (undo-tree-id1950 . -727) (undo-tree-id1951 . -727) (undo-tree-id1952 . -694) (undo-tree-id1953 . -694) (undo-tree-id1954 . -665) (undo-tree-id1955 . -665) (undo-tree-id1956 . -636) (undo-tree-id1957 . -636) (undo-tree-id1958 . -622) (undo-tree-id1959 . -622) (undo-tree-id1960 . -595) (undo-tree-id1961 . -595) (undo-tree-id1962 . -577) (undo-tree-id1963 . -577) (undo-tree-id1964 . -487) (undo-tree-id1965 . -487) (undo-tree-id1966 . -449) (undo-tree-id1967 . -449) (undo-tree-id1968 . -411) (undo-tree-id1969 . -411) (undo-tree-id1970 . -364) (undo-tree-id1971 . -364) (undo-tree-id1972 . -290) (undo-tree-id1973 . -290) (undo-tree-id1974 . -270) (undo-tree-id1975 . -270) (undo-tree-id1976 . -192) (undo-tree-id1977 . -192) (undo-tree-id1978 . -160) (undo-tree-id1979 . -160) (undo-tree-id1980 . -129) (undo-tree-id1981 . -129) (undo-tree-id1982 . -69) (undo-tree-id1983 . -69) (undo-tree-id1984 . -46) (undo-tree-id1985 . -46) (undo-tree-id1986 . -22) (undo-tree-id1987 . -22) (undo-tree-id1988 . -9) (undo-tree-id1989 . -9) (undo-tree-id1990 . -9) (undo-tree-id1991 . -9) (undo-tree-id1992 . -9) (undo-tree-id1993 . -1721) 5493 (t 25822 34420 933894 66000)) nil (25822 34477 656147 469000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 5484) (undo-tree-id1671 . 1) (undo-tree-id1672 . -1)) nil (25822 34477 655781 121000) 0 nil])
([nil nil ((#("New " 0 4 (fontified t face font-lock-comment-face)) . 4691) (undo-tree-id1669 . -3) (undo-tree-id1670 . -4)) nil (25822 34477 655778 657000) 0 nil])
([nil nil ((#("New " 0 4 (fontified t face font-lock-comment-face)) . 3893) (undo-tree-id1667 . -3) (undo-tree-id1668 . -4)) nil (25822 34477 655775 381000) 0 nil])
([nil nil ((apply -48 5547 6295 undo--wrap-and-run-primitive-undo 5547 6295 ((6289 . 6292) (6270 . 6273) (6239 . 6242) (6217 . 6220) (6135 . 6138) (6093 . 6096) (6011 . 6014) (5960 . 5963) (5937 . 5940) (5881 . 5884) (5853 . 5856) (5797 . 5800) (5736 . 5739) (5654 . 5657) (5612 . 5615) (5555 . 5558) 6246))) nil (25822 34477 655763 488000) 0 nil])
([nil nil ((1574 . 1577) (#("4" 0 1 (fontified t)) . -1574) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) 1575 (t 25822 34477 660561 660000)) nil (25822 34723 151441 780000) 0 nil])
([nil nil ((1579 . 1580) (#("2" 0 1 (fontified t)) . 1579)) ((1579 . 1580) (#("1" 0 1 (fontified t)) . 1579)) (25822 34725 864533 11000) 0 nil])
([nil nil ((apply -9 3561 3746 undo--wrap-and-run-primitive-undo 3561 3746 ((3687 . 3690) (3649 . 3652) (3577 . 3580) 3722)) (t 25822 34727 177232 226000)) nil (25822 34836 373396 714000) 0 nil] [nil nil ((" / 2.0" . 3657) (undo-tree-id2007 . -5) (undo-tree-id2008 . -6) (undo-tree-id2009 . -6) (undo-tree-id2010 . -6) (undo-tree-id2011 . -6) (undo-tree-id2012 . -6) (undo-tree-id2013 . -6)) ((3657 . 3663) (t 25822 34709 127231 956000)) (25822 34724 657559 597000) 0 nil])
([nil nil ((3730 . 3733) 3703) nil (25822 34836 373395 692000) 0 nil])
nil
([nil nil ((3739 . 3750) (#("i" 0 1 (fontified t)) . -3739) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (3733 . 3740)) nil (25822 34836 373394 339000) 0 nil])
([nil nil ((3750 . 3753)) nil (25822 34836 373391 634000) 0 nil])
([nil nil ((3760 . 3771) (#("i" 0 1 (fontified t)) . -3760) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (3753 . 3761)) nil (25822 34836 373390 672000) 0 nil])
([nil nil ((3771 . 3774)) nil (25822 34836 373388 248000) 0 nil])
([nil nil ((3781 . 3792) (#("i" 0 1 (fontified t)) . -3781) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (3774 . 3782)) nil (25822 34836 373386 564000) 0 nil])
([nil nil ((3731 . 3747) (#("		" 0 2 (fontified t)) . 3731) (undo-tree-id2014 . -2) (undo-tree-id2015 . -2) (3751 . 3767) (#("		" 0 2 (fontified t)) . 3751) (undo-tree-id2016 . -2) (undo-tree-id2017 . -2) (3772 . 3788) (#("		" 0 2 (fontified t)) . 3772) (undo-tree-id2018 . -2) (undo-tree-id2019 . -2) 3792) nil (25822 34836 373380 223000) 0 nil])
([nil nil ((3772 . 3776) (#("i" 0 1 (fontified t)) . -3772) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (3763 . 3773) (t 25822 34836 377234 356000)) nil (25822 34870 742469 981000) 0 nil])
([nil nil ((3764 . 3765) (#("-" 0 1 (fontified t)) . 3764) (undo-tree-id2029 . -1) (t 25822 34863 557234 774000)) nil (25822 34873 309186 700000) 0 nil] [nil nil ((3764 . 3765) (#("-" 0 1 (fontified t)) . 3764) (undo-tree-id2028 . -1) (t 25822 34863 557234 774000)) ((3764 . 3765) (#(")" 0 1 (fontified t)) . 3764)) (25822 34870 742235 822000) 0 nil])
([nil nil ((3764 . 3765) (#("+" 0 1 (fontified t)) . 3764) (undo-tree-id2032 . -1) (t 25822 34873 313901 634000)) nil (25822 34894 81987 765000) 0 nil])
nil
([nil nil ((3855 . 3859) (#("i" 0 1 (fontified t)) . -3855) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (3846 . 3856)) nil (25822 36309 381436 438000) 0 nil])
([nil nil ((#("                // (grid.width as f32 + wall_width) / 2.0 + wall_width,
                // -wall_width / 2.0,
                // (grid.height as f32 + wall_width) / 2.0,
" 0 4 (fontified t) 4 16 (fontified t) 16 19 (fontified t face font-lock-comment-delimiter-face) 19 20 (fontified t face font-lock-comment-face) 20 31 (fontified t face font-lock-comment-face) 31 33 (fontified t face font-lock-comment-face) 33 34 (fontified t face font-lock-comment-face) 34 37 (fontified t face font-lock-comment-face) 37 38 (fontified t face font-lock-comment-face) 38 49 (fontified t face font-lock-comment-face) 49 50 (rear-nonsticky t fontified t face font-lock-comment-face) 50 70 (fontified t face font-lock-comment-face) 70 71 (fontified t face font-lock-comment-face) 71 72 (fontified t face font-lock-comment-face) 72 76 (fontified t) 76 88 (fontified t) 88 91 (fontified t face font-lock-comment-delimiter-face) 91 92 (fontified t face font-lock-comment-face) 92 102 (fontified t face font-lock-comment-face) 102 108 (fontified t face font-lock-comment-face) 108 109 (fontified t face font-lock-comment-face) 109 110 (fontified t face font-lock-comment-face) 110 114 (fontified t) 114 126 (fontified t) 126 129 (fontified t face font-lock-comment-delimiter-face) 129 130 (fontified t face font-lock-comment-face) 130 142 (fontified t face font-lock-comment-face) 142 144 (fontified t face font-lock-comment-face) 144 145 (fontified t face font-lock-comment-face) 145 148 (fontified t face font-lock-comment-face) 148 149 (fontified t face font-lock-comment-face) 149 160 (fontified t face font-lock-comment-face) 160 161 (rear-nonsticky t fontified t face font-lock-comment-face) 161 168 (fontified t face font-lock-comment-face) 168 169 (fontified t face font-lock-comment-face) 169 170 (fontified t face font-lock-comment-face)) . 3561) (undo-tree-id2067 . -155) (undo-tree-id2068 . -45) (undo-tree-id2069 . -155) (undo-tree-id2070 . -110) (undo-tree-id2071 . -155) (undo-tree-id2072 . -110) (undo-tree-id2073 . -155) (undo-tree-id2074 . -155) (undo-tree-id2075 . -155)) ((3561 . 3731)) (25822 36310 140402 638000) 0 nil])
([nil nil ((1580 . 1582)) ((#("00" 0 1 (fontified t) 1 2 (fontified t)) . 1580) (t 25822 36295 433924 339000)) (25822 36310 287479 891000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1575) (t 25822 36295 433924 339000)) ((1575 . 1576)) (25822 36310 970330 399000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1575)) ((1575 . 1576)) (25822 36311 159669 545000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1578)) ((1578 . 1579)) (25822 36311 537622 706000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1578)) ((1578 . 1579) (t 25822 36236 483923 439000)) (25822 36311 869615 640000) 0 nil])
([nil nil ((1574 . 1575) (#("1" 0 1 (fontified t)) . 1574) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1)) nil (25822 36316 465227 326000) 0 nil])
([nil nil ((1574 . 1575) (#("0" 0 1 (fontified t)) . 1574) (undo-tree-id2094 . -1) (t 25822 36316 470591 347000)) nil (25822 36324 517261 568000) 0 nil])
([nil nil ((1575 . 1589) (t 25822 36324 523924 804000)) nil (25823 27611 145463 632000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -1575) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (#("a" 0 1 (fontified t)) . -1576) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (#("a" 0 1 (fontified t)) . -1577) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (#("a" 0 1 (fontified t)) . -1578) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (#("a" 0 1 (fontified t)) . -1579) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (#("a" 0 1 (fontified t)) . -1580) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (#("a" 0 1 (fontified t)) . -1581) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (#("a" 0 1 (fontified t)) . -1582) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (#("a" 0 1 (fontified t)) . -1583) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (#("a" 0 1 (fontified t)) . -1584) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (#("a" 0 1 (fontified t)) . -1585) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (#("a" 0 1 (fontified t)) . -1586) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (#("a" 0 1 (fontified t)) . -1587) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (#("a" 0 1 (fontified t)) . -1588) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) 1589 (t 25823 27611 151582 299000)) nil (25823 27616 845547 305000) 0 nil])
([nil nil ((1575 . 1576) (#("t" 0 1 (fontified t)) . -1575) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (#("t" 0 1 (fontified t)) . -1576) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) 1577 (1575 . 1577) (t 25823 27616 851582 401000)) nil (25823 27692 585239 328000) 0 nil])
([nil nil ((1579 . 1580) (t 25823 27692 591583 647000)) nil (25823 27708 373623 863000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3076 . 3077) (#("
" 0 1 (fontified nil)) . -3531) (3068 . 3532) 3036 (t 25823 27708 381583 912000)) nil (25823 35009 13881 921000) 0 nil])
([nil nil ((3073 . 3082) (3068 . 3073) 3026) nil (25823 35009 13880 559000) 0 nil])
([nil nil ((#("            " 0 8 (fontified nil) 8 12 (fontified nil)) . -3354) (undo-tree-id2376 . -12) (undo-tree-id2377 . -12) (undo-tree-id2378 . -12) (undo-tree-id2379 . -12) (undo-tree-id2380 . -12) (undo-tree-id2381 . -12) (undo-tree-id2382 . -12) (3353 . 3354) (#("                " 0 16 (fontified nil)) . -3341) (undo-tree-id2383 . -12) (undo-tree-id2384 . -12) (3336 . 3341) (#("                " 0 16 (fontified nil)) . -3307) (undo-tree-id2385 . -12) (undo-tree-id2386 . -12) (3302 . 3307) (#("                " 0 16 (fontified nil)) . -3243) (undo-tree-id2387 . -12) (undo-tree-id2388 . -12) (3238 . 3243) (#("                " 0 16 (fontified nil)) . -3235) (undo-tree-id2389 . -12) (undo-tree-id2390 . -12) (3230 . 3235) (#("                    " 0 20 (fontified nil)) . -3219) (undo-tree-id2391 . -12) (undo-tree-id2392 . -12) (3217 . 3219) (#("                    " 0 20 (fontified nil)) . -3205) (undo-tree-id2393 . -12) (undo-tree-id2394 . -12) (3203 . 3205) (#("                    " 0 20 (fontified nil)) . -3201) (undo-tree-id2395 . -12) (undo-tree-id2396 . -12) (3199 . 3201) (#("                        " 0 10 (fontified nil) 10 11 (fontified nil) 11 24 (fontified nil)) . -3187) (undo-tree-id2397 . -12) (undo-tree-id2398 . -12) (3181 . 3187) (#("                        " 0 15 (fontified nil) 15 16 (fontified nil) 16 24 (fontified nil)) . -3167) (undo-tree-id2399 . -12) (undo-tree-id2400 . -12) (3161 . 3167) (#("                    " 0 20 (fontified nil)) . -3142) (undo-tree-id2401 . -12) (undo-tree-id2402 . -12) (3140 . 3142) (#("                " 0 16 (fontified nil)) . -3122) (undo-tree-id2403 . -12) (undo-tree-id2404 . -12) (3117 . 3122) (#("            " 0 4 (fontified nil) 4 8 (fontified nil) 8 12 (fontified nil)) . -3105) (undo-tree-id2405 . -12) (undo-tree-id2406 . -12) (3104 . 3105) (#("        " 0 7 (fontified nil) 7 8 (rear-nonsticky t fontified nil)) . -3087) (undo-tree-id2407 . -8) (undo-tree-id2408 . -8) (3083 . 3087) 3543) nil (25823 35009 13876 691000) 0 nil])
([nil nil ((3355 . 3357) (3353 . 3354) (#("   " 0 3 (fontified nil)) . 3353) (undo-tree-id2334 . -3) (undo-tree-id2335 . -3) (3353 . 3357) (#("	" 0 1 (fontified t)) . -3353) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (#("	" 0 1 (fontified t)) . -3354) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) 3355 (3353 . 3355) (#("	" 0 1 (fontified t)) . -3353) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (#("	" 0 1 (fontified t)) . -3354) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) 3355 (3353 . 3355) (#("	" 0 1 (fontified t)) . -3353) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (#("," 0 1 (fontified t)) . -3354) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) 3355 (#("}" 0 1 (fontified t)) . -3354) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . 1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) 3355) nil (25823 35009 13853 498000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -3357) (3353 . 3357) 3356) nil (25823 35009 13829 32000) 0 nil])
([nil nil ((#("position.clone()," 0 16 (fontified t) 16 17 (fontified t)) . 3318) (undo-tree-id2331 . -16) (undo-tree-id2332 . -17) (undo-tree-id2333 . -17)) nil (25823 35009 13827 730000) 0 nil])
([nil nil ((3337 . 3338) (3329 . 3337) (#("fro" 0 3 (fontified t)) . -3329) (undo-tree-id2301 . -3) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -2) (undo-tree-id2307 . -2) (undo-tree-id2308 . -3) (undo-tree-id2309 . -3) (undo-tree-id2310 . -3) (undo-tree-id2311 . -3) (undo-tree-id2312 . -3) (undo-tree-id2313 . -3) (undo-tree-id2314 . -3) (undo-tree-id2315 . -3) (undo-tree-id2316 . -3) (undo-tree-id2317 . -3) (undo-tree-id2318 . -3) (undo-tree-id2319 . -3) (undo-tree-id2320 . -3) 3332 (3327 . 3332) (3318 . 3327) (#("Tran" 0 4 (fontified t face font-lock-type-face)) . -3318) (undo-tree-id2321 . -4) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -2) (undo-tree-id2325 . -2) (undo-tree-id2326 . -3) (undo-tree-id2327 . -3) (undo-tree-id2328 . -4) (undo-tree-id2329 . -4) (undo-tree-id2330 . -4) 3322 (3318 . 3322)) nil (25823 35009 13822 860000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3354 . 3355) (#("
" 0 1 (fontified nil)) . -3483) (3338 . 3484) 3337) nil (25823 35009 13803 865000) 0 nil])
([nil nil ((#("-wall_width / 2.0" 0 17 (fontified t)) . 3402) (undo-tree-id2299 . -16) (undo-tree-id2300 . -17)) nil (25823 35009 13801 641000) 0 nil])
([nil nil ((3402 . 3405)) nil (25823 35009 13788 225000) 0 nil])
([nil nil ((3493 . 3494) (t 25823 35009 25062 674000)) nil (25823 35017 132402 322000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 3102) (3104 . 3113) (#("	" 0 1 (fontified t)) . 3104) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (3117 . 3122) (#("	" 0 1 (fontified t)) . 3117) (3122 . 3125) (3140 . 3156) (#("		" 0 2 (fontified t)) . 3140) (undo-tree-id2411 . -2) (undo-tree-id2412 . -2) (3161 . 3165) (#("		" 0 2 (fontified t)) . 3161) (3167 . 3179) (3181 . 3189) (#("		" 0 2 (fontified t)) . 3181) (3187 . 3195) (3199 . 3215) (#("		" 0 2 (fontified t)) . 3199) (undo-tree-id2413 . -2) (undo-tree-id2414 . -2) (undo-tree-id2415 . -2) (undo-tree-id2416 . -2) (3203 . 3219) (#("		" 0 2 (fontified t)) . 3203) (undo-tree-id2417 . -2) (undo-tree-id2418 . -2) (3217 . 3233) (#("		" 0 2 (fontified t)) . 3217) (undo-tree-id2419 . -2) (undo-tree-id2420 . -2) (3230 . 3232) (#("	" 0 1 (fontified t)) . 3230) (3235 . 3241) (3238 . 3242) (#("	" 0 1 (fontified t)) . 3238) (3243 . 3247) (3302 . 3308) (#("	" 0 1 (fontified t)) . 3302) (3307 . 3309) (3470 . 3478) (#("	" 0 1 (fontified t)) . 3470) (3491 . 3495) (3493 . 3499)) nil (25823 35017 132395 529000) 0 nil])
([nil nil ((#("    // Camera
    commands.spawn(
        (PbrBundle {
            mesh: meshes.add(
                shape::Icosphere {
                    radius: 0.25,
                    ..default()
                }
                .try_into()
                .unwrap(),
            ),
            material: materials.add(Color::rgb(0.2, 0.5, 0.5).into()),
            transform: Transform::from_xyz(
                maze_width / 2.0 - wall_width,
                0.0,
                maze_height / 2.0 - wall_width,
            ),
            ..default()
        }),
    );
" 0 4 (fontified t) 4 7 (fontified t face font-lock-comment-delimiter-face) 7 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 18 (fontified t) 18 33 (fontified t) 33 34 (fontified t) 34 43 (fontified t) 43 52 (fontified t face font-lock-type-face) 52 55 (fontified t) 55 60 (fontified t) 60 64 (fontified t) 64 67 (fontified t) 67 71 (fontified t face font-lock-variable-name-face) 71 84 (fontified t) 84 85 (fontified t) 85 101 (fontified t) 101 106 (fontified t face font-lock-constant-face) 106 108 (fontified t) 108 117 (fontified t face font-lock-type-face) 117 118 (fontified t) 118 119 (fontified t) 119 120 (fontified t) 120 124 (fontified t) 124 128 (fontified t) 128 140 (fontified t) 140 146 (fontified t face font-lock-variable-name-face) 146 153 (fontified t) 153 154 (fontified t) 154 162 (fontified t) 162 166 (fontified t) 166 174 (fontified t) 174 185 (fontified t) 185 186 (fontified t) 186 202 (fontified t) 202 203 (fontified t) 203 204 (fontified t) 204 220 (fontified t) 220 221 (fontified t) 221 231 (fontified t) 231 232 (fontified t) 232 248 (fontified t) 248 257 (fontified t) 257 259 (fontified t) 259 261 (fontified t) 261 265 (fontified t) 265 271 (fontified t) 271 273 (fontified t) 273 274 (fontified t) 274 278 (fontified t) 278 282 (fontified t) 282 286 (fontified t) 286 294 (fontified t face font-lock-variable-name-face) 294 310 (fontified t) 310 315 (fontified t face font-lock-type-face) 315 321 (fontified t) 321 322 (fontified t) 322 323 (fontified t) 323 324 (fontified t) 324 328 (fontified t) 328 329 (fontified t) 329 333 (fontified t) 333 334 (fontified t) 334 345 (fontified t) 345 351 (fontified t) 351 355 (fontified t) 355 357 (fontified t) 357 366 (fontified t face font-lock-variable-name-face) 366 368 (fontified t) 368 377 (fontified t face font-lock-type-face) 377 379 (fontified t) 379 388 (fontified t) 388 389 (fontified t) 389 404 (fontified t) 404 405 (rear-nonsticky t fontified t) 405 422 (fontified t) 422 423 (fontified t) 423 436 (fontified t) 436 455 (fontified t) 455 457 (fontified t) 457 473 (fontified t) 473 504 (fontified t) 504 505 (fontified t) 505 509 (fontified t) 509 517 (fontified t) 517 519 (fontified t) 519 520 (fontified t) 520 528 (fontified t) 528 532 (fontified t) 532 544 (fontified t) 544 548 (fontified t) 548 552 (fontified t) 552 554 (fontified t) 554 560 (fontified t) 560 562 (fontified t) 562 563 (fontified t)) . 3069) (undo-tree-id2421 . -562) (undo-tree-id2422 . -562) (undo-tree-id2423 . 2) (undo-tree-id2424 . -10) (undo-tree-id2425 . -562) (undo-tree-id2426 . -34) (undo-tree-id2427 . -34) (undo-tree-id2428 . -85) (undo-tree-id2429 . -85) (undo-tree-id2430 . -186) (undo-tree-id2431 . -186) (undo-tree-id2432 . -204) (undo-tree-id2433 . -204) (undo-tree-id2434 . -232) (undo-tree-id2435 . -232) (undo-tree-id2436 . -186) (undo-tree-id2437 . -186) (undo-tree-id2438 . -554) (undo-tree-id2439 . -554) (undo-tree-id2440 . -44) (undo-tree-id2441 . -562) (undo-tree-id2442 . -554) (undo-tree-id2443 . -554) (undo-tree-id2444 . -554) (undo-tree-id2445 . -42) (undo-tree-id2446 . -43) (undo-tree-id2447 . -42) (undo-tree-id2448 . -43) (undo-tree-id2449 . -405) (undo-tree-id2450 . -415) (undo-tree-id2451 . -405) (undo-tree-id2452 . -415) (undo-tree-id2453 . -473) (undo-tree-id2454 . -484) (undo-tree-id2455 . -473) (undo-tree-id2456 . -484) (undo-tree-id2457 . -553) (undo-tree-id2458 . -554) (undo-tree-id2459 . -553) (undo-tree-id2460 . -554) (undo-tree-id2461 . -554) (undo-tree-id2462 . -554) (undo-tree-id2463 . -554) (undo-tree-id2464 . -554) (undo-tree-id2465 . -530) (undo-tree-id2466 . -530) (undo-tree-id2467 . -515) (undo-tree-id2468 . -515) (undo-tree-id2469 . -467) (undo-tree-id2470 . -467) (undo-tree-id2471 . -446) (undo-tree-id2472 . -446) (undo-tree-id2473 . -399) (undo-tree-id2474 . -399) (undo-tree-id2475 . -355) (undo-tree-id2476 . -355) (undo-tree-id2477 . -284) (undo-tree-id2478 . -284) (undo-tree-id2479 . -269) (undo-tree-id2480 . -269) (undo-tree-id2481 . -242) (undo-tree-id2482 . -242) (undo-tree-id2483 . -214) (undo-tree-id2484 . -214) (undo-tree-id2485 . -196) (undo-tree-id2486 . -196) (undo-tree-id2487 . -164) (undo-tree-id2488 . -164) (undo-tree-id2489 . -130) (undo-tree-id2490 . -130) (undo-tree-id2491 . -95) (undo-tree-id2492 . -95) (undo-tree-id2493 . -65) (undo-tree-id2494 . -65) (undo-tree-id2495 . -44) (undo-tree-id2496 . -44) (undo-tree-id2497 . -44) (undo-tree-id2498 . -44) (undo-tree-id2499 . -24) (undo-tree-id2500 . -24) (undo-tree-id2501 . -24) (undo-tree-id2502 . -24) (undo-tree-id2503 . -24) (undo-tree-id2504 . -24) (undo-tree-id2505 . -10) (undo-tree-id2506 . -10) (undo-tree-id2507 . -563) (undo-tree-id2508 . -10) (undo-tree-id2509 . -562) (undo-tree-id2510 . -10) (undo-tree-id2511 . -10) (undo-tree-id2512 . -24) (undo-tree-id2513 . -24) (undo-tree-id2514 . -44) (undo-tree-id2515 . -44) (undo-tree-id2516 . -65) (undo-tree-id2517 . -65) (undo-tree-id2518 . -95) (undo-tree-id2519 . -95) (undo-tree-id2520 . -130) (undo-tree-id2521 . -130) (undo-tree-id2522 . -164) (undo-tree-id2523 . -164) (undo-tree-id2524 . -196) (undo-tree-id2525 . -196) (undo-tree-id2526 . -214) (undo-tree-id2527 . -214) (undo-tree-id2528 . -242) (undo-tree-id2529 . -242) (undo-tree-id2530 . -269) (undo-tree-id2531 . -269) (undo-tree-id2532 . -284) (undo-tree-id2533 . -284) (undo-tree-id2534 . -355) (undo-tree-id2535 . -355) (undo-tree-id2536 . -399) (undo-tree-id2537 . -399) (undo-tree-id2538 . -446) (undo-tree-id2539 . -446) (undo-tree-id2540 . -467) (undo-tree-id2541 . -467) (undo-tree-id2542 . -515) (undo-tree-id2543 . -515) (undo-tree-id2544 . -530) (undo-tree-id2545 . -530) (undo-tree-id2546 . -554) (undo-tree-id2547 . -554) (undo-tree-id2548 . -556) (undo-tree-id2549 . -562) (undo-tree-id2550 . -562) (undo-tree-id2551 . -562) (undo-tree-id2552 . -563) 3631 (t 25823 35017 141729 503000)) nil (25823 35032 323179 7000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3859 . 3860) (#("
" 0 1 (fontified nil)) . -4418) (3855 . 4419) 3848) nil (25823 35032 323101 331000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 3898) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . 1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (t 25823 35032 331729 796000)) nil (25823 35076 728647 885000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 4408) (undo-tree-id2603 . 1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1)) nil (25823 35076 728643 887000) 0 nil])
([nil nil ((4309 . 4311) (#("0" 0 1 (fontified t)) . -4309) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) 4310) nil (25823 35076 728640 80000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1575) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1)) nil (25823 35076 728634 269000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 1578) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1)) nil (25823 35076 728631 624000) 0 nil])
([nil nil ((#("
        " 0 1 (fontified t) 1 9 (fontified t)) . 3887) (undo-tree-id2553 . -5) (undo-tree-id2554 . -5) (undo-tree-id2555 . -5) (undo-tree-id2556 . -5) (undo-tree-id2557 . -5) (undo-tree-id2558 . -5) (undo-tree-id2559 . -5) (undo-tree-id2560 . -5) (undo-tree-id2561 . -5) (undo-tree-id2562 . -5) (undo-tree-id2563 . -5) (undo-tree-id2564 . -5) (undo-tree-id2565 . -5) (undo-tree-id2566 . -5) (undo-tree-id2567 . -5) (undo-tree-id2568 . -5) (undo-tree-id2569 . -5) (undo-tree-id2570 . -9) (#(" " 0 1 (fontified t)) . 3908) (#("   " 0 3 (fontified t)) . 3917) (#("  " 0 2 (fontified t)) . 3938) (#("  " 0 2 (fontified t)) . 3952) (#("   " 0 3 (fontified t)) . 3973) (#(" " 0 1 (fontified t)) . 3992) (#("    " 0 4 (fontified t)) . 4007) (undo-tree-id2571 . -4) (undo-tree-id2572 . -4) (undo-tree-id2573 . -4) (undo-tree-id2574 . -4) (#("    " 0 4 (fontified t)) . 4051) (undo-tree-id2575 . -4) (undo-tree-id2576 . -4) (#(" " 0 1 (fontified t)) . 4057) (#("   " 0 3 (fontified t)) . 4070) (#("  " 0 2 (fontified t)) . 4085) (#("  " 0 2 (fontified t)) . 4099) (#("   " 0 2 (fontified t) 2 3 (fontified t)) . 4112) (#(" " 0 1 (fontified t)) . 4123) (#("    " 0 4 (fontified t)) . 4127) (undo-tree-id2577 . -4) (undo-tree-id2578 . -4) (undo-tree-id2579 . -4) (undo-tree-id2580 . -4) (#("    " 0 2 (fontified t) 2 4 (fontified t)) . 4206) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (#(" " 0 1 (fontified t)) . 4242) (#("   " 0 2 (fontified t) 2 3 (rear-nonsticky t fontified t)) . 4255) (#("  " 0 2 (fontified t)) . 4289) (#("  " 0 2 (fontified t)) . 4303) ("   " . 4311) (" " . 4326) ("    " . 4359) (undo-tree-id2585 . -4) (undo-tree-id2586 . -4) (undo-tree-id2587 . -4) (undo-tree-id2588 . -4) ("    " . 4382) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (" " . 4398) ("   " . 4403) (undo-tree-id2591 . -3) (undo-tree-id2592 . -3) (",
    " . 4407) 1578) nil (25823 35144 612390 106000) 0 nil])
([nil nil ((4198 . 4202) (4193 . 4198) (4193 . 4194) (#("            maze_width / 2.0 - wall_width,
" 0 12 (fontified t) 12 29 (fontified t) 29 30 (fontified t) 30 43 (fontified t)) . 4193) (undo-tree-id2652 . -42) (undo-tree-id2653 . -33) (undo-tree-id2654 . -33) (undo-tree-id2655 . -33) (undo-tree-id2656 . -33) (undo-tree-id2657 . -33) (undo-tree-id2658 . -33) (undo-tree-id2659 . -33) (undo-tree-id2660 . -33) (undo-tree-id2661 . -43) (undo-tree-id2662 . -43) 4226 (t 25823 35076 738397 237000)) nil (25823 35152 648019 258000) 0 nil] [nil nil ((3561 . 3563) (3559 . 3561) (3559 . 3560) (#("                maze_width / 2.0 - wall_width,
" 0 16 (fontified t) 16 33 (fontified t) 33 34 (fontified t) 34 47 (fontified t)) . 3559) (undo-tree-id2613 . -46) (undo-tree-id2614 . -33) (undo-tree-id2615 . -33) (undo-tree-id2616 . -33) (undo-tree-id2617 . -33) (undo-tree-id2618 . -33) (undo-tree-id2619 . -33) (undo-tree-id2620 . -33) (undo-tree-id2621 . -33) (undo-tree-id2622 . -33) (undo-tree-id2623 . -33) (undo-tree-id2624 . -47) (undo-tree-id2625 . -47) 3592 (t 25823 35076 738397 237000)) ((3559 . 3606) (#("
" 0 1 (fontified nil)) . 3559) (undo-tree-id2626 . 1) (#("		" 0 2 (fontified nil)) . 3559) (undo-tree-id2627 . -2) (undo-tree-id2628 . -2) (#("0." 0 2 (fontified t)) . 3561) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1)) (25823 35144 612096 766000) 0 nil])
([nil nil ((4226 . 4230) (4221 . 4226) (4221 . 4222) (#("            maze_height / 2.0 - wall_width,
" 0 12 (fontified t) 12 43 (fontified t) 43 44 (fontified t)) . 4221) (undo-tree-id2645 . -43) (undo-tree-id2646 . -15) (undo-tree-id2647 . -15) (undo-tree-id2648 . -15) (undo-tree-id2649 . -15) (undo-tree-id2650 . -44) (undo-tree-id2651 . -44) 4236) nil (25823 35152 648011 32000) 0 nil])
nil
([nil nil ((#("
	    " 0 1 (fontified t) 1 6 (fontified t)) . 4192) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -6) (undo-tree-id2638 . -6) (#("
          " 0 1 (fontified t) 1 11 (fontified t)) . 4202) (#(" " 0 1 (fontified t)) . 4214) (#("
	 " 0 1 (fontified t) 1 3 (fontified t)) . 4220) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (#("  " 0 2 (fontified t)) . 4224) (#(",
        " 0 1 (fontified t) 1 2 (fontified t) 2 10 (fontified t)) . 4229) (undo-tree-id2644 . 9)) nil (25823 35152 648001 264000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4240 . 4241) (#("
" 0 1 (fontified nil)) . -4605) (4236 . 4606) 4235 (t 25823 35152 655065 97000)) nil (25823 39315 477152 782000) 0 nil])
([nil nil ((apply -39 3868 4307 undo--wrap-and-run-primitive-undo 3868 4307 ((4269 . 4272) (4246 . 4249) (4187 . 4190) (4117 . 4120) (4103 . 4106) (4077 . 4080) (4050 . 4053) (4033 . 4036) (4002 . 4005) (3969 . 3972) (3935 . 3938) (3906 . 3909) (3872 . 3875) 3868))) nil (25823 39315 477150 999000) 0 nil])
([nil nil ((4357 . 4359) (#("s" 0 1 (fontified t face font-lock-type-face)) . -4357) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (#("e" 0 1 (fontified t face font-lock-type-face)) . -4358) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) 4359 (4351 . 4359) (#("a" 0 1 (fontified t)) . -4351) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (#("C" 0 1 (fontified t)) . -4352) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) 4353 (4351 . 4353) (#(":" 0 1 (fontified t)) . -4351) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) 4352 (#("Icosphere" 0 9 (fontified t face font-lock-type-face)) . 4352) (undo-tree-id2685 . -8) (undo-tree-id2686 . -9) (undo-tree-id2687 . -9)) nil (25823 39315 477144 987000) 0 nil])
([nil nil ((#("    // commands.spawn(PbrBundle {
    //     mesh: meshes.add(
    //         shape::Icosphere {
    //             radius: 0.25,
    //             ..default()
    //         }
    //         .try_into()
    //         .unwrap(),
    //     ),
    //     material: materials.add(Color::rgb(0.2, 0.5, 0.5).into()),
    //     transform: Transform::from_xyz(0.5, 0.25, 0.5),
    //     ..default()
    // });
" 0 4 (fontified t) 4 7 (fontified t face font-lock-comment-delimiter-face) 7 22 (fontified t face font-lock-comment-face) 22 31 (fontified t face font-lock-comment-face) 31 34 (fontified t face font-lock-comment-face) 34 38 (fontified t) 38 41 (fontified t face font-lock-comment-delimiter-face) 41 45 (fontified t face font-lock-comment-delimiter-face) 45 49 (fontified t face font-lock-comment-face) 49 62 (fontified t face font-lock-comment-face) 62 63 (fontified t face font-lock-comment-face) 63 67 (fontified t) 67 70 (fontified t face font-lock-comment-delimiter-face) 70 78 (fontified t face font-lock-comment-delimiter-face) 78 83 (fontified t face font-lock-comment-face) 83 85 (fontified t face font-lock-comment-face) 85 94 (fontified t face font-lock-comment-face) 94 95 (fontified t face font-lock-comment-face) 95 96 (fontified t face font-lock-comment-face) 96 97 (fontified t face font-lock-comment-face) 97 98 (fontified t) 98 101 (fontified t) 101 104 (fontified t face font-lock-comment-delimiter-face) 104 105 (fontified t face font-lock-comment-delimiter-face) 105 116 (fontified t face font-lock-comment-delimiter-face) 116 122 (fontified t face font-lock-comment-face) 122 129 (fontified t face font-lock-comment-face) 129 130 (fontified t face font-lock-comment-face) 130 134 (fontified t) 134 137 (fontified t face font-lock-comment-delimiter-face) 137 141 (fontified t face font-lock-comment-delimiter-face) 141 149 (fontified t face font-lock-comment-delimiter-face) 149 160 (fontified t face font-lock-comment-face) 160 161 (fontified t face font-lock-comment-face) 161 165 (fontified t) 165 168 (fontified t face font-lock-comment-delimiter-face) 168 176 (fontified t face font-lock-comment-delimiter-face) 176 177 (fontified t face font-lock-comment-face) 177 178 (fontified t face font-lock-comment-face) 178 182 (fontified t) 182 185 (fontified t face font-lock-comment-delimiter-face) 185 193 (fontified t face font-lock-comment-delimiter-face) 193 194 (fontified t face font-lock-comment-face) 194 204 (fontified t face font-lock-comment-face) 204 205 (fontified t face font-lock-comment-face) 205 209 (fontified t) 209 212 (fontified t face font-lock-comment-delimiter-face) 212 220 (fontified t face font-lock-comment-delimiter-face) 220 229 (fontified t face font-lock-comment-face) 229 231 (fontified t face font-lock-comment-face) 231 234 (fontified t) 234 235 (fontified t) 235 238 (fontified t face font-lock-comment-delimiter-face) 238 242 (fontified t face font-lock-comment-delimiter-face) 242 244 (fontified t face font-lock-comment-face) 244 245 (fontified t face font-lock-comment-face) 245 249 (fontified t) 249 252 (fontified t face font-lock-comment-delimiter-face) 252 256 (fontified t face font-lock-comment-delimiter-face) 256 264 (fontified t face font-lock-comment-face) 264 280 (fontified t face font-lock-comment-face) 280 285 (fontified t face font-lock-comment-face) 285 291 (fontified t face font-lock-comment-face) 291 292 (fontified t face font-lock-comment-face) 292 293 (fontified t face font-lock-comment-face) 293 294 (fontified t face font-lock-comment-face) 294 298 (fontified t face font-lock-comment-face) 298 299 (fontified t face font-lock-comment-face) 299 303 (fontified t face font-lock-comment-face) 303 304 (fontified t face font-lock-comment-face) 304 315 (fontified t face font-lock-comment-face) 315 319 (fontified t) 319 322 (fontified t face font-lock-comment-delimiter-face) 322 324 (fontified t face font-lock-comment-delimiter-face) 324 326 (fontified t face font-lock-comment-delimiter-face) 326 335 (fontified t face font-lock-comment-face) 335 337 (fontified t face font-lock-comment-face) 337 346 (fontified t face font-lock-comment-face) 346 348 (fontified t face font-lock-comment-face) 348 357 (fontified t face font-lock-comment-face) 357 361 (fontified t face font-lock-comment-face) 361 366 (fontified t face font-lock-comment-face) 366 367 (fontified t face font-lock-comment-face) 367 371 (fontified t face font-lock-comment-face) 371 373 (fontified t face font-lock-comment-face) 373 374 (fontified t face font-lock-comment-face) 374 378 (fontified t) 378 381 (fontified t face font-lock-comment-delimiter-face) 381 385 (fontified t face font-lock-comment-delimiter-face) 385 397 (fontified t face font-lock-comment-face) 397 400 (fontified t) 400 401 (fontified t) 401 404 (fontified t face font-lock-comment-delimiter-face) 404 405 (fontified t face font-lock-comment-face) 405 407 (fontified t face font-lock-comment-face) 407 408 (fontified t face font-lock-comment-face)) . 3868) (undo-tree-id2688 . -406) (undo-tree-id2689 . -407) (undo-tree-id2690 . -406) (undo-tree-id2691 . -9) (undo-tree-id2692 . -357) (undo-tree-id2693 . -357) (undo-tree-id2694 . -357) (undo-tree-id2695 . -357) (undo-tree-id2696 . -357) (undo-tree-id2697 . -357) (undo-tree-id2698 . -9) (undo-tree-id2699 . -406) (undo-tree-id2700 . -406) (undo-tree-id2701 . -408) (undo-tree-id2702 . -9) (undo-tree-id2703 . -406) (undo-tree-id2704 . -406) (undo-tree-id2705 . -406) (undo-tree-id2706 . -383) (undo-tree-id2707 . -383) (undo-tree-id2708 . -324) (undo-tree-id2709 . -324) (undo-tree-id2710 . -254) (undo-tree-id2711 . -254) (undo-tree-id2712 . -240) (undo-tree-id2713 . -240) (undo-tree-id2714 . -214) (undo-tree-id2715 . -214) (undo-tree-id2716 . -187) (undo-tree-id2717 . -187) (undo-tree-id2718 . -170) (undo-tree-id2719 . -170) (undo-tree-id2720 . -139) (undo-tree-id2721 . -139) (undo-tree-id2722 . -106) (undo-tree-id2723 . -106) (undo-tree-id2724 . -72) (undo-tree-id2725 . -72) (undo-tree-id2726 . -43) (undo-tree-id2727 . -43) (undo-tree-id2728 . -9) (undo-tree-id2729 . -9) (undo-tree-id2730 . -9) (undo-tree-id2731 . -408) 3877 (t 25823 39315 485141 873000)) nil (25823 40580 599034 459000) 0 nil])
([nil nil ((1574 . 1576) (#("1" 0 1 (fontified t)) . -1574) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) 1575 (t 25823 40580 608495 680000)) nil (25823 40598 427484 231000) 0 nil])
([nil current ((1578 . 1580) (#("1" 0 1 (fontified t)) . -1578) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) 1579) nil (25823 40598 427476 957000) 0 nil])
nil
