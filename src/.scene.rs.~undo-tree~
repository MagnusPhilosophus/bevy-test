(undo-tree-save-format-version . 1)
"25404bc16acfaceb68aa6a2886ed309e1bb478e2"
[nil nil nil nil (25817 8746 448131 237000) 0 nil]
([nil nil ((nil rear-nonsticky nil 1 . 2) (#("
" 0 1 (fontified nil)) . -2890) (1 . 2891) (t 25817 8623 286059 407000)) nil (25817 8746 448129 434000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1)) nil (25817 8746 448127 310000) 0 nil])
([nil nil ((1 . 2) (1 . 2)) nil (25817 8746 448123 553000) 0 nil])
([nil nil ((6 . 22) (1 . 6)) nil (25817 8746 448121 689000) 0 nil])
([nil nil ((2936 . 2938) (2933 . 2936) (#("i" 0 1 (fontified t face font-lock-type-face)) . -2933) (undo-tree-id137 . -1) (2927 . 2934) (#("e" 0 1 (fontified t face font-lock-type-face)) . -2927) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) 2928 (2924 . 2928) (#("s" 0 1 (fontified t face font-lock-type-face)) . -2924) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) 2925 (2913 . 2925) (#("
" 0 1 (fontified t)) . -2913) (undo-tree-id147 . -1) (undo-tree-id148 . 1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) 2914 (2913 . 2914) (2912 . 2913) 2912) nil (25817 8746 448118 574000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2938 . 2939) (#("
" 0 1 (fontified nil)) . -3124) (2938 . 3125)) nil (25817 8746 448089 609000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 2938) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1)) nil (25817 8746 448087 826000) 0 nil])
([nil nil ((2954 . 2959) (#("Maze" 0 4 (fontified t face font-lock-type-face)) . 2954) (undo-tree-id131 . -3) (undo-tree-id132 . -4) (undo-tree-id133 . -4)) nil (25817 8746 448084 710000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t face font-lock-type-face)) . 3029) (undo-tree-id129 . -1) (undo-tree-id130 . -1)) nil (25817 8746 448081 183000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 3029) (undo-tree-id127 . -1) (undo-tree-id128 . -1)) nil (25817 8746 448078 889000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 3029) (undo-tree-id125 . -1) (undo-tree-id126 . -1)) nil (25817 8746 448076 565000) 0 nil])
([nil nil ((3038 . 3039) (#("create" 0 6 (fontified t)) . 3038) (undo-tree-id122 . -5) (undo-tree-id123 . -6) (undo-tree-id124 . -6)) nil (25817 8746 448074 170000) 0 nil])
([nil nil ((3038 . 3039) (#("._" 0 1 (fontified t) 1 2 (fontified t)) . 3038) (undo-tree-id118 . -1) (undo-tree-id119 . 1) (undo-tree-id120 . -2) (undo-tree-id121 . -2)) nil (25817 8746 448070 523000) 0 nil])
([nil nil ((3038 . 3039) (#("." 0 1 (fontified t)) . 3038) (undo-tree-id116 . -1) (undo-tree-id117 . -1)) nil (25817 8746 448067 17000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 3038) (undo-tree-id114 . -1) (undo-tree-id115 . -1)) nil (25817 8746 448064 81000) 0 nil])
([nil nil ((3038 . 3049) (#("setu" 0 4 (fontified t)) . -3038) (undo-tree-id96 . -4) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -3) (undo-tree-id102 . -3) (undo-tree-id103 . -4) (undo-tree-id104 . -4) (undo-tree-id105 . -4) (undo-tree-id106 . -4) (undo-tree-id107 . -4) (undo-tree-id108 . -4) (undo-tree-id109 . -4) 3042 (3038 . 3042) (#("grid" 0 4 (fontified t)) . 3038) (undo-tree-id110 . -3) (undo-tree-id111 . 4) (undo-tree-id112 . -4) (undo-tree-id113 . -4)) nil (25817 8746 448060 445000) 0 nil])
([nil nil ((3076 . 3082) (#("u" 0 1 (fontified t)) . -3076) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("p" 0 1 (fontified t)) . -3077) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("d" 0 1 (fontified t)) . -3078) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("a" 0 1 (fontified t)) . -3079) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("t" 0 1 (fontified t)) . -3080) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("e" 0 1 (fontified t)) . -3081) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) 3082 (3076 . 3082) (#("Startup" 0 7 (fontified t face font-lock-type-face)) . 3076) (undo-tree-id93 . -6) (undo-tree-id94 . -7) (undo-tree-id95 . -7)) nil (25817 8746 447773 126000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 3085) (undo-tree-id61 . -1) (undo-tree-id62 . -1)) nil (25817 8746 447751 765000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3085) (undo-tree-id59 . -1) (undo-tree-id60 . -1)) nil (25817 8746 447749 752000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . 3085) (undo-tree-id57 . -1) (undo-tree-id58 . -1)) nil (25817 8746 447746 856000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 3085) (undo-tree-id55 . -1) (undo-tree-id56 . -1)) nil (25817 8746 447744 562000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 3085) (undo-tree-id53 . -1) (undo-tree-id54 . -1)) nil (25817 8746 447742 508000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 3085) (undo-tree-id51 . -1) (undo-tree-id52 . -1)) nil (25817 8746 447740 344000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . 3085) (undo-tree-id49 . -1) (undo-tree-id50 . -1)) nil (25817 8746 447737 859000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . 3085) (undo-tree-id47 . -1) (undo-tree-id48 . -1)) nil (25817 8746 447735 635000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . 3085) (undo-tree-id45 . -1) (undo-tree-id46 . -1)) nil (25817 8746 447733 441000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 3085) (undo-tree-id43 . -1) (undo-tree-id44 . -1)) nil (25817 8746 447731 517000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 3085) (undo-tree-id41 . -1) (undo-tree-id42 . -1)) nil (25817 8746 447729 414000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 3085) (undo-tree-id39 . -1) (undo-tree-id40 . -1)) nil (25817 8746 447727 99000) 0 nil])
([nil nil ((3085 . 3096) (#("rotate" 0 6 (fontified t)) . -3085) (undo-tree-id23 . -6) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -3) (undo-tree-id29 . -3) (undo-tree-id30 . -4) (undo-tree-id31 . -4) (undo-tree-id32 . -5) (undo-tree-id33 . -5) (undo-tree-id34 . -6) (undo-tree-id35 . -6) (undo-tree-id36 . -6) (undo-tree-id37 . -6) (undo-tree-id38 . -6) 3091 (3085 . 3091)) nil (25817 8746 447724 53000) 0 nil])
([nil nil ((#("print_grid" 0 10 (fontified t)) . 3098) (undo-tree-id21 . -9) (undo-tree-id22 . -10)) nil (25817 8746 447714 305000) 0 nil])
([nil nil ((3098 . 3113) (#("bullets" 0 7 (fontified t)) . -3098) (undo-tree-id1 . -7) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (undo-tree-id6 . -3) (undo-tree-id7 . -3) (undo-tree-id8 . -4) (undo-tree-id9 . -4) (undo-tree-id10 . -5) (undo-tree-id11 . -5) (undo-tree-id12 . -6) (undo-tree-id13 . -6) (undo-tree-id14 . -7) (undo-tree-id15 . -7) (undo-tree-id16 . -7) (undo-tree-id17 . -7) (undo-tree-id18 . -7) (undo-tree-id19 . -7) (undo-tree-id20 . -7) 3105 (3098 . 3105)) nil (25817 8746 447710 668000) 0 nil])
([nil nil ((3109 . 3114) (#("i" 0 1 (fontified t)) . -3109) (undo-tree-id0 . -1) (3098 . 3110)) nil (25817 8746 447695 871000) 0 nil])
([nil nil ((3140 . 3141) 3139) nil (25817 8746 447672 617000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1565 . 1566) (#("
" 0 1 (fontified nil)) . -1732) (1561 . 1733) 1554 (t 25817 8746 449394 565000)) nil (25817 9553 405718 193000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1562) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) 1566 (1561 . 1566) 1558) nil (25817 9553 405715 738000) 0 nil])
([nil nil ((1633 . 1635) (#("i" 0 1 (fontified t face font-lock-string-face)) . -1633) (undo-tree-id158 . -1) (1630 . 1634) (#("lenin" 0 5 (fontified t face font-lock-string-face)) . 1630) (undo-tree-id159 . -4) (undo-tree-id160 . -5) (undo-tree-id161 . -5)) nil (25817 9553 405816 958000) 0 nil])
([nil nil ((1700 . 1701) (#("1" 0 1 (fontified t)) . 1700) (undo-tree-id166 . -1)) nil (25817 9617 632475 919000) 0 nil] [nil nil ((1700 . 1701) (#("1" 0 1 (fontified t)) . 1700) (undo-tree-id157 . -1)) ((1700 . 1701) (#("2" 0 1 (fontified t)) . 1700)) (25817 9553 405702 524000) 0 nil])
([nil nil ((apply -27 964 1248 undo--wrap-and-run-primitive-undo 964 1248 ((1240 . 1243) (1217 . 1220) (1159 . 1162) (1145 . 1148) (1118 . 1121) (1080 . 1083) (1046 . 1049) (1009 . 1012) (968 . 971) 1220)) (t 25817 9624 199407 574000)) nil (25818 39878 312031 41000) 0 nil] [nil nil ((apply -15 1391 1578 undo--wrap-and-run-primitive-undo 1391 1578 ((1570 . 1573) (1547 . 1550) (1488 . 1491) (1431 . 1434) (1395 . 1398) 1562)) (t 25817 9556 39406 563000)) ((apply 15 1391 1563 undo--wrap-and-run-primitive-undo 1391 1563 ((#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1395) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1431) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1488) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1547) (#("// " 0 3 (fontified t face font-lock-comment-delimiter-face)) . 1570) 1715))) (25817 9617 162361 100000) 0 nil])
nil
([nil nil ((#("
    // commands.spawn(PointLightBundle {
    //     point_light: PointLight {
    //         intensity: 1500.0,
    //         shadows_enabled: true,
    //         ..default()
    //     },
    //     transform: Transform::from_xyz(4.0, 8.0, 4.0),
    //     ..default()
    // });
" 0 1 (fontified t) 1 5 (fontified t) 5 8 (face font-lock-comment-delimiter-face fontified t) 8 23 (face font-lock-comment-face fontified t) 23 39 (face font-lock-comment-face fontified t) 39 42 (face font-lock-comment-face fontified t) 42 46 (fontified t) 46 49 (face font-lock-comment-delimiter-face fontified t) 49 53 (face font-lock-comment-delimiter-face fontified t) 53 64 (face font-lock-comment-face fontified t) 64 66 (face font-lock-comment-face fontified t) 66 76 (face font-lock-comment-face fontified t) 76 79 (face font-lock-comment-face fontified t) 79 83 (fontified t) 83 86 (face font-lock-comment-delimiter-face fontified t) 86 94 (face font-lock-comment-delimiter-face fontified t) 94 103 (face font-lock-comment-face fontified t) 103 113 (face font-lock-comment-face fontified t) 113 117 (fontified t) 117 120 (face font-lock-comment-delimiter-face fontified t) 120 128 (face font-lock-comment-delimiter-face fontified t) 128 143 (face font-lock-comment-face fontified t) 143 145 (face font-lock-comment-face fontified t) 145 149 (face font-lock-comment-face fontified t) 149 151 (face font-lock-comment-face fontified t) 151 155 (fontified t) 155 158 (face font-lock-comment-delimiter-face fontified t) 158 166 (face font-lock-comment-delimiter-face fontified t) 166 178 (face font-lock-comment-face fontified t) 178 182 (fontified t) 182 185 (face font-lock-comment-delimiter-face fontified t) 185 189 (face font-lock-comment-delimiter-face fontified t) 189 192 (face font-lock-comment-face fontified t) 192 196 (fontified t) 196 199 (face font-lock-comment-delimiter-face fontified t) 199 203 (face font-lock-comment-delimiter-face fontified t) 203 212 (face font-lock-comment-face fontified t) 212 214 (face font-lock-comment-face fontified t) 214 223 (face font-lock-comment-face fontified t) 223 250 (face font-lock-comment-face fontified t) 250 254 (fontified t) 254 257 (face font-lock-comment-delimiter-face fontified t) 257 261 (face font-lock-comment-delimiter-face fontified t) 261 273 (face font-lock-comment-face fontified t) 273 277 (fontified t) 277 280 (face font-lock-comment-delimiter-face fontified t) 280 284 (face font-lock-comment-face fontified t)) . 963) (undo-tree-id0 . -273) (undo-tree-id1 . -273) (undo-tree-id2 . -284) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -42) (undo-tree-id6 . -42) (undo-tree-id7 . -79) (undo-tree-id8 . -79) (undo-tree-id9 . -113) (undo-tree-id10 . -113) (undo-tree-id11 . -151) (undo-tree-id12 . -151) (undo-tree-id13 . -178) (undo-tree-id14 . -178) (undo-tree-id15 . -192) (undo-tree-id16 . -192) (undo-tree-id17 . -250) (undo-tree-id18 . -250) (undo-tree-id19 . -273) (undo-tree-id20 . -273) (undo-tree-id21 . -284) (undo-tree-id22 . -284) (undo-tree-id23 . -284) (undo-tree-id24 . -284) (undo-tree-id25 . -273) (undo-tree-id26 . -273) (undo-tree-id27 . -284) (undo-tree-id28 . -284) (undo-tree-id29 . -273) (undo-tree-id30 . -273) (undo-tree-id31 . -284) (undo-tree-id32 . -273) (undo-tree-id33 . -273) (undo-tree-id34 . -273) (undo-tree-id35 . -250) (undo-tree-id36 . -250) (undo-tree-id37 . -192) (undo-tree-id38 . -192) (undo-tree-id39 . -178) (undo-tree-id40 . -178) (undo-tree-id41 . -151) (undo-tree-id42 . -151) (undo-tree-id43 . -113) (undo-tree-id44 . -113) (undo-tree-id45 . -79) (undo-tree-id46 . -79) (undo-tree-id47 . -42) (undo-tree-id48 . -42) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -284) (undo-tree-id52 . -283) (t 25818 39878 313255 694000)) nil (25818 39922 835624 586000) 0 nil])
([nil nil ((1715 . 1716) (#("2" 0 1 (fontified t)) . 1715) (undo-tree-id167 . -1)) ((1715 . 1716) (#("1" 0 1 (fontified t)) . 1715) (t 25817 9593 702740 456000)) (25817 9593 699262 732000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1480 . 1481) (#("
" 0 1 (fontified nil)) . -1647) (1476 . 1648) 1469 (t 25818 39922 836589 669000)) nil (25821 22460 226466 932000) 0 nil])
nil
([nil nil ((#("    " 0 4 (fontified t)) . -1477) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -4) 1481 (1476 . 1481) 1473) nil (25821 22460 226464 738000) 0 nil])
([nil nil ((1615 . 1616) (#("2" 0 1 (fontified t)) . 1615) (undo-tree-id14 . -1)) nil (25821 22460 226460 830000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 1614) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1)) nil (25821 22460 226458 416000) 0 nil])
([nil nil ((1614 . 1615) (#("3" 0 1 (fontified t)) . 1614) (undo-tree-id3 . -1)) nil (25821 22460 226450 260000) 0 nil])
([nil nil ((1545 . 1554) (#("david" 0 5 (fontified t face font-lock-string-face)) . 1545) (undo-tree-id0 . -4) (undo-tree-id1 . -5) (undo-tree-id2 . -5)) nil (25822 9043 290881 673000) 0 nil])
([nil nil ((#("
    commands.spawn(SceneBundle {
        scene: asset_server.load(\"john.glb#Scene0\"),
        transform: Transform::from_xyz(0.0, 0.0, 1.0),
        ..default()
    });

    commands.spawn(SceneBundle {
        scene: asset_server.load(\"lenin.glb#Scene0\"),
        transform: Transform::from_xyz(0.0, 0.0, -1.0),
        ..default()
    });

    commands.spawn(SceneBundle {
        scene: asset_server.load(\"david.glb#Scene0\"),
        transform: Transform::from_xyz(0.0, 0.0, -2.0),
        ..default()
    });

    commands.spawn(SceneBundle {
        scene: asset_server.load(\"donut_tem.glb#Scene0\"),
        transform: Transform::from_xyz(0.0, 0.0, 2.0),
        ..default()
    });
" 0 20 (fontified t) 20 31 (fontified t face font-lock-type-face) 31 42 (fontified t) 42 47 (fontified t face font-lock-variable-name-face) 47 67 (fontified t) 67 84 (fontified t face font-lock-string-face) 84 95 (fontified t) 95 104 (fontified t face font-lock-variable-name-face) 104 106 (fontified t) 106 115 (fontified t face font-lock-type-face) 115 170 (fontified t) 170 190 (fontified t) 190 201 (fontified t face font-lock-type-face) 201 212 (fontified t) 212 217 (fontified t face font-lock-variable-name-face) 217 237 (fontified t) 237 255 (fontified t face font-lock-string-face) 255 266 (fontified t) 266 275 (fontified t face font-lock-variable-name-face) 275 277 (fontified t) 277 286 (fontified t face font-lock-type-face) 286 362 (fontified t) 362 373 (fontified t face font-lock-type-face) 373 384 (fontified t) 384 389 (fontified t face font-lock-variable-name-face) 389 409 (fontified t) 409 427 (fontified t face font-lock-string-face) 427 438 (fontified t) 438 447 (fontified t face font-lock-variable-name-face) 447 449 (fontified t) 449 458 (fontified t face font-lock-type-face) 458 506 (fontified t) 506 513 (fontified t) 513 514 (fontified t) 514 515 (fontified t) 515 518 (fontified t) 518 519 (rear-nonsticky t fontified t) 519 534 (fontified t) 534 545 (fontified t face font-lock-type-face) 545 548 (fontified t) 548 556 (fontified t) 556 561 (fontified t face font-lock-variable-name-face) 561 581 (fontified t) 581 603 (fontified t face font-lock-string-face) 603 606 (fontified t) 606 614 (fontified t) 614 623 (fontified t face font-lock-variable-name-face) 623 625 (fontified t) 625 634 (fontified t face font-lock-type-face) 634 650 (fontified t) 650 651 (fontified t) 651 655 (fontified t) 655 656 (fontified t) 656 661 (fontified t) 661 688 (fontified t) 688 689 (fontified t)) . 963) (undo-tree-id728 . -687) (undo-tree-id729 . -687) (undo-tree-id730 . -688) (undo-tree-id731 . 98) (undo-tree-id732 . -258) (undo-tree-id733 . -591) (undo-tree-id734 . -650) (undo-tree-id735 . -650) (undo-tree-id736 . -258) (undo-tree-id737 . -650) (undo-tree-id738 . -650) (undo-tree-id739 . -650) (undo-tree-id740 . -650) (undo-tree-id741 . -650) (undo-tree-id742 . -650) (undo-tree-id743 . -650) (undo-tree-id744 . -650) (undo-tree-id745 . -650) (undo-tree-id746 . -650) (undo-tree-id747 . -258) (undo-tree-id748 . -650) (undo-tree-id749 . -650) (undo-tree-id750 . -650) (undo-tree-id751 . -650) (undo-tree-id752 . -650) (undo-tree-id753 . -650) (undo-tree-id754 . -650) (undo-tree-id755 . -650) (undo-tree-id756 . -650) (undo-tree-id757 . -650) (undo-tree-id758 . -258) (undo-tree-id759 . -650) (undo-tree-id760 . -650) (undo-tree-id761 . -650) (undo-tree-id762 . -650) (undo-tree-id763 . -650) (undo-tree-id764 . -650) (undo-tree-id765 . -650) (undo-tree-id766 . -650) (undo-tree-id767 . -650) (undo-tree-id768 . -650) (undo-tree-id769 . -258) (undo-tree-id770 . -650) (undo-tree-id771 . -650) (undo-tree-id772 . -650) (undo-tree-id773 . -650) (undo-tree-id774 . -650) (undo-tree-id775 . -650) (undo-tree-id776 . -650) (undo-tree-id777 . -650) (undo-tree-id778 . -650) (undo-tree-id779 . -650) (undo-tree-id780 . -650) (undo-tree-id781 . -258) (undo-tree-id782 . -170) (undo-tree-id783 . -650) (undo-tree-id784 . -650) (undo-tree-id785 . -650) (undo-tree-id786 . -650) (undo-tree-id787 . -650) (undo-tree-id788 . -650) (undo-tree-id789 . -650) (undo-tree-id790 . -650) (undo-tree-id791 . -650) (undo-tree-id792 . -650) (undo-tree-id793 . -679) (undo-tree-id794 . -679) (undo-tree-id795 . -687) (undo-tree-id796 . -687) (undo-tree-id797 . -687) (undo-tree-id798 . -687) (undo-tree-id799 . -667) (undo-tree-id800 . -667) (undo-tree-id801 . -612) (undo-tree-id802 . -612) (undo-tree-id803 . -554) (undo-tree-id804 . -554) (undo-tree-id805 . -521) (undo-tree-id806 . -521) (undo-tree-id807 . -514) (undo-tree-id808 . -514) (undo-tree-id809 . -512) (undo-tree-id810 . -512) (undo-tree-id811 . -492) (undo-tree-id812 . -492) (undo-tree-id813 . -436) (undo-tree-id814 . -436) (undo-tree-id815 . -382) (undo-tree-id816 . -382) (undo-tree-id817 . -349) (undo-tree-id818 . -349) (undo-tree-id819 . -342) (undo-tree-id820 . -342) (undo-tree-id821 . -340) (undo-tree-id822 . -340) (undo-tree-id823 . -320) (undo-tree-id824 . -320) (undo-tree-id825 . -264) (undo-tree-id826 . -264) (undo-tree-id827 . -210) (undo-tree-id828 . -210) (undo-tree-id829 . -177) (undo-tree-id830 . -177) (undo-tree-id831 . -177) (undo-tree-id832 . -177) (undo-tree-id833 . -170) (undo-tree-id834 . -170) (undo-tree-id835 . -170) (undo-tree-id836 . -170) (undo-tree-id837 . -170) (undo-tree-id838 . -170) (undo-tree-id839 . -162) (undo-tree-id840 . -162) (undo-tree-id841 . -170) (undo-tree-id842 . -170) (undo-tree-id843 . -171) (undo-tree-id844 . -171) (undo-tree-id845 . -204) (undo-tree-id846 . -204) (undo-tree-id847 . -258) (undo-tree-id848 . -258) (undo-tree-id849 . -314) (undo-tree-id850 . -314) (undo-tree-id851 . -334) (undo-tree-id852 . -334) (undo-tree-id853 . -342) (undo-tree-id854 . -342) (undo-tree-id855 . -343) (undo-tree-id856 . -343) (undo-tree-id857 . -376) (undo-tree-id858 . -376) (undo-tree-id859 . -430) (undo-tree-id860 . -430) (undo-tree-id861 . -486) (undo-tree-id862 . -486) (undo-tree-id863 . -506) (undo-tree-id864 . -506) (undo-tree-id865 . -514) (undo-tree-id866 . -514) (undo-tree-id867 . -515) (undo-tree-id868 . -515) (undo-tree-id869 . -548) (undo-tree-id870 . -548) (undo-tree-id871 . -606) (undo-tree-id872 . -606) (undo-tree-id873 . -661) (undo-tree-id874 . -661) (undo-tree-id875 . -606) (undo-tree-id876 . -606) (undo-tree-id877 . -548) (undo-tree-id878 . -548) (undo-tree-id879 . -515) (undo-tree-id880 . -515) (undo-tree-id881 . -514) (undo-tree-id882 . -514) (undo-tree-id883 . -506) (undo-tree-id884 . -506) (undo-tree-id885 . -486) (undo-tree-id886 . -486) (undo-tree-id887 . -430) (undo-tree-id888 . -430) (undo-tree-id889 . -376) (undo-tree-id890 . -376) (undo-tree-id891 . -343) (undo-tree-id892 . -343) (undo-tree-id893 . -342) (undo-tree-id894 . -342) (undo-tree-id895 . -334) (undo-tree-id896 . -334) (undo-tree-id897 . -314) (undo-tree-id898 . -314) (undo-tree-id899 . -258) (undo-tree-id900 . -258) (undo-tree-id901 . -204) (undo-tree-id902 . -204) (undo-tree-id903 . -171) (undo-tree-id904 . -171) (undo-tree-id905 . -170) (undo-tree-id906 . -170) (undo-tree-id907 . -162) (undo-tree-id908 . -162) (undo-tree-id909 . -142) (undo-tree-id910 . -142) (undo-tree-id911 . -87) (undo-tree-id912 . -87) (undo-tree-id913 . -34) (undo-tree-id914 . -34) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -650) (undo-tree-id918 . -591) (undo-tree-id919 . -591) (undo-tree-id920 . -649) (undo-tree-id921 . -649) (undo-tree-id922 . -679) (undo-tree-id923 . -679) (undo-tree-id924 . -687) (undo-tree-id925 . -687) (undo-tree-id926 . -689) (undo-tree-id927 . -687) (undo-tree-id928 . -687) (undo-tree-id929 . -687) (undo-tree-id930 . -667) (undo-tree-id931 . -667) (undo-tree-id932 . -612) (undo-tree-id933 . -612) (undo-tree-id934 . -554) (undo-tree-id935 . -554) (undo-tree-id936 . -521) (undo-tree-id937 . -521) (undo-tree-id938 . -514) (undo-tree-id939 . -514) (undo-tree-id940 . -512) (undo-tree-id941 . -512) (undo-tree-id942 . -492) (undo-tree-id943 . -492) (undo-tree-id944 . -436) (undo-tree-id945 . -436) (undo-tree-id946 . -382) (undo-tree-id947 . -382) (undo-tree-id948 . -349) (undo-tree-id949 . -349) (undo-tree-id950 . -342) (undo-tree-id951 . -342) (undo-tree-id952 . -340) (undo-tree-id953 . -340) (undo-tree-id954 . -320) (undo-tree-id955 . -320) (undo-tree-id956 . -264) (undo-tree-id957 . -264) (undo-tree-id958 . -210) (undo-tree-id959 . -210) (undo-tree-id960 . -177) (undo-tree-id961 . -177) (undo-tree-id962 . -170) (undo-tree-id963 . -170) (undo-tree-id964 . -168) (undo-tree-id965 . -168) (undo-tree-id966 . -148) (undo-tree-id967 . -148) (undo-tree-id968 . -93) (undo-tree-id969 . -93) (undo-tree-id970 . -40) (undo-tree-id971 . -40) (undo-tree-id972 . -7) (undo-tree-id973 . -7) (undo-tree-id974 . -689)) nil (25822 32103 986382 761000) 0 nil] [nil nil ((1554 . 1555)) ((#("p" 0 1 (fontified t face font-lock-string-face)) . 1554)) (25822 9042 797082 181000) 0 nil])
([nil nil ((#("    commands.spawn(PbrBundle {
        mesh: meshes.add(Mesh::from(shape::Plane {
            size: 5.0,
            subdivisions: 0,
        })),
        material: materials.add(Color::rgb(0.0, 1.0, 0.0).into()),
        ..default()
    });
" 0 19 (fontified t) 19 28 (fontified t face font-lock-type-face) 28 39 (fontified t) 39 43 (fontified t face font-lock-variable-name-face) 43 56 (fontified t) 56 60 (fontified t face font-lock-type-face) 60 67 (fontified t) 67 72 (fontified t face font-lock-constant-face) 72 74 (fontified t) 74 79 (fontified t face font-lock-type-face) 79 94 (fontified t) 94 98 (fontified t face font-lock-variable-name-face) 98 117 (fontified t) 117 129 (fontified t face font-lock-variable-name-face) 129 155 (fontified t) 155 163 (fontified t face font-lock-variable-name-face) 163 179 (fontified t) 179 184 (fontified t face font-lock-type-face) 184 242 (fontified t)) . 721) (undo-tree-id431 . -234) (undo-tree-id432 . -234) (undo-tree-id433 . -241) (undo-tree-id434 . -242) (undo-tree-id435 . -242) (undo-tree-id436 . -242) (undo-tree-id437 . -242) (undo-tree-id438 . -242) (undo-tree-id439 . -242) (undo-tree-id440 . -242) (undo-tree-id441 . -242) (undo-tree-id442 . -242) (undo-tree-id443 . -242) (undo-tree-id444 . -242) (undo-tree-id445 . -242) (undo-tree-id446 . -242) (undo-tree-id447 . -242) (undo-tree-id448 . -242) (undo-tree-id449 . -242) (undo-tree-id450 . -242) (undo-tree-id451 . -242) (undo-tree-id452 . -242) (undo-tree-id453 . -242) (undo-tree-id454 . -242) (undo-tree-id455 . -242) (undo-tree-id456 . -242) (undo-tree-id457 . -242) (undo-tree-id458 . -242) (undo-tree-id459 . -242) (undo-tree-id460 . -242) (undo-tree-id461 . -242) (undo-tree-id462 . -242) (undo-tree-id463 . -242) (undo-tree-id464 . -242) (undo-tree-id465 . -242) (undo-tree-id466 . -242) (undo-tree-id467 . -242) (undo-tree-id468 . -242) (undo-tree-id469 . -242) (undo-tree-id470 . -242) (undo-tree-id471 . -242) (undo-tree-id472 . -242) (undo-tree-id473 . -242) (undo-tree-id474 . -242) (undo-tree-id475 . -242) (undo-tree-id476 . -242) (undo-tree-id477 . -242) (undo-tree-id478 . -242) (undo-tree-id479 . -242) (undo-tree-id480 . -242) (undo-tree-id481 . -242) (undo-tree-id482 . -242) (undo-tree-id483 . -242) (undo-tree-id484 . -242) (undo-tree-id485 . -234) (undo-tree-id486 . -242) (undo-tree-id487 . -242) (undo-tree-id488 . -242) (undo-tree-id489 . -242) (undo-tree-id490 . -242) (undo-tree-id491 . -242) (undo-tree-id492 . -242) (undo-tree-id493 . -242) (undo-tree-id494 . -242) (undo-tree-id495 . -242) (undo-tree-id496 . -242) (undo-tree-id497 . -242) (undo-tree-id498 . -242) (undo-tree-id499 . -242) (undo-tree-id500 . -242) (undo-tree-id501 . -242) (undo-tree-id502 . -242) (undo-tree-id503 . -242) (undo-tree-id504 . -242) (undo-tree-id505 . -242) (undo-tree-id506 . -242) (undo-tree-id507 . -242) (undo-tree-id508 . -242) (undo-tree-id509 . -242) (undo-tree-id510 . -242) (undo-tree-id511 . -242) (undo-tree-id512 . -242) (undo-tree-id513 . -242) (undo-tree-id514 . -242) (undo-tree-id515 . -242) (undo-tree-id516 . -242) (undo-tree-id517 . -242) (undo-tree-id518 . -242) (undo-tree-id519 . -242) (undo-tree-id520 . -242) (undo-tree-id521 . -242) (undo-tree-id522 . -242) (undo-tree-id523 . -242) (undo-tree-id524 . -242) (undo-tree-id525 . -242) (undo-tree-id526 . -242) (undo-tree-id527 . -242) (undo-tree-id528 . -242) (undo-tree-id529 . -242) (undo-tree-id530 . -242) (undo-tree-id531 . -242) (undo-tree-id532 . -242) (undo-tree-id533 . -242) (undo-tree-id534 . -242) (undo-tree-id535 . -242) (undo-tree-id536 . -242) (undo-tree-id537 . -242) (undo-tree-id538 . -242) (undo-tree-id539 . -242) (undo-tree-id540 . -242) (undo-tree-id541 . -242) (undo-tree-id542 . -242) (undo-tree-id543 . -242) (undo-tree-id544 . -242) (undo-tree-id545 . -242) (undo-tree-id546 . -242) (undo-tree-id547 . -242) (undo-tree-id548 . -242) (undo-tree-id549 . -242) (undo-tree-id550 . -242) (undo-tree-id551 . -242) (undo-tree-id552 . -242) (undo-tree-id553 . -242) (undo-tree-id554 . -242) (undo-tree-id555 . -242) (undo-tree-id556 . -242) (undo-tree-id557 . -242) (undo-tree-id558 . -242) (undo-tree-id559 . -242) (undo-tree-id560 . -242) (undo-tree-id561 . -242) (undo-tree-id562 . -242) (undo-tree-id563 . -242) (undo-tree-id564 . -242) (undo-tree-id565 . -242) (undo-tree-id566 . -242) (undo-tree-id567 . -242) (undo-tree-id568 . -242) (undo-tree-id569 . -242) (undo-tree-id570 . -242) (undo-tree-id571 . -242) (undo-tree-id572 . -242) (undo-tree-id573 . -242) (undo-tree-id574 . -242) (undo-tree-id575 . -242) (undo-tree-id576 . -242) (undo-tree-id577 . -242) (undo-tree-id578 . -242) (undo-tree-id579 . -242) (undo-tree-id580 . -242) (undo-tree-id581 . -242) (undo-tree-id582 . -242) (undo-tree-id583 . -242) (undo-tree-id584 . -242) (undo-tree-id585 . -242) (undo-tree-id586 . -242) (undo-tree-id587 . -242) (undo-tree-id588 . -242) (undo-tree-id589 . -242) (undo-tree-id590 . -242) (undo-tree-id591 . -242) (undo-tree-id592 . -242) (undo-tree-id593 . -242) (undo-tree-id594 . -242) (undo-tree-id595 . -242) (undo-tree-id596 . -242) (undo-tree-id597 . -242) (undo-tree-id598 . -242) (undo-tree-id599 . -242) (undo-tree-id600 . -242) (undo-tree-id601 . -242) (undo-tree-id602 . -242) (undo-tree-id603 . -242) (undo-tree-id604 . -242) (undo-tree-id605 . -242) (undo-tree-id606 . -242) (undo-tree-id607 . -242) (undo-tree-id608 . -242) (undo-tree-id609 . -242) (undo-tree-id610 . -242) (undo-tree-id611 . -242) (undo-tree-id612 . -242) (undo-tree-id613 . -242) (undo-tree-id614 . -242) (undo-tree-id615 . -242) (undo-tree-id616 . -242) (undo-tree-id617 . -242) (undo-tree-id618 . -242) (undo-tree-id619 . -242) (undo-tree-id620 . -242) (undo-tree-id621 . -242) (undo-tree-id622 . -234) (undo-tree-id623 . -234) (undo-tree-id624 . -214) (undo-tree-id625 . -214) (undo-tree-id626 . -214) (undo-tree-id627 . -214) (undo-tree-id628 . -242) (undo-tree-id629 . -242) (undo-tree-id630 . -242) (undo-tree-id631 . -242) (undo-tree-id632 . -242) (undo-tree-id633 . -242) (undo-tree-id634 . -242) (undo-tree-id635 . -242) (undo-tree-id636 . -242) (undo-tree-id637 . -242) (undo-tree-id638 . -242) (undo-tree-id639 . -242) (undo-tree-id640 . -242) (undo-tree-id641 . -242) (undo-tree-id642 . -242) (undo-tree-id643 . -242) (undo-tree-id644 . -242) (undo-tree-id645 . -242) (undo-tree-id646 . -242) (undo-tree-id647 . -242) (undo-tree-id648 . -242) (undo-tree-id649 . -242) (undo-tree-id650 . -242) (undo-tree-id651 . -242) (undo-tree-id652 . -242) (undo-tree-id653 . -242) (undo-tree-id654 . -242) (undo-tree-id655 . -242) (undo-tree-id656 . -242) (undo-tree-id657 . -242) (undo-tree-id658 . -242) (undo-tree-id659 . -242) (undo-tree-id660 . -242) (undo-tree-id661 . -242) (undo-tree-id662 . -242) (undo-tree-id663 . -242) (undo-tree-id664 . -242) (undo-tree-id665 . -242) (undo-tree-id666 . -242) (undo-tree-id667 . -242) (undo-tree-id668 . -242) (undo-tree-id669 . -242) (undo-tree-id670 . -242) (undo-tree-id671 . -242) (undo-tree-id672 . -242) (undo-tree-id673 . -242) (undo-tree-id674 . -242) (undo-tree-id675 . -242) (undo-tree-id676 . -242) (undo-tree-id677 . -242) (undo-tree-id678 . -242) (undo-tree-id679 . -242) (undo-tree-id680 . -242) (undo-tree-id681 . -242) (undo-tree-id682 . -242) (undo-tree-id683 . -242) (undo-tree-id684 . -242) (undo-tree-id685 . -242) (undo-tree-id686 . -242) (undo-tree-id687 . -242) (undo-tree-id688 . -242) (undo-tree-id689 . -234) (undo-tree-id690 . -234) (undo-tree-id691 . -214) (undo-tree-id692 . -214) (undo-tree-id693 . -147) (undo-tree-id694 . -147) (undo-tree-id695 . -134) (undo-tree-id696 . -134) (undo-tree-id697 . -105) (undo-tree-id698 . -105) (undo-tree-id699 . -82) (undo-tree-id700 . -82) (undo-tree-id701 . -31) (undo-tree-id702 . -31) (undo-tree-id703 . -31) (undo-tree-id704 . -31) (undo-tree-id705 . -82) (undo-tree-id706 . -82) (undo-tree-id707 . -31) (undo-tree-id708 . -31) (undo-tree-id709 . -242) (undo-tree-id710 . -234) (undo-tree-id711 . -31) (undo-tree-id712 . -31) (undo-tree-id713 . -82) (undo-tree-id714 . -82) (undo-tree-id715 . -105) (undo-tree-id716 . -105) (undo-tree-id717 . -134) (undo-tree-id718 . -134) (undo-tree-id719 . -147) (undo-tree-id720 . -147) (undo-tree-id721 . -214) (undo-tree-id722 . -214) (undo-tree-id723 . -234) (undo-tree-id724 . -234) (undo-tree-id725 . -234) (undo-tree-id726 . -234) (undo-tree-id727 . -242) 955) nil (25822 32103 986259 39000) 0 nil])
([nil nil ((1614 . 1615) (#("0" 0 1 (fontified t)) . 1614) (t 25821 22460 232466 453000)) ((1614 . 1615) (#("5" 0 1 (fontified t)) . 1614) (t 25821 22516 469133 978000)) (25822 9037 865800 180000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 720) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1)) nil (25822 32103 986115 590000) 0 nil])
([nil nil ((#("
    commands.spawn(SceneBundle {
        scene: asset_server.load(\"lenin.glb#Scene0\"),
        transform: Transform::from_xyz(0.0, 0.0, -1.0),
        ..default()
    });

    commands.spawn(SceneBundle {
        scene: asset_server.load(\"david.glb#Scene0\"),
        transform: Transform::from_xyz(0.0, 0.0, -2.0),
        ..default()
    });

    commands.spawn(SceneBundle {
        scene: asset_server.load(\"donut_temp.glb#Scene0\"),
        transform: Transform::from_xyz(0.0, 5.0, 2.0),
        ..default()
    });
" 0 20 (fontified t) 20 31 (fontified t face font-lock-type-face) 31 42 (fontified t) 42 47 (fontified t face font-lock-variable-name-face) 47 67 (fontified t) 67 85 (fontified t face font-lock-string-face) 85 96 (fontified t) 96 105 (fontified t face font-lock-variable-name-face) 105 107 (fontified t) 107 116 (fontified t face font-lock-type-face) 116 192 (fontified t) 192 203 (fontified t face font-lock-type-face) 203 214 (fontified t) 214 219 (fontified t face font-lock-variable-name-face) 219 239 (fontified t) 239 257 (fontified t face font-lock-string-face) 257 268 (fontified t) 268 277 (fontified t face font-lock-variable-name-face) 277 279 (fontified t) 279 288 (fontified t face font-lock-type-face) 288 336 (fontified t) 336 343 (fontified t) 343 344 (fontified t) 344 345 (fontified t) 345 348 (fontified t) 348 349 (rear-nonsticky t fontified t) 349 364 (fontified t) 364 375 (fontified t face font-lock-type-face) 375 378 (fontified t) 378 386 (fontified t) 386 391 (fontified t face font-lock-variable-name-face) 391 411 (fontified t) 411 434 (fontified t face font-lock-string-face) 434 437 (fontified t) 437 445 (fontified t) 445 454 (fontified t face font-lock-variable-name-face) 454 456 (fontified t) 456 465 (fontified t face font-lock-type-face) 465 481 (fontified t) 481 482 (fontified t) 482 486 (fontified t) 486 487 (fontified t) 487 492 (fontified t) 492 519 (fontified t) 519 520 (fontified t)) . 1133) (undo-tree-id20 . -518) (undo-tree-id21 . -518) (undo-tree-id22 . -519) (undo-tree-id23 . 98) (undo-tree-id24 . -88) (undo-tree-id25 . -421) (undo-tree-id26 . -481) (undo-tree-id27 . -481) (undo-tree-id28 . -88) (undo-tree-id29 . -481) (undo-tree-id30 . -481) (undo-tree-id31 . -481) (undo-tree-id32 . -481) (undo-tree-id33 . -481) (undo-tree-id34 . -481) (undo-tree-id35 . -481) (undo-tree-id36 . -481) (undo-tree-id37 . -481) (undo-tree-id38 . -481) (undo-tree-id39 . -88) (undo-tree-id40 . -481) (undo-tree-id41 . -481) (undo-tree-id42 . -481) (undo-tree-id43 . -481) (undo-tree-id44 . -481) (undo-tree-id45 . -481) (undo-tree-id46 . -481) (undo-tree-id47 . -481) (undo-tree-id48 . -481) (undo-tree-id49 . -481) (undo-tree-id50 . -88) (undo-tree-id51 . -481) (undo-tree-id52 . -481) (undo-tree-id53 . -481) (undo-tree-id54 . -481) (undo-tree-id55 . -481) (undo-tree-id56 . -481) (undo-tree-id57 . -481) (undo-tree-id58 . -481) (undo-tree-id59 . -481) (undo-tree-id60 . -481) (undo-tree-id61 . -88) (undo-tree-id62 . -481) (undo-tree-id63 . -481) (undo-tree-id64 . -481) (undo-tree-id65 . -481) (undo-tree-id66 . -481) (undo-tree-id67 . -481) (undo-tree-id68 . -481) (undo-tree-id69 . -481) (undo-tree-id70 . -481) (undo-tree-id71 . -481) (undo-tree-id72 . -481) (undo-tree-id73 . -88) (undo-tree-id74 . -481) (undo-tree-id75 . -481) (undo-tree-id76 . -481) (undo-tree-id77 . -481) (undo-tree-id78 . -481) (undo-tree-id79 . -481) (undo-tree-id80 . -481) (undo-tree-id81 . -481) (undo-tree-id82 . -481) (undo-tree-id83 . -481) (undo-tree-id84 . -481) (undo-tree-id85 . -510) (undo-tree-id86 . -510) (undo-tree-id87 . -518) (undo-tree-id88 . -518) (undo-tree-id89 . -520) (undo-tree-id90 . -518) (undo-tree-id91 . -518) (undo-tree-id92 . -518) (undo-tree-id93 . -498) (undo-tree-id94 . -498) (undo-tree-id95 . -443) (undo-tree-id96 . -443) (undo-tree-id97 . -384) (undo-tree-id98 . -384) (undo-tree-id99 . -351) (undo-tree-id100 . -351) (undo-tree-id101 . -344) (undo-tree-id102 . -344) (undo-tree-id103 . -342) (undo-tree-id104 . -342) (undo-tree-id105 . -322) (undo-tree-id106 . -322) (undo-tree-id107 . -266) (undo-tree-id108 . -266) (undo-tree-id109 . -212) (undo-tree-id110 . -212) (undo-tree-id111 . -179) (undo-tree-id112 . -179) (undo-tree-id113 . -172) (undo-tree-id114 . -172) (undo-tree-id115 . -170) (undo-tree-id116 . -170) (undo-tree-id117 . -150) (undo-tree-id118 . -150) (undo-tree-id119 . -94) (undo-tree-id120 . -94) (undo-tree-id121 . -40) (undo-tree-id122 . -40) (undo-tree-id123 . -7) (undo-tree-id124 . -7) (undo-tree-id125 . -7) (undo-tree-id126 . -7) (undo-tree-id127 . -520) (t 25821 22516 469133 978000)) ((1133 . 1653)) (25822 9037 865351 178000) 0 nil])
([nil nil ((175 . 180) (174 . 175) (168 . 174) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -168) (undo-tree-id116 . -1) (158 . 169) (157 . 158) (156 . 157) (t 25822 32103 987183 644000) 155) nil (25826 9645 527225 614000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 184 . 185) (#("
" 0 1 (fontified nil)) . -542) (180 . 543) 179) nil (25826 9645 527224 71000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 176) (undo-tree-id102 . -4) (undo-tree-id103 . -4) (undo-tree-id104 . -3) (undo-tree-id105 . -3) (undo-tree-id106 . -3) (undo-tree-id107 . -3) (undo-tree-id108 . -4) (undo-tree-id109 . -3) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -3) (undo-tree-id113 . -3) (undo-tree-id114 . -3) (undo-tree-id115 . -5) 179) nil (25826 9645 527223 59000) 0 nil])
([nil nil ((192 . 195) (187 . 192) (#("Comm" 0 4 (face font-lock-type-face fontified t)) . -187) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -3) (undo-tree-id85 . -3) (undo-tree-id86 . -4) (undo-tree-id87 . -4) (undo-tree-id88 . -4) (undo-tree-id89 . -4) (undo-tree-id90 . -4) (undo-tree-id91 . -4) 191 (185 . 191) (177 . 185) (#("comm" 0 4 (fontified t)) . -177) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -3) (undo-tree-id97 . -3) (undo-tree-id98 . -4) (undo-tree-id99 . -4) (undo-tree-id100 . -4) (undo-tree-id101 . -4) 181 (173 . 181)) nil (25826 9645 527216 347000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -560) (undo-tree-id74 . -4) (undo-tree-id75 . -4) (undo-tree-id76 . -4) (undo-tree-id77 . -4) (564 . 565) (559 . 564) 558) nil (25826 9645 527018 175000) 0 nil])
([nil nil ((2601 . 2602)) nil (25826 9645 527015 931000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -2616) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 2617 (2606 . 2617) (#("p" 0 1 (fontified t)) . -2606) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("_" 0 1 (fontified t)) . -2607) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("s" 0 1 (fontified t)) . -2608) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#("c" 0 1 (fontified t)) . -2609) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("e" 0 1 (fontified t)) . -2610) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("n" 0 1 (fontified t)) . -2611) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("e" 0 1 (fontified t)) . -2612) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("," 0 1 (fontified t)) . -2613) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#(" " 0 1 (fontified t)) . -2614) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) 2615 (2613 . 2615)) nil (25826 9645 527013 226000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . 2601) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1)) nil (25826 9645 526984 842000) 0 nil])
([nil nil ((2629 . 2631)) nil (25826 9645 526965 506000) 0 nil])
([nil nil ((196 . 197) (#("    " 0 4 (fontified t)) . 2617) 2473) nil (25826 9645 526961 48000) 0 nil])
([nil nil ((nil rear-nonsticky nil 22 . 23) (#("
" 0 1 (fontified nil)) . -48) (22 . 49) 1 (t 25826 9645 528910 350000)) nil (25826 9719 432524 850000) 0 nil])
([nil nil ((2635 . 2639) (#("i" 0 1 (fontified t)) . -2635) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (2634 . 2636) (#("c" 0 1 (fontified t)) . -2634) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (#("o" 0 1 (fontified t)) . -2635) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("m" 0 1 (fontified t)) . -2636) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (#("m" 0 1 (fontified t)) . -2637) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (#("a" 0 1 (fontified t)) . -2638) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("n" 0 1 (fontified t)) . -2639) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (#("d" 0 1 (fontified t)) . -2640) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (#("s" 0 1 (fontified t)) . -2641) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) 2642 (t 25826 9719 435578 444000)) nil (25826 9734 341276 834000) 0 nil])
([nil nil ((2640 . 2641) (t 25826 9734 342245 381000)) nil (25826 9751 381290 953000) 0 nil])
([nil nil ((1 . 2) 21 (t 25826 9751 385579 41000)) nil (25826 10302 485676 786000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1 . 2) (#("
" 0 1 (fontified nil)) . -22) (1 . 23)) nil (25826 10302 485674 552000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1)) nil (25826 10302 485671 587000) 0 nil])
([nil current ((750 . 752) (t 25826 10302 495589 395000)) nil (25826 13899 187353 132000) 0 nil])
nil
