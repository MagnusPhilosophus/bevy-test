(undo-tree-save-format-version . 1)
"31cbaafa4bf20ce803a365d4511e25281c509cd5"
[nil nil nil nil (25825 21636 283579 889000) 0 nil]
([nil nil ((nil rear-nonsticky nil 1633 . 1634) (nil fontified nil 1 . 1634) (1 . 1634) (t 25825 21504 377942 573000)) nil (25825 21636 283579 67000) 0 nil])
([nil nil ((1 . 5)) nil (25825 21636 283578 326000) 0 nil])
([nil nil ((34 . 38) (13 . 34) (4 . 13) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -4) (undo-tree-id151 . -1) (1 . 5) (1 . 2)) nil (25825 21636 283577 314000) 0 nil])
([nil nil ((36 . 38) (#("," 0 1 (fontified t)) . -36) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#(" " 0 1 (fontified t)) . -37) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) 38) nil (25825 21636 283574 108000) 0 nil])
([nil nil ((1676 . 1677) (#("
" 0 1 (fontified t)) . -1676) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#(" " 0 1 (fontified t)) . -1677) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#(" " 0 1 (fontified t)) . -1678) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#(" " 0 1 (fontified t)) . -1679) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (#(" " 0 1 (fontified t)) . -1680) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) 1681 (1676 . 1681) 1676) nil (25825 21636 283214 553000) 0 nil])
([nil nil ((1 . 2) 6) nil (25825 21636 283205 496000) 0 nil])
([nil nil ((nil rear-nonsticky nil 40 . 41) (nil fontified nil 1 . 41) (1 . 41)) nil (25825 21636 283204 935000) 0 nil])
([nil nil ((41 . 42) 40) nil (25825 21636 283204 254000) 0 nil])
([nil nil ((1 . 2)) nil (25825 21636 283203 633000) 0 nil])
([nil nil ((60 . 64) (#("i" 0 1 (face font-lock-type-face fontified t)) . -60) (undo-tree-id6 . -1) (56 . 61) (#(":" 0 1 (fontified t)) . -56) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 57 (53 . 57) (#("i" 0 1 (face font-lock-type-face fontified t)) . -53) (undo-tree-id11 . -1) 54 (51 . 54) (46 . 51) (#("i" 0 1 (face font-lock-type-face fontified t)) . -46) (undo-tree-id12 . -1) (42 . 47) (#("i" 0 1 (face font-lock-type-face fontified t)) . -42) (undo-tree-id13 . -1) (32 . 43) (#("i" 0 1 (fontified t)) . -32) (undo-tree-id14 . -1) (30 . 33) (#("n" 0 1 (fontified t)) . -30) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("t" 0 1 (fontified t)) . -31) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("i" 0 1 (fontified t)) . -32) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("c" 0 1 (fontified t)) . -33) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#(":" 0 1 (fontified t)) . -34) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#(":" 0 1 (fontified t)) . -35) (undo-tree-id41 . -1) (undo-tree-id42 . -1) 36 (32 . 36) (#("i" 0 1 (fontified t)) . -32) (undo-tree-id43 . -1) (25 . 33) (#("i" 0 1 (fontified t)) . -25) (undo-tree-id44 . -1) (24 . 26) (11 . 24) (#("p" 0 1 (fontified t)) . -11) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("r" 0 1 (fontified t)) . -12) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("e" 0 1 (fontified t)) . -13) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("l" 0 1 (fontified t)) . -14) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("u" 0 1 (fontified t)) . -15) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) 16 (1 . 16) (1 . 2)) nil (25825 21636 283197 321000) 0 nil])
([nil nil ((107 . 108) 107) nil (25825 21636 282842 164000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 108) (undo-tree-id4 . 1) (undo-tree-id5 . -1)) nil (25825 21636 282841 122000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -146) (undo-tree-id0 . -4) (undo-tree-id1 . -4) (undo-tree-id2 . -4) (undo-tree-id3 . -4) 150 (145 . 150) 108) nil (25825 21636 283745 760000) 0 nil])
([nil nil ((nil rear-nonsticky nil 205 . 206) (nil fontified nil 150 . 206) (150 . 206) (146 . 150)) nil (25825 21732 801100 625000) 0 nil] [nil nil ((nil rear-nonsticky nil 146 . 147) (#("
" 0 1 (fontified nil)) . -147) (146 . 148)) ((#("

" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified nil)) . 146) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (147 . 148) (nil rear-nonsticky t 146 . 147)) (25825 21636 282814 623000) 0 nil])
([nil nil ((#("G" 0 1 (face font-lock-type-face fontified t)) . -175) (undo-tree-id155 . -1) 176 (175 . 176) (157 . 175) (145 . 157) (#("asset_" 0 6 (fontified t)) . -145) (undo-tree-id156 . -6) 151 (146 . 151) (143 . 146)) nil (25825 21732 801099 333000) 0 nil])
nil
([nil nil ((1877 . 1878)) nil (25825 21732 801090 556000) 0 nil])
([nil nil ((#("prelu" 0 5 (face font-lock-constant-face fontified t)) . 12) (#("e::*, d" 0 1 (face font-lock-constant-face fontified t) 1 6 (fontified t) 6 7 (face font-lock-constant-face fontified t)) . 18) (62 . 74) (176 . 177) 174) nil (25825 21732 801086 789000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2891 . 2892) (nil fontified nil 1879 . 2892) (1879 . 2892) (t 25825 21732 804613 342000)) nil (25825 21793 281693 428000) 0 nil])
([nil nil ((1878 . 1879) 1877) nil (25825 21793 281689 390000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2893 . 2894) (#("
" 0 1 (fontified nil)) . -3089) (2893 . 3090) (t 25825 21793 284614 436000)) nil (25825 21880 761449 82000) 0 nil])
([nil nil ((2906 . 2907) (#("i" 0 1 (face font-lock-type-face fontified t)) . -2906) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) 2907 (2906 . 2907) (#("i" 0 1 (face font-lock-type-face fontified t)) . -2906) (undo-tree-id300 . -1) (2905 . 2907) (#("Maze" 0 4 (face font-lock-type-face fontified t)) . 2905) (undo-tree-id301 . -3) (undo-tree-id302 . -4) (undo-tree-id303 . -4)) nil (25825 21880 761447 840000) 0 nil])
([nil nil ((2933 . 2934) (#("i" 0 1 (fontified nil)) . -2933) (undo-tree-id290 . -1) 2934 (2932 . 2934) (#("Maze" 0 4 (face font-lock-type-face fontified t)) . 2932) (undo-tree-id291 . -3) (undo-tree-id292 . -4) (undo-tree-id293 . -4)) nil (25825 21880 761441 538000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-type-face fontified t)) . 3004) (undo-tree-id288 . -1) (undo-tree-id289 . -1)) nil (25825 21880 761438 522000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 3004) (undo-tree-id286 . -1) (undo-tree-id287 . -1)) nil (25825 21880 761437 120000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 3004) (undo-tree-id284 . -1) (undo-tree-id285 . -1)) nil (25825 21880 761435 637000) 0 nil])
([nil nil ((#("create_grid" 0 11 (fontified t)) . 3013) (undo-tree-id282 . -10) (undo-tree-id283 . -11)) nil (25825 21880 761433 974000) 0 nil])
([nil nil ((3013 . 3022) (#("info" 0 4 (fontified t)) . -3013) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -3) (undo-tree-id208 . -3) (undo-tree-id209 . -4) (undo-tree-id210 . -4) (undo-tree-id211 . -4) (undo-tree-id212 . -4) (undo-tree-id213 . -4) (undo-tree-id214 . -4) 3017 (3013 . 3017) (#("i" 0 1 (fontified t)) . -3013) (undo-tree-id215 . -1) (3013 . 3014) (#("t" 0 1 (fontified t)) . -3013) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (#("e" 0 1 (fontified t)) . -3014) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (#("x" 0 1 (fontified t)) . -3015) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (#("t" 0 1 (fontified t)) . -3016) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) 3017 (3015 . 3017) (3013 . 3015) (#("t" 0 1 (fontified t)) . -3013) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (#("e" 0 1 (fontified t)) . -3014) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) 3015 (3013 . 3015)) nil (25825 21880 761428 634000) 0 nil])
([nil nil ((#("display_grid" 0 12 (fontified t)) . 3058) (undo-tree-id197 . -11) (undo-tree-id198 . -7) (undo-tree-id199 . -7) (undo-tree-id200 . -7) (undo-tree-id201 . -7) (undo-tree-id202 . -12)) nil (25825 21880 761230 231000) 0 nil])
([nil nil ((3058 . 3076) (#("cha" 0 3 (fontified t)) . -3058) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -3) (undo-tree-id192 . -3) (undo-tree-id193 . -3) (undo-tree-id194 . -3) (undo-tree-id195 . -3) (undo-tree-id196 . -3) 3061 (3058 . 3061)) nil (25825 21880 761226 575000) 0 nil])
([nil nil ((#("_system" 0 7 (fontified t)) . 3069) (undo-tree-id177 . -6) (undo-tree-id178 . -7) (undo-tree-id179 . -7) (undo-tree-id180 . -7) (undo-tree-id181 . -7) (undo-tree-id182 . -6) (undo-tree-id183 . -6) (undo-tree-id184 . -6) (undo-tree-id185 . -6) (undo-tree-id186 . -7)) nil (25825 21880 761221 725000) 0 nil])
([nil nil ((#("_system" 0 7 (face font-lock-function-name-face fontified t)) . 1894) (undo-tree-id157 . -6) (undo-tree-id158 . -3) (undo-tree-id159 . -3) (undo-tree-id160 . -3) (undo-tree-id161 . -3) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -5) (undo-tree-id167 . -5) (undo-tree-id168 . -5) (undo-tree-id169 . -5) (undo-tree-id170 . -6) (undo-tree-id171 . -6) (undo-tree-id172 . -6) (undo-tree-id173 . -6) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -7)) nil (25825 21880 761215 93000) 0 nil])
([nil nil ((3072 . 3073) 1894) nil (25825 21880 761195 927000) 0 nil])
([nil nil ((24 . 25) (t 25825 21880 767949 352000)) nil (25825 21944 424832 316000) 0 nil])
([nil nil ((37 . 43) (#("c" 0 1 (face font-lock-type-face fontified t)) . -37) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (#("o" 0 1 (face font-lock-type-face fontified t)) . -38) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -39) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -40) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) 41 (33 . 41) (#("i" 0 1 (face font-lock-type-face fontified t)) . -33) (undo-tree-id320 . -1) (26 . 34) (#("i" 0 1 (face font-lock-type-face fontified t)) . -26) (undo-tree-id321 . -1) (25 . 27)) nil (25825 21944 424830 272000) 0 nil])
([nil nil ((69 . 70)) nil (25825 21944 424811 768000) 0 nil])
([nil nil ((12 . 17) (71 . 72) (72 . 75) (82 . 84) 69) nil (25825 22542 399220 639000) 0 nil])
([nil nil ((254 . 258) (#("Sans" 0 4 (face font-lock-string-face fontified t)) . 254)) ((254 . 258) (#("Code" 0 4 (face font-lock-string-face fontified t)) . 254)) (25825 22543 135307 396000) 0 nil])
([nil nil ((3073 . 3079) (#("Startup" 0 7 (face font-lock-type-face)) . 3073)) ((3073 . 3080) (#("Update" 0 6 (face font-lock-type-face fontified t)) . 3073)) (25825 22543 513270 995000) 0 nil])
([nil nil ((#("        text.sections[0].value = format!(
            \"This text changes in the bottom right - {fps:.1} fps, {frame_time:.3} ms/frame\",
        );

" 0 33 (fontified t) 33 40 (face rust-builtin-formatting-macro fontified t) 40 54 (fontified t) 54 95 (face font-lock-string-face fontified t) 95 103 (face rust-string-interpolation fontified t) 103 109 (face font-lock-string-face fontified t) 109 124 (face rust-string-interpolation fontified t) 124 134 (face font-lock-string-face fontified t) 134 136 (fontified t) 136 147 (fontified t) 147 148 (fontified t)) . 2645) (undo-tree-id872 . -147) (undo-tree-id873 . -147) (undo-tree-id874 . -40) (undo-tree-id875 . -147) (undo-tree-id876 . -148) (undo-tree-id877 . -148) (undo-tree-id878 . -148) (undo-tree-id879 . -148) (undo-tree-id880 . -148) (undo-tree-id881 . -148) (undo-tree-id882 . -148) (undo-tree-id883 . -148) (undo-tree-id884 . -148) (undo-tree-id885 . -148) (undo-tree-id886 . -148) (undo-tree-id887 . -148) (undo-tree-id888 . -148) (undo-tree-id889 . -148) (undo-tree-id890 . -148) (undo-tree-id891 . -147) (undo-tree-id892 . -147) (undo-tree-id893 . -145) (undo-tree-id894 . -145) (undo-tree-id895 . -87) (undo-tree-id896 . -87) (undo-tree-id897 . -40) (undo-tree-id898 . -40) (undo-tree-id899 . -40) (undo-tree-id900 . -40) (undo-tree-id901 . -40) (undo-tree-id902 . -40) (undo-tree-id903 . -82) (undo-tree-id904 . -82) (undo-tree-id905 . -146) (undo-tree-id906 . -146) (undo-tree-id907 . -147) (undo-tree-id908 . -147) (undo-tree-id909 . -147) (undo-tree-id910 . -147) (undo-tree-id911 . -147) (undo-tree-id912 . -148) 2792 (t 25825 22545 207961 810000)) nil (25825 22679 21285 937000) 0 nil] [nil nil ((#("
        text.sections[2].value = format!(\"{fps:.1}\");

        text.sections[4].value = format!(\"{frame_time:.3}\");
" 0 1 (fontified t) 1 34 (fontified t) 34 41 (face rust-builtin-formatting-macro fontified t) 41 42 (fontified t) 42 43 (face font-lock-string-face fontified t) 43 51 (face rust-string-interpolation fontified t) 51 52 (face font-lock-string-face fontified t) 52 55 (fontified t) 55 89 (fontified t) 89 96 (face rust-builtin-formatting-macro fontified t) 96 97 (fontified t) 97 98 (face font-lock-string-face fontified t) 98 113 (face rust-string-interpolation fontified t) 113 114 (face font-lock-string-face fontified t) 114 117 (fontified t)) . 2792) (undo-tree-id652 . -56) (undo-tree-id653 . -116) (undo-tree-id654 . -55) (undo-tree-id655 . -56) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -55) (undo-tree-id671 . -55) (undo-tree-id672 . -56) (undo-tree-id673 . -56) (undo-tree-id674 . -1) (undo-tree-id675 . -56) (undo-tree-id676 . -56) (undo-tree-id677 . -56) (undo-tree-id678 . -117) 2848) ((2792 . 2909)) (25825 22541 428606 539000) 0 nil] [nil nil ((#("        text.sections[0].value = format!(
            \"This text changes in the bottom right - {fps:.1} fps, {frame_time:.3} ms/frame\",
        );

" 0 33 (fontified t) 33 40 (face rust-builtin-formatting-macro fontified t) 40 54 (fontified t) 54 95 (face font-lock-string-face fontified t) 95 103 (face rust-string-interpolation fontified t) 103 109 (face font-lock-string-face fontified t) 109 124 (face rust-string-interpolation fontified t) 124 134 (face font-lock-string-face fontified t) 134 148 (fontified t)) . 2645) (undo-tree-id450 . -147) (undo-tree-id451 . -147) (undo-tree-id452 . -147) (undo-tree-id453 . -42) (undo-tree-id454 . -42) (undo-tree-id455 . -136) (undo-tree-id456 . -136) (undo-tree-id457 . -147) (undo-tree-id458 . -147) (undo-tree-id459 . -148) (undo-tree-id460 . -148) (undo-tree-id461 . -148) (undo-tree-id462 . -148) (undo-tree-id463 . -147) (undo-tree-id464 . -147) (undo-tree-id465 . -136) (undo-tree-id466 . -136) (undo-tree-id467 . -42) (undo-tree-id468 . -42) (undo-tree-id469 . -42) (undo-tree-id470 . -42) (undo-tree-id471 . -42) (undo-tree-id472 . -42) (undo-tree-id473 . -136) (undo-tree-id474 . -136) (undo-tree-id475 . -147) (undo-tree-id476 . -147) (undo-tree-id477 . -148) (undo-tree-id478 . -148) (undo-tree-id479 . -148) (undo-tree-id480 . -148) (undo-tree-id481 . -147) (undo-tree-id482 . -147) (undo-tree-id483 . -136) (undo-tree-id484 . -136) (undo-tree-id485 . -42) (undo-tree-id486 . -42) (undo-tree-id487 . -42) (undo-tree-id488 . -42) (undo-tree-id489 . -42) (undo-tree-id490 . -42) (undo-tree-id491 . -136) (undo-tree-id492 . -136) (undo-tree-id493 . -147) (undo-tree-id494 . -147) (undo-tree-id495 . -147) (undo-tree-id496 . -147) (undo-tree-id497 . -147) (undo-tree-id498 . -148) 2792) ((2645 . 2793)) (25825 22515 391641 359000) 0 nil] [nil nil ((apply -24 328 649 undo--wrap-and-run-primitive-undo 328 649 ((613 . 616) (591 . 594) (547 . 550) (507 . 510) (464 . 467) (433 . 436) (373 . 376) (340 . 343) 595))) ((apply 24 328 625 undo--wrap-and-run-primitive-undo 328 625 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 340) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 373) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 433) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 464) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 507) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 547) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 591) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 613) 617))) (25825 22391 329118 407000) 0 nil])
([nil nil ((2667 . 2668) (#("2" 0 1 (fontified t)) . 2667) (undo-tree-id871 . -1)) nil (25825 22679 21266 140000) 0 nil])
([nil nil ((#("            TextSection::new(
                \"This text changes in the bottom right\",
                TextStyle {
                    font: font.clone(),
                    font_size: 30.0,
                    color: Color::WHITE,
                },
            ),
" 0 12 (fontified t) 12 23 (face font-lock-type-face fontified t) 23 30 (fontified t) 30 42 (fontified t) 42 46 (fontified t) 46 85 (face font-lock-string-face fontified t) 85 87 (fontified t) 87 99 (fontified t) 99 103 (fontified t) 103 112 (face font-lock-type-face fontified t) 112 115 (fontified t) 115 127 (fontified t) 127 135 (fontified t) 135 139 (face font-lock-variable-name-face fontified t) 139 155 (fontified t) 155 167 (fontified t) 167 175 (fontified t) 175 184 (face font-lock-variable-name-face fontified t) 184 192 (fontified t) 192 204 (fontified t) 204 212 (fontified t) 212 217 (face font-lock-variable-name-face fontified t) 217 219 (fontified t) 219 224 (face font-lock-type-face fontified t) 224 226 (fontified t) 226 231 (face font-lock-type-face fontified t) 231 233 (fontified t) 233 245 (fontified t) 245 249 (fontified t) 249 252 (fontified t) 252 264 (fontified t) 264 267 (fontified t)) . 328) (undo-tree-id499 . -252) (undo-tree-id500 . -266) (undo-tree-id501 . -265) (undo-tree-id502 . -265) (undo-tree-id503 . -252) (undo-tree-id504 . -265) (undo-tree-id505 . -265) (undo-tree-id506 . -265) (undo-tree-id507 . -265) (undo-tree-id508 . -265) (undo-tree-id509 . -265) (undo-tree-id510 . -265) (undo-tree-id511 . -265) (undo-tree-id512 . -265) (undo-tree-id513 . -265) (undo-tree-id514 . -265) (undo-tree-id515 . -265) (undo-tree-id516 . -265) (undo-tree-id517 . -265) (undo-tree-id518 . -267) (undo-tree-id519 . -267) (undo-tree-id520 . -267) (undo-tree-id521 . -267) (undo-tree-id522 . -267) (undo-tree-id523 . -267) (undo-tree-id524 . -252) (undo-tree-id525 . -252) (undo-tree-id526 . -233) (undo-tree-id527 . -233) (undo-tree-id528 . -192) (undo-tree-id529 . -192) (undo-tree-id530 . -155) (undo-tree-id531 . -155) (undo-tree-id532 . -115) (undo-tree-id533 . -115) (undo-tree-id534 . -87) (undo-tree-id535 . -87) (undo-tree-id536 . -30) (undo-tree-id537 . -30) (undo-tree-id538 . -30) (undo-tree-id539 . -30) (undo-tree-id540 . -87) (undo-tree-id541 . -87) (undo-tree-id542 . -115) (undo-tree-id543 . -115) (undo-tree-id544 . -155) (undo-tree-id545 . -155) (undo-tree-id546 . -192) (undo-tree-id547 . -192) (undo-tree-id548 . -233) (undo-tree-id549 . -233) (undo-tree-id550 . -252) (undo-tree-id551 . -252) (undo-tree-id552 . -267) (undo-tree-id553 . -267) (undo-tree-id554 . -267) (undo-tree-id555 . -267) (undo-tree-id556 . -252) (undo-tree-id557 . -252) (undo-tree-id558 . -233) (undo-tree-id559 . -233) (undo-tree-id560 . -192) (undo-tree-id561 . -192) (undo-tree-id562 . -155) (undo-tree-id563 . -155) (undo-tree-id564 . -115) (undo-tree-id565 . -115) (undo-tree-id566 . -87) (undo-tree-id567 . -87) (undo-tree-id568 . -30) (undo-tree-id569 . -30) (undo-tree-id570 . -30) (undo-tree-id571 . -30) (undo-tree-id572 . -87) (undo-tree-id573 . -87) (undo-tree-id574 . -115) (undo-tree-id575 . -115) (undo-tree-id576 . -155) (undo-tree-id577 . -155) (undo-tree-id578 . -192) (undo-tree-id579 . -192) (undo-tree-id580 . -233) (undo-tree-id581 . -233) (undo-tree-id582 . -252) (undo-tree-id583 . -252) (undo-tree-id584 . -267) (undo-tree-id585 . -267) (undo-tree-id586 . -267) (undo-tree-id587 . -267) (undo-tree-id588 . -252) (undo-tree-id589 . -252) (undo-tree-id590 . -233) (undo-tree-id591 . -233) (undo-tree-id592 . -192) (undo-tree-id593 . -192) (undo-tree-id594 . -155) (undo-tree-id595 . -155) (undo-tree-id596 . -115) (undo-tree-id597 . -115) (undo-tree-id598 . -87) (undo-tree-id599 . -87) (undo-tree-id600 . -30) (undo-tree-id601 . -30) (undo-tree-id602 . -30) (undo-tree-id603 . -30) (undo-tree-id604 . -87) (undo-tree-id605 . -87) (undo-tree-id606 . -115) (undo-tree-id607 . -115) (undo-tree-id608 . -155) (undo-tree-id609 . -155) (undo-tree-id610 . -192) (undo-tree-id611 . -192) (undo-tree-id612 . -233) (undo-tree-id613 . -233) (undo-tree-id614 . -252) (undo-tree-id615 . -252) (undo-tree-id616 . -252) (undo-tree-id617 . -252) (undo-tree-id618 . -267) (undo-tree-id619 . -267) (undo-tree-id620 . -252) (undo-tree-id621 . -252) (undo-tree-id622 . -233) (undo-tree-id623 . -233) (undo-tree-id624 . -192) (undo-tree-id625 . -192) (undo-tree-id626 . -155) (undo-tree-id627 . -155) (undo-tree-id628 . -115) (undo-tree-id629 . -115) (undo-tree-id630 . -87) (undo-tree-id631 . -87) (undo-tree-id632 . -30) (undo-tree-id633 . -30) (undo-tree-id634 . -30) (undo-tree-id635 . -30) (undo-tree-id636 . -87) (undo-tree-id637 . -87) (undo-tree-id638 . -115) (undo-tree-id639 . -115) (undo-tree-id640 . -155) (undo-tree-id641 . -155) (undo-tree-id642 . -192) (undo-tree-id643 . -192) (undo-tree-id644 . -233) (undo-tree-id645 . -233) (undo-tree-id646 . -252) (undo-tree-id647 . -252) (undo-tree-id648 . -252) (undo-tree-id649 . -252) (undo-tree-id650 . -252) (undo-tree-id651 . -267) 580) ((328 . 595) (t 25825 22531 624628 220000)) (25825 22531 618037 397000) 0 nil])
([nil nil ((#("            TextSection::new(
                \"This text changes in the bottom right\",
                TextStyle {
                    font: font.clone(),
                    font_size: 30.0,
                    color: Color::WHITE,
                },
            ),
" 0 12 (fontified t) 12 23 (face font-lock-type-face fontified t) 23 30 (fontified t) 30 42 (fontified t) 42 46 (fontified t) 46 85 (face font-lock-string-face fontified t) 85 87 (fontified t) 87 99 (fontified t) 99 103 (fontified t) 103 112 (face font-lock-type-face fontified t) 112 115 (fontified t) 115 127 (fontified t) 127 135 (fontified t) 135 139 (face font-lock-variable-name-face fontified t) 139 155 (fontified t) 155 167 (fontified t) 167 175 (fontified t) 175 184 (face font-lock-variable-name-face fontified t) 184 192 (fontified t) 192 204 (fontified t) 204 212 (fontified t) 212 217 (face font-lock-variable-name-face fontified t) 217 219 (fontified t) 219 224 (face font-lock-type-face fontified t) 224 226 (fontified t) 226 231 (face font-lock-type-face fontified t) 231 233 (fontified t) 233 245 (fontified t) 245 249 (fontified t) 249 252 (fontified t) 252 264 (fontified t) 264 267 (fontified t)) . 328) (undo-tree-id328 . -252) (undo-tree-id329 . -266) (undo-tree-id330 . -265) (undo-tree-id331 . -265) (undo-tree-id332 . -252) (undo-tree-id333 . -265) (undo-tree-id334 . -265) (undo-tree-id335 . -265) (undo-tree-id336 . -265) (undo-tree-id337 . -265) (undo-tree-id338 . -265) (undo-tree-id339 . -265) (undo-tree-id340 . -265) (undo-tree-id341 . -265) (undo-tree-id342 . -265) (undo-tree-id343 . -265) (undo-tree-id344 . -265) (undo-tree-id345 . -265) (undo-tree-id346 . -265) (undo-tree-id347 . -267) (undo-tree-id348 . -267) (undo-tree-id349 . -267) (undo-tree-id350 . -267) (undo-tree-id351 . -267) (undo-tree-id352 . -267) (undo-tree-id353 . -252) (undo-tree-id354 . -252) (undo-tree-id355 . -233) (undo-tree-id356 . -233) (undo-tree-id357 . -192) (undo-tree-id358 . -192) (undo-tree-id359 . -155) (undo-tree-id360 . -155) (undo-tree-id361 . -115) (undo-tree-id362 . -115) (undo-tree-id363 . -87) (undo-tree-id364 . -87) (undo-tree-id365 . -30) (undo-tree-id366 . -30) (undo-tree-id367 . -30) (undo-tree-id368 . -30) (undo-tree-id369 . -87) (undo-tree-id370 . -87) (undo-tree-id371 . -115) (undo-tree-id372 . -115) (undo-tree-id373 . -155) (undo-tree-id374 . -155) (undo-tree-id375 . -192) (undo-tree-id376 . -192) (undo-tree-id377 . -233) (undo-tree-id378 . -233) (undo-tree-id379 . -252) (undo-tree-id380 . -252) (undo-tree-id381 . -267) (undo-tree-id382 . -267) (undo-tree-id383 . -267) (undo-tree-id384 . -267) (undo-tree-id385 . -252) (undo-tree-id386 . -252) (undo-tree-id387 . -233) (undo-tree-id388 . -233) (undo-tree-id389 . -192) (undo-tree-id390 . -192) (undo-tree-id391 . -155) (undo-tree-id392 . -155) (undo-tree-id393 . -115) (undo-tree-id394 . -115) (undo-tree-id395 . -87) (undo-tree-id396 . -87) (undo-tree-id397 . -30) (undo-tree-id398 . -30) (undo-tree-id399 . -30) (undo-tree-id400 . -30) (undo-tree-id401 . -87) (undo-tree-id402 . -87) (undo-tree-id403 . -115) (undo-tree-id404 . -115) (undo-tree-id405 . -155) (undo-tree-id406 . -155) (undo-tree-id407 . -192) (undo-tree-id408 . -192) (undo-tree-id409 . -233) (undo-tree-id410 . -233) (undo-tree-id411 . -252) (undo-tree-id412 . -252) (undo-tree-id413 . -267) (undo-tree-id414 . -267) (undo-tree-id415 . -267) (undo-tree-id416 . -267) (undo-tree-id417 . -252) (undo-tree-id418 . -252) (undo-tree-id419 . -233) (undo-tree-id420 . -233) (undo-tree-id421 . -192) (undo-tree-id422 . -192) (undo-tree-id423 . -155) (undo-tree-id424 . -155) (undo-tree-id425 . -115) (undo-tree-id426 . -115) (undo-tree-id427 . -87) (undo-tree-id428 . -87) (undo-tree-id429 . -30) (undo-tree-id430 . -30) (undo-tree-id431 . -30) (undo-tree-id432 . -30) (undo-tree-id433 . -87) (undo-tree-id434 . -87) (undo-tree-id435 . -115) (undo-tree-id436 . -115) (undo-tree-id437 . -155) (undo-tree-id438 . -155) (undo-tree-id439 . -192) (undo-tree-id440 . -192) (undo-tree-id441 . -233) (undo-tree-id442 . -233) (undo-tree-id443 . -252) (undo-tree-id444 . -252) (undo-tree-id445 . -267) (undo-tree-id446 . -252) (undo-tree-id447 . -252) (undo-tree-id448 . -252) (undo-tree-id449 . -267) 580) ((328 . 595) (t 25825 22510 144627 809000)) (25825 22510 140562 88000) 0 nil])
nil
([nil nil ((2667 . 2668) (#("2" 0 1 (fontified t)) . 2667) (undo-tree-id870 . -1)) nil (25825 22679 21264 497000) 0 nil])
nil
nil
([nil nil ((2722 . 2723) (#("4" 0 1 (fontified t)) . 2722) (undo-tree-id869 . -1)) nil (25825 22679 21262 72000) 0 nil])
([nil nil ((#("            TextSection::new(
                \"This text changes in the bottom right\",
                TextStyle {
                    font: font.clone(),
                    font_size: 30.0,
                    color: Color::WHITE,
                },
            ),
" 0 12 (fontified t) 12 23 (face font-lock-type-face fontified t) 23 30 (fontified t) 30 42 (fontified t) 42 46 (fontified t) 46 85 (face font-lock-string-face fontified t) 85 87 (fontified t) 87 99 (fontified t) 99 103 (fontified t) 103 112 (face font-lock-type-face fontified t) 112 115 (fontified t) 115 127 (fontified t) 127 135 (fontified t) 135 139 (face font-lock-variable-name-face fontified t) 139 155 (fontified t) 155 167 (fontified t) 167 175 (fontified t) 175 184 (face font-lock-variable-name-face fontified t) 184 192 (fontified t) 192 204 (fontified t) 204 212 (fontified t) 212 217 (face font-lock-variable-name-face fontified t) 217 219 (fontified t) 219 224 (face font-lock-type-face fontified t) 224 226 (fontified t) 226 231 (face font-lock-type-face fontified t) 231 233 (fontified t) 233 245 (fontified t) 245 249 (fontified t) 249 252 (fontified t) 252 264 (fontified t) 264 267 (fontified t)) . 328) (undo-tree-id679 . -266) (undo-tree-id680 . -266) (undo-tree-id681 . -265) (undo-tree-id682 . -265) (undo-tree-id683 . -22) (undo-tree-id684 . -266) (undo-tree-id685 . -265) (undo-tree-id686 . -265) (undo-tree-id687 . -265) (undo-tree-id688 . -265) (undo-tree-id689 . -265) (undo-tree-id690 . -265) (undo-tree-id691 . -265) (undo-tree-id692 . -265) (undo-tree-id693 . -265) (undo-tree-id694 . -265) (undo-tree-id695 . -265) (undo-tree-id696 . -265) (undo-tree-id697 . -265) (undo-tree-id698 . -265) (undo-tree-id699 . -267) (undo-tree-id700 . -267) (undo-tree-id701 . -267) (undo-tree-id702 . -267) (undo-tree-id703 . -267) (undo-tree-id704 . -267) (undo-tree-id705 . -252) (undo-tree-id706 . -252) (undo-tree-id707 . -233) (undo-tree-id708 . -233) (undo-tree-id709 . -192) (undo-tree-id710 . -192) (undo-tree-id711 . -155) (undo-tree-id712 . -155) (undo-tree-id713 . -115) (undo-tree-id714 . -115) (undo-tree-id715 . -87) (undo-tree-id716 . -87) (undo-tree-id717 . -30) (undo-tree-id718 . -30) (undo-tree-id719 . -30) (undo-tree-id720 . -30) (undo-tree-id721 . -87) (undo-tree-id722 . -87) (undo-tree-id723 . -115) (undo-tree-id724 . -115) (undo-tree-id725 . -155) (undo-tree-id726 . -155) (undo-tree-id727 . -192) (undo-tree-id728 . -192) (undo-tree-id729 . -233) (undo-tree-id730 . -233) (undo-tree-id731 . -252) (undo-tree-id732 . -252) (undo-tree-id733 . -267) (undo-tree-id734 . -267) (undo-tree-id735 . -267) (undo-tree-id736 . -267) (undo-tree-id737 . -252) (undo-tree-id738 . -252) (undo-tree-id739 . -233) (undo-tree-id740 . -233) (undo-tree-id741 . -192) (undo-tree-id742 . -192) (undo-tree-id743 . -155) (undo-tree-id744 . -155) (undo-tree-id745 . -115) (undo-tree-id746 . -115) (undo-tree-id747 . -87) (undo-tree-id748 . -87) (undo-tree-id749 . -30) (undo-tree-id750 . -30) (undo-tree-id751 . -30) (undo-tree-id752 . -30) (undo-tree-id753 . -87) (undo-tree-id754 . -87) (undo-tree-id755 . -115) (undo-tree-id756 . -115) (undo-tree-id757 . -155) (undo-tree-id758 . -155) (undo-tree-id759 . -192) (undo-tree-id760 . -192) (undo-tree-id761 . -233) (undo-tree-id762 . -233) (undo-tree-id763 . -252) (undo-tree-id764 . -252) (undo-tree-id765 . -267) (undo-tree-id766 . -267) (undo-tree-id767 . -267) (undo-tree-id768 . -267) (undo-tree-id769 . -252) (undo-tree-id770 . -252) (undo-tree-id771 . -233) (undo-tree-id772 . -233) (undo-tree-id773 . -192) (undo-tree-id774 . -192) (undo-tree-id775 . -155) (undo-tree-id776 . -155) (undo-tree-id777 . -115) (undo-tree-id778 . -115) (undo-tree-id779 . -87) (undo-tree-id780 . -87) (undo-tree-id781 . -30) (undo-tree-id782 . -30) (undo-tree-id783 . -30) (undo-tree-id784 . -30) (undo-tree-id785 . -87) (undo-tree-id786 . -87) (undo-tree-id787 . -115) (undo-tree-id788 . -115) (undo-tree-id789 . -155) (undo-tree-id790 . -155) (undo-tree-id791 . -192) (undo-tree-id792 . -192) (undo-tree-id793 . -233) (undo-tree-id794 . -233) (undo-tree-id795 . -252) (undo-tree-id796 . -252) (undo-tree-id797 . -252) (undo-tree-id798 . -252) (undo-tree-id799 . -267) (undo-tree-id800 . -267) (undo-tree-id801 . -252) (undo-tree-id802 . -252) (undo-tree-id803 . -233) (undo-tree-id804 . -233) (undo-tree-id805 . -192) (undo-tree-id806 . -192) (undo-tree-id807 . -155) (undo-tree-id808 . -155) (undo-tree-id809 . -115) (undo-tree-id810 . -115) (undo-tree-id811 . -87) (undo-tree-id812 . -87) (undo-tree-id813 . -30) (undo-tree-id814 . -30) (undo-tree-id815 . -30) (undo-tree-id816 . -30) (undo-tree-id817 . -87) (undo-tree-id818 . -87) (undo-tree-id819 . -115) (undo-tree-id820 . -115) (undo-tree-id821 . -155) (undo-tree-id822 . -155) (undo-tree-id823 . -192) (undo-tree-id824 . -192) (undo-tree-id825 . -233) (undo-tree-id826 . -233) (undo-tree-id827 . -252) (undo-tree-id828 . -252) (undo-tree-id829 . -252) (undo-tree-id830 . -252) (undo-tree-id831 . -265) (undo-tree-id832 . -265) (undo-tree-id833 . -250) (undo-tree-id834 . -250) (undo-tree-id835 . -214) (undo-tree-id836 . -214) (undo-tree-id837 . -177) (undo-tree-id838 . -177) (undo-tree-id839 . -137) (undo-tree-id840 . -137) (undo-tree-id841 . -109) (undo-tree-id842 . -109) (undo-tree-id843 . -52) (undo-tree-id844 . -52) (undo-tree-id845 . -22) (undo-tree-id846 . -22) (undo-tree-id847 . -22) (undo-tree-id848 . -22) (undo-tree-id849 . -22) (undo-tree-id850 . -22) (undo-tree-id851 . -52) (undo-tree-id852 . -52) (undo-tree-id853 . -109) (undo-tree-id854 . -109) (undo-tree-id855 . -137) (undo-tree-id856 . -137) (undo-tree-id857 . -177) (undo-tree-id858 . -177) (undo-tree-id859 . -214) (undo-tree-id860 . -214) (undo-tree-id861 . -251) (undo-tree-id862 . -251) (undo-tree-id863 . -252) (undo-tree-id864 . -266) (undo-tree-id865 . -266) (undo-tree-id866 . -266) (undo-tree-id867 . -266) (undo-tree-id868 . -267) 594) nil (25825 22679 21253 756000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-string-face fontified t)) . 375) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (t 25825 22679 24630 900000)) nil (25825 22693 216239 422000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-string-face fontified t)) . 375) (undo-tree-id913 . -1) (undo-tree-id914 . -1)) nil (25825 22693 216234 242000) 0 nil])
([nil nil ((2398 . 2399) (#("0" 0 1 (fontified t)) . 2398) (undo-tree-id918 . -1) (t 25825 22693 217964 490000)) nil (25825 22709 102231 996000) 0 nil])
([nil nil ((2453 . 2454) (#("2" 0 1 (fontified t)) . 2453) (undo-tree-id917 . -1)) nil (25825 22731 956621 187000) 0 nil])
([nil nil ((747 . 748) (#("e" 0 1 (face font-lock-type-face fontified t)) . -747) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) 748 (743 . 748) (#("ORANGE_RED" 0 6 (face font-lock-type-face fontified t) 6 10 (face font-lock-type-face fontified t)) . 743) (undo-tree-id932 . -9) (undo-tree-id933 . 4) (undo-tree-id934 . -10) (undo-tree-id935 . -10) (t 25825 22709 101298 111000)) nil (25825 22744 827055 424000) 0 nil] [nil nil ((#("ORANGE" 0 6 (face font-lock-type-face fontified t)) . 743) (undo-tree-id919 . -5) (undo-tree-id920 . -6) (undo-tree-id921 . -6) (t 25825 22709 101298 111000)) ((743 . 749)) (25825 22731 956308 109000) 0 nil])
([nil nil ((1154 . 1155) (#("e" 0 1 (fontified nil)) . -1154) (undo-tree-id922 . -1) 1155 (1150 . 1155) (#("GREEN" 0 5 (face font-lock-type-face fontified t)) . 1150) (undo-tree-id923 . -4) (undo-tree-id924 . -4) (undo-tree-id925 . -4) (undo-tree-id926 . -5) (undo-tree-id927 . -5)) nil (25825 22744 827046 547000) 0 nil])
nil
([nil nil ((#("            TextSection::new(
                \"This text changes in the bottom right - \",
                TextStyle {
                    font: font.clone(),
                    font_size: 30.0,
                    color: Color::RED,
                },
            ),
" 0 12 (fontified t) 12 23 (face font-lock-type-face fontified t) 23 30 (fontified t) 30 46 (fontified t) 46 88 (face font-lock-string-face fontified t) 88 90 (fontified t) 90 106 (fontified t) 106 115 (face font-lock-type-face fontified t) 115 138 (fontified t) 138 142 (face font-lock-variable-name-face fontified t) 142 178 (fontified t) 178 187 (face font-lock-variable-name-face fontified t) 187 215 (fontified t) 215 220 (face font-lock-variable-name-face fontified t) 220 222 (fontified t) 222 227 (face font-lock-type-face fontified t) 227 229 (fontified t) 229 232 (face font-lock-type-face fontified t) 232 268 (fontified t)) . 328) (undo-tree-id937 . -253) (undo-tree-id938 . -267) (undo-tree-id939 . -253) (undo-tree-id940 . -266) (undo-tree-id941 . -266) (undo-tree-id942 . -251) (undo-tree-id943 . -251) (undo-tree-id944 . -229) (undo-tree-id945 . -229) (undo-tree-id946 . -192) (undo-tree-id947 . -192) (undo-tree-id948 . -152) (undo-tree-id949 . -152) (undo-tree-id950 . -116) (undo-tree-id951 . -116) (undo-tree-id952 . -64) (undo-tree-id953 . -64) (undo-tree-id954 . -28) (undo-tree-id955 . -28) (undo-tree-id956 . -28) (undo-tree-id957 . -28) (undo-tree-id958 . -28) (undo-tree-id959 . -28) (undo-tree-id960 . -28) (undo-tree-id961 . -268) (undo-tree-id962 . -268) (undo-tree-id963 . -253) (undo-tree-id964 . -253) (undo-tree-id965 . -234) (undo-tree-id966 . -234) (undo-tree-id967 . -195) (undo-tree-id968 . -195) (undo-tree-id969 . -158) (undo-tree-id970 . -158) (undo-tree-id971 . -118) (undo-tree-id972 . -118) (undo-tree-id973 . -90) (undo-tree-id974 . -90) (undo-tree-id975 . -30) (undo-tree-id976 . -30) (undo-tree-id977 . -30) (undo-tree-id978 . -30) (undo-tree-id979 . -90) (undo-tree-id980 . -90) (undo-tree-id981 . -118) (undo-tree-id982 . -118) (undo-tree-id983 . -158) (undo-tree-id984 . -158) (undo-tree-id985 . -195) (undo-tree-id986 . -195) (undo-tree-id987 . -234) (undo-tree-id988 . -234) (undo-tree-id989 . -253) (undo-tree-id990 . -253) (undo-tree-id991 . -253) (undo-tree-id992 . -253) (undo-tree-id993 . -253) (undo-tree-id994 . -268) 581 (t 25825 22744 831298 758000)) nil (25825 22780 604318 572000) 0 nil])
([nil nil ((2125 . 2126) (#("1" 0 1 (fontified t)) . 2125) (undo-tree-id936 . -1)) nil (25825 22780 604290 550000) 0 nil])
([nil nil ((nil fontified t 2180 . 2181) (#("3" 0 1 (fontified t)) . -2180) (2181 . 2182) 2180) nil (25825 22780 604280 541000) 0 nil])
([nil nil ((#("," 0 1 (face font-lock-string-face fontified t)) . 549) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (t 25825 22780 607966 72000)) nil (25825 22800 997173 908000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 549) (undo-tree-id995 . -1) (undo-tree-id996 . -1)) nil (25825 22800 997165 682000) 0 nil])
([nil nil ((549 . 551)) nil (25825 22879 406721 266000) 0 nil])
([nil nil ((1526 . 1529) (#("&" 0 1 (fontified t)) . -1526) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) 1527 (1526 . 1527) (#("    " 0 4 (fontified nil)) . -1525) (undo-tree-id1177 . -4) (undo-tree-id1178 . -4) (undo-tree-id1179 . -4) (undo-tree-id1180 . -4) (1529 . 1530) (1523 . 1529) (1503 . 1523) (1497 . 1503) (1494 . 1497) (#("5" 0 1 (fontified t)) . -1494) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (#("0" 0 1 (fontified t)) . -1495) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) 1496 (1492 . 1496) (1483 . 1492) (#("font" 0 4 (fontified t)) . -1483) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -2) (undo-tree-id1188 . -2) (undo-tree-id1189 . -3) (undo-tree-id1190 . -3) (undo-tree-id1191 . -4) (undo-tree-id1192 . -4) (undo-tree-id1193 . -4) (undo-tree-id1194 . -4) (undo-tree-id1195 . -4) (undo-tree-id1196 . -4) (undo-tree-id1197 . -4) (undo-tree-id1198 . -4) 1487 (1483 . 1487) (1477 . 1483) (1476 . 1477) (1458 . 1476) (1452 . 1458) (#(" " 0 1 (fontified t)) . -1452) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) 1453 (1451 . 1453) (1442 . 1451) (#("Text" 0 4 (face font-lock-type-face fontified t)) . -1442) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -2) (undo-tree-id1206 . -2) (undo-tree-id1207 . -3) (undo-tree-id1208 . -3) (undo-tree-id1209 . -4) (undo-tree-id1210 . -4) (undo-tree-id1211 . -4) (undo-tree-id1212 . -4) (undo-tree-id1213 . -4) (undo-tree-id1214 . -4) (undo-tree-id1215 . -4) (undo-tree-id1216 . -4) (undo-tree-id1217 . -4) (undo-tree-id1218 . -4) (undo-tree-id1219 . -4) (undo-tree-id1220 . -4) (undo-tree-id1221 . -4) (undo-tree-id1222 . -4) 1446 (1442 . 1446) (1440 . 1442) (1435 . 1440) (1434 . 1435) (#("i" 0 1 (face font-lock-string-face fontified t)) . -1434) (undo-tree-id1223 . -1) (1414 . 1435) (1412 . 1414) (1408 . 1412) (#("i" 0 1 (fontified t)) . -1408) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (1397 . 1409) (1387 . 1397) (#("Text" 0 4 (face font-lock-type-face fontified t)) . -1387) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -2) (undo-tree-id1229 . -2) (undo-tree-id1230 . -3) (undo-tree-id1231 . -3) (undo-tree-id1232 . -4) (undo-tree-id1233 . -4) (undo-tree-id1234 . -4) (undo-tree-id1235 . -4) (undo-tree-id1236 . -4) (undo-tree-id1237 . -4) (undo-tree-id1238 . -4) (undo-tree-id1239 . -4) 1391 (1381 . 1391) (#("a" 0 1 (fontified t)) . -1381) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (#("w" 0 1 (fontified t)) . -1382) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) 1383 (1371 . 1383) (1367 . 1371) (#("    " 0 4 (fontified nil)) . 1366) (undo-tree-id1246 . -4) (undo-tree-id1247 . -4) (undo-tree-id1248 . -4) (undo-tree-id1249 . -4) (1370 . 1371) (1365 . 1370) (t 25825 22800 997966 440000) 1364) nil (25825 61110 299093 916000) 0 nil] [nil nil ((550 . 551) (t 25825 22800 997966 440000)) ((#("	" 0 1 (face font-lock-string-face fontified t)) . 550)) (25825 22879 406484 361000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 1526) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1)) nil (25825 61110 298907 867000) 0 nil])
nil
([nil nil ((#(")" 0 1 (fontified t)) . 1527) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1)) nil (25825 61110 298904 881000) 0 nil])
([nil nil ((1614 . 1620) (1613 . 1614) (1610 . 1613) (#("*" 0 1 (fontified t)) . -1610) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) 1611 (1610 . 1611) (#("." 0 1 (fontified t)) . -1610) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) 1611 (1606 . 1611) (#("p" 0 1 (fontified t)) . -1606) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (#("x" 0 1 (fontified t)) . -1607) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) 1608 (1605 . 1608) (#("A" 0 1 (face font-lock-type-face fontified t)) . -1605) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) 1606 (1596 . 1606) (1590 . 1596) (1589 . 1590) (1581 . 1589) (#("A" 0 1 (face font-lock-type-face fontified t)) . -1581) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) 1582 (1581 . 1582) (#("a" 0 1 (fontified t)) . -1581) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) 1582 (1579 . 1582) (1567 . 1579) (#("Pos" 0 3 (face font-lock-type-face fontified t)) . -1567) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -2) (undo-tree-id1086 . -2) (undo-tree-id1087 . -3) (undo-tree-id1088 . -3) (undo-tree-id1089 . -3) (undo-tree-id1090 . -3) (undo-tree-id1091 . -3) (undo-tree-id1092 . -3) 1570 (1565 . 1570) (1552 . 1565) (#("pos" 0 3 (fontified t)) . -1552) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -2) (undo-tree-id1096 . -2) (undo-tree-id1097 . -3) (undo-tree-id1098 . -3) (undo-tree-id1099 . -3) (undo-tree-id1100 . -3) (undo-tree-id1101 . -3) (undo-tree-id1102 . -3) (undo-tree-id1103 . -3) (undo-tree-id1104 . -3) (undo-tree-id1105 . -3) (undo-tree-id1106 . -3) (undo-tree-id1107 . -3) (undo-tree-id1108 . -3) 1555 (#("i" 0 1 (fontified t)) . -1555) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) 1556 (1555 . 1556) (#("i" 0 1 (fontified t)) . -1555) (undo-tree-id1113 . -1) (1552 . 1556) (1546 . 1552) (1538 . 1546) (#("{" 0 1 (fontified t)) . -1538) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) 1539 (1538 . 1539) (1528 . 1538) (#("with" 0 4 (fontified t)) . -1528) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -3) (undo-tree-id1121 . -3) (undo-tree-id1122 . -4) (undo-tree-id1123 . -4) (undo-tree-id1124 . -4) (undo-tree-id1125 . -4) (undo-tree-id1126 . -4) (undo-tree-id1127 . -4) 1532 (1529 . 1532) (#("i" 0 1 (fontified t)) . -1529) (undo-tree-id1128 . -1) (1527 . 1530) (#("
" 0 1 (fontified t)) . -1527) (undo-tree-id1129 . 1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (#("	" 0 1 (fontified t)) . -1528) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (#("	" 0 1 (fontified t)) . -1529) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (#(" " 0 1 (fontified t)) . -1530) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (#(" " 0 1 (fontified t)) . -1531) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (#(" " 0 1 (fontified t)) . -1532) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (#(" " 0 1 (fontified t)) . -1533) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) 1534 (1527 . 1534) (#("." 0 1 (fontified t)) . -1527) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) 1528 (1527 . 1528)) nil (25825 61110 298894 11000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1619 . 1620) (#("
" 0 1 (fontified nil)) . -1638) (1614 . 1639) 1595) nil (25825 61110 298381 278000) 0 nil])
([nil nil ((1621 . 1625) (#("i" 0 1 (face font-lock-variable-name-face fontified t)) . -1621) (undo-tree-id1043 . -1) (1620 . 1622) (#("top" 0 3 (face font-lock-variable-name-face fontified t)) . 1620) (undo-tree-id1044 . -2) (undo-tree-id1045 . -3) (undo-tree-id1046 . -3)) nil (25825 61110 298379 234000) 0 nil])
([nil nil ((1635 . 1636)) nil (25825 61110 298375 417000) 0 nil])
([nil nil ((1647 . 1663) (1641 . 1647) 1635) nil (25825 61110 298374 265000) 0 nil])
([nil nil ((1386 . 1395) (1413 . 1425) (#("	" 0 1 (fontified t)) . 1413) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (1441 . 1453) (#("	" 0 1 (fontified t)) . 1441) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (1451 . 1452) (1453 . 1456) (#("	" 0 1 (fontified t)) . 1453) (1458 . 1467) (1478 . 1488) (#("	" 0 1 (fontified t)) . 1478) (1483 . 1485) (1498 . 1505) (#("	" 0 1 (fontified t)) . 1498) (1503 . 1508) (1524 . 1536) (#("	" 0 1 (fontified t)) . 1524) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (1526 . 1536) (1527 . 1536) (1547 . 1548) (#("	" 0 1 (fontified t)) . 1547) (1552 . 1559) (1591 . 1593) (#("	" 0 1 (fontified t)) . 1591) (1596 . 1602) (1615 . 1618) (#("	" 0 1 (fontified t)) . 1615) (1620 . 1625) (1642 . 1646) (#("	" 0 1 (fontified t)) . 1642) (1647 . 1651) (1658 . 1667) (1661 . 1662) (#(");" 0 2 (fontified t)) . 1661) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (#("	" 0 1 (fontified t)) . 1664) (1669 . 1671) 1662) nil (25825 61110 298368 334000) 0 nil])
([nil nil ((1550 . 1552) (t 25825 61110 305327 901000)) nil (25825 61137 117588 328000) 0 nil])
([nil nil ((nil rear-nonsticky nil 137 . 138) (#("
" 0 1 (fontified nil)) . -178) (137 . 179) 127 (t 25825 61137 121995 54000)) nil (25825 61750 93769 735000) 0 nil])
([nil nil ((137 . 138) 118) nil (25825 61750 93768 953000) 0 nil])
([nil nil ((172 . 176) (#("i" 0 1 (face font-lock-type-face fontified t)) . -172) (undo-tree-id1404 . -1) (167 . 173) (#("T" 0 1 (face font-lock-type-face fontified t)) . -167) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -168) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (#("x" 0 1 (face font-lock-type-face fontified t)) . -169) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -170) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) 171 (#("Changes" 0 7 (face font-lock-type-face fontified t)) . 171) (undo-tree-id1449 . -6) (undo-tree-id1450 . -7) (undo-tree-id1451 . -7)) nil (25825 61750 93766 759000) 0 nil])
([nil nil ((178 . 183) (#("i" 0 1 (face font-lock-type-face fontified t)) . -178) (undo-tree-id1403 . -1) (177 . 179) (176 . 177)) nil (25825 61750 93679 916000) 0 nil])
([nil nil ((1854 . 1873) (#("i" 0 1 (face font-lock-type-face fontified t)) . -1854) (undo-tree-id1332 . -1) (1853 . 1855) (1852 . 1853) (#("{" 0 1 (fontified t)) . -1852) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) 1853 (1852 . 1853) (#("[" 0 1 (fontified t)) . -1852) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (#("{" 0 1 (fontified t)) . -1853) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) 1854 (1852 . 1854) (1843 . 1852) (#("Maze" 0 4 (face font-lock-type-face fontified t)) . -1843) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -2) (undo-tree-id1344 . -2) (undo-tree-id1345 . -3) (undo-tree-id1346 . -3) (undo-tree-id1347 . -4) (undo-tree-id1348 . -4) (undo-tree-id1349 . -4) (undo-tree-id1350 . -4) (undo-tree-id1351 . -4) (undo-tree-id1352 . -4) (undo-tree-id1353 . -4) (undo-tree-id1354 . -4) 1847 (1843 . 1847) (#("m" 0 1 (fontified t)) . -1843) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (#("a" 0 1 (fontified t)) . -1844) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (#("z" 0 1 (fontified t)) . -1845) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (#("e" 0 1 (fontified t)) . -1846) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) 1847 (1841 . 1847)) nil (25825 61750 93675 167000) 0 nil])
([nil nil ((#("Timer::from_seconds()," 0 5 (face font-lock-type-face fontified t) 5 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t)) . 1853) (undo-tree-id1280 . -21) (undo-tree-id1281 . 2) (undo-tree-id1282 . -21) (undo-tree-id1283 . -21) (undo-tree-id1284 . -21) (undo-tree-id1285 . -21) (undo-tree-id1286 . -21) (undo-tree-id1287 . -21) (undo-tree-id1288 . -21) (undo-tree-id1289 . -21) (undo-tree-id1290 . -21) (undo-tree-id1291 . -21) (undo-tree-id1292 . -21) (undo-tree-id1293 . -21) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -3) (undo-tree-id1297 . -3) (undo-tree-id1298 . -4) (undo-tree-id1299 . -4) (undo-tree-id1300 . -5) (undo-tree-id1301 . -5) (undo-tree-id1302 . -5) (undo-tree-id1303 . -5) (undo-tree-id1304 . -8) (undo-tree-id1305 . -8) (undo-tree-id1306 . -9) (undo-tree-id1307 . -9) (undo-tree-id1308 . -10) (undo-tree-id1309 . -10) (undo-tree-id1310 . -11) (undo-tree-id1311 . -11) (undo-tree-id1312 . -11) (undo-tree-id1313 . -11) (undo-tree-id1314 . -12) (undo-tree-id1315 . -12) (undo-tree-id1316 . -13) (undo-tree-id1317 . -13) (undo-tree-id1318 . -14) (undo-tree-id1319 . -14) (undo-tree-id1320 . -15) (undo-tree-id1321 . -15) (undo-tree-id1322 . -16) (undo-tree-id1323 . -16) (undo-tree-id1324 . -20) (undo-tree-id1325 . -20) (undo-tree-id1326 . -19) (undo-tree-id1327 . -19) (undo-tree-id1328 . -19) (undo-tree-id1329 . -19) (undo-tree-id1330 . -22) (undo-tree-id1331 . -22)) nil (25825 61750 93525 466000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-type-face fontified t)) . 175) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1)) nil (25825 61750 93504 697000) 0 nil])
([nil nil ((175 . 176)) nil (25825 61750 93500 219000) 0 nil])
([nil nil ((177 . 184) (#("Timer" 0 5 (face font-lock-type-face fontified t)) . 177) (undo-tree-id1251 . -4) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -3) (undo-tree-id1255 . -3) (undo-tree-id1256 . -4) (undo-tree-id1257 . -4) (undo-tree-id1258 . -4) (undo-tree-id1259 . -4) (undo-tree-id1260 . -5) (undo-tree-id1261 . -5) (undo-tree-id1262 . -5) (undo-tree-id1263 . -5) (undo-tree-id1264 . -5) (undo-tree-id1265 . -5) (undo-tree-id1266 . -5) (undo-tree-id1267 . -5) (undo-tree-id1268 . -4) (undo-tree-id1269 . -4) (undo-tree-id1270 . -5) (undo-tree-id1271 . -5)) nil (25825 61750 93498 987000) 0 nil])
([nil nil ((183 . 184) (180 . 183) (#("i" 0 1 (face font-lock-type-face fontified t)) . -180) (undo-tree-id1250 . -1) (177 . 181)) nil (25825 61750 93855 315000) 0 nil])
([nil nil ((176 . 177) (#("(" 0 1 (fontified t)) . 176) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1)) nil (25825 61818 935901 482000) 0 nil] [nil nil ((191 . 192)) ((#(">" 0 1 (fontified t)) . 191)) (25825 61750 93475 653000) 0 nil])
([nil nil ((177 . 182)) nil (25825 61818 935892 595000) 0 nil])
nil
([nil nil ((196 . 197) (#(")" 0 1 (fontified t)) . 196) (undo-tree-id1535 . -1)) nil (25825 61818 935891 934000) 0 nil])
([nil nil ((197 . 198) (196 . 197)) nil (25825 61818 935890 812000) 0 nil])
([nil nil ((189 . 194) (#("i" 0 1 (fontified t)) . -189) (undo-tree-id1534 . -1) (182 . 190)) nil (25825 61818 935890 171000) 0 nil])
([nil nil ((202 . 203) (#(";" 0 1 (fontified t)) . -202) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) 203 (192 . 203) (#("n" 0 1 (fontified t)) . -192) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) 193 (189 . 193) (182 . 189) (177 . 182) 175) nil (25825 61818 935888 507000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -236) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) 237 (235 . 237)) nil (25825 61818 935884 480000) 0 nil])
([nil nil ((1942 . 1950) (1932 . 1942) (#("sta" 0 3 (fontified t)) . -1932) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -2) (undo-tree-id1455 . -2) (undo-tree-id1456 . -3) (undo-tree-id1457 . -3) (undo-tree-id1458 . -3) (undo-tree-id1459 . -3) (undo-tree-id1460 . -3) (undo-tree-id1461 . -3) (undo-tree-id1462 . -3) (undo-tree-id1463 . -3) 1935 (1933 . 1935) (1923 . 1933) (1909 . 1923) (#("pla" 0 3 (fontified t)) . -1909) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -2) (undo-tree-id1467 . -2) (undo-tree-id1468 . -3) (undo-tree-id1469 . -3) (undo-tree-id1470 . -3) (undo-tree-id1471 . -3) (undo-tree-id1472 . -3) (undo-tree-id1473 . -3) 1912 (1907 . 1912) (#("(" 0 1 (fontified t)) . -1907) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) 1908) nil (25825 61818 935877 747000) 0 nil])
([nil nil ((1956 . 1957) (t 25825 61818 942007 214000)) nil (25825 61833 744301 237000) 0 nil])
([nil nil ((122 . 132) (118 . 122) (#("i" 0 1 (face font-lock-type-face fontified t)) . -118) (undo-tree-id1557 . -1) (107 . 119) (#("i" 0 1 (fontified t)) . -107) (undo-tree-id1558 . -1) (101 . 108) (97 . 101) (96 . 97) (95 . 96) (t 25825 61833 755340 800000) 94) nil (25825 61853 709090 769000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t rear-nonsticky t)) . 275) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (t 25825 61853 715341 154000)) nil (25825 61949 607674 859000) 0 nil])
([nil nil ((213 . 214) (1523 . 1524) (#("(" 0 1 (fontified t)) . 1533) (1933 . 1936) (1934 . 1939) (1943 . 1944) (1944 . 1955) (1945 . 1946) (1967 . 1978) (1968 . 1969) (1984 . 1989) (1985 . 1989) (1986 . 1987)) ((#("," 0 1 (fontified nil)) . 1986) (#("    " 0 4 (fontified nil)) . 1985) (#(",
   " 0 2 (fontified nil) 2 5 (fontified t)) . 1984) (#(" " 0 1 (fontified nil)) . 1968) (#("
          " 0 1 (fontified nil) 1 11 (fontified t)) . 1967) (#(" " 0 1 (fontified nil)) . 1945) (#("
          " 0 1 (fontified nil) 1 11 (fontified t)) . 1944) (#(" " 0 1 (fontified nil)) . 1943) (#("     " 0 5 (fontified nil)) . 1934) (#("
  " 0 3 (fontified t)) . 1933) (1533 . 1534) (#("(" 0 1 (fontified t)) . 1523) (#(" " 0 1 (fontified t)) . 213) (t 25825 61868 158674 743000)) (25825 61950 757851 296000) 0 nil])
([nil nil ((apply -60 1506 2101 undo--wrap-and-run-primitive-undo 1506 2101 ((2092 . 2095) (2078 . 2081) (2045 . 2048) (2007 . 2010) (1984 . 1987) (1969 . 1972) (1942 . 1945) (1905 . 1908) (1871 . 1874) (1817 . 1820) (1786 . 1789) (1773 . 1776) (1755 . 1758) (1715 . 1718) (1679 . 1682) (1640 . 1643) (1613 . 1616) (1571 . 1574) (1534 . 1537) (1510 . 1513) 2039))) nil (25825 62023 449638 189000) 0 nil] [nil nil ((1559 . 1560) (t 25825 61868 158674 743000)) ((#("s" 0 1 (fontified t)) . 1559) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1)) (25825 61948 736405 826000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1509 . 1510) (#("
" 0 1 (fontified nil rear-nonsticky t face font-lock-comment-face)) . -2098) (1505 . 2099)) nil (25825 62023 449637 738000) 0 nil])
([nil nil ((1561 . 1562)) ((#("[" 0 1 (fontified t)) . 1561)) (25825 61948 289484 213000) 0 nil])
([nil nil ((apply 60 1506 2039 undo--wrap-and-run-primitive-undo 1506 2039 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2035) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2024) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1994) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1959) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1939) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1927) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1903) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1869) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1838) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1787) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1759) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1749) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1734) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1697) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1664) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1628) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1604) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1565) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1531) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1510) 2099))) nil (25825 62023 449637 167000) 0 nil])
([nil nil ((2037 . 2038)) ((#("]" 0 1 (fontified t)) . 2037) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1)) (25825 61947 359223 399000) 0 nil])
([nil nil ((#("        MazeTimer {
            player_started: false,
            start_time: None,
        },
" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 8 (fontified t) 8 17 (face font-lock-type-face fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 24 (fontified t) 24 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 46 (face font-lock-variable-name-face fontified t) 46 48 (fontified t) 48 53 (face font-lock-keyword-face fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 59 (fontified t) 59 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 77 (face font-lock-variable-name-face fontified t) 77 79 (fontified t) 79 83 (face font-lock-type-face fontified t) 83 85 (fontified t) 85 88 (fontified t) 88 89 (fontified t) 89 93 (fontified t) 93 94 (fontified t) 94 95 (fontified t) 95 96 (fontified t)) . 1935) (undo-tree-id1715 . -89) (undo-tree-id1716 . -95) (undo-tree-id1717 . -4) (undo-tree-id1718 . -89) (undo-tree-id1719 . -4) (undo-tree-id1720 . -4) (undo-tree-id1721 . -24) (undo-tree-id1722 . -24) (undo-tree-id1723 . -59) (undo-tree-id1724 . -59) (undo-tree-id1725 . -89) (undo-tree-id1726 . -89) (undo-tree-id1727 . -89) (undo-tree-id1728 . -89) (undo-tree-id1729 . -59) (undo-tree-id1730 . -59) (undo-tree-id1731 . -24) (undo-tree-id1732 . -24) (undo-tree-id1733 . -4) (undo-tree-id1734 . -4) (undo-tree-id1735 . -4) (undo-tree-id1736 . -4) (undo-tree-id1737 . -24) (undo-tree-id1738 . -24) (undo-tree-id1739 . -59) (undo-tree-id1740 . -59) (undo-tree-id1741 . -85) (undo-tree-id1742 . -89) (undo-tree-id1743 . -89) (undo-tree-id1744 . -89) (undo-tree-id1745 . -89) (undo-tree-id1746 . -96) 2024) nil (25825 62023 449636 5000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t)) . 2037) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1)) ((2037 . 2038)) (25825 61947 359134 272000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 1939) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1)) nil (25825 62023 449624 343000) 0 nil])
nil
([nil nil ((#("(" 0 1 (fontified t)) . 1525) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1)) nil (25825 62023 449622 780000) 0 nil])
([nil nil ((1558 . 1559)) nil (25825 62023 449621 497000) 0 nil])
([nil nil ((1560 . 1561)) nil (25825 62023 449621 17000) 0 nil])
([nil nil ((1754 . 1755)) nil (25825 62023 449620 636000) 0 nil])
([nil nil ((1578 . 1584) (1567 . 1578) (#("Text" 0 4 (face font-lock-type-face fontified t)) . -1567) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -2) (undo-tree-id1696 . -2) (undo-tree-id1697 . -3) (undo-tree-id1698 . -3) (undo-tree-id1699 . -4) (undo-tree-id1700 . -4) (undo-tree-id1701 . -4) (undo-tree-id1702 . -4) (undo-tree-id1703 . -4) (undo-tree-id1704 . -4) (undo-tree-id1705 . -4) (undo-tree-id1706 . -4) (undo-tree-id1707 . -4) (undo-tree-id1708 . -4) (undo-tree-id1709 . -4) (undo-tree-id1710 . -4) 1571 (1567 . 1571) (1561 . 1567) 1534) nil (25825 62023 449619 614000) 0 nil])
([nil nil ((1768 . 1769)) nil (25825 62023 449609 305000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 1767) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1)) nil (25825 62023 449608 453000) 0 nil])
([nil nil ((#("            " 0 4 (fontified nil) 4 6 (fontified nil) 6 12 (fontified nil)) . -1706) (undo-tree-id1635 . -4) (undo-tree-id1636 . -4) (undo-tree-id1637 . -4) (undo-tree-id1638 . -4) (undo-tree-id1639 . -8) (undo-tree-id1640 . -8) (1704 . 1706) (#("                " 0 4 (fontified nil) 4 7 (fontified nil) 7 11 (fontified nil) 11 16 (fontified nil)) . -1683) (undo-tree-id1641 . -4) (undo-tree-id1642 . -4) (undo-tree-id1643 . -4) (undo-tree-id1644 . -4) (undo-tree-id1645 . -8) (undo-tree-id1646 . -8) (undo-tree-id1647 . -13) (undo-tree-id1648 . -13) (undo-tree-id1649 . -13) (undo-tree-id1650 . -13) (1677 . 1683) (#("                " 0 4 (fontified nil) 4 10 (fontified nil) 10 14 (fontified nil) 14 16 (fontified nil)) . -1660) (undo-tree-id1651 . -4) (undo-tree-id1652 . -4) (undo-tree-id1653 . -4) (undo-tree-id1654 . -4) (undo-tree-id1655 . -8) (undo-tree-id1656 . -8) (undo-tree-id1657 . -13) (undo-tree-id1658 . -13) (1654 . 1660) (#("                " 0 3 (fontified nil) 3 4 (fontified nil) 4 7 (fontified nil) 7 9 (fontified nil) 9 16 (fontified nil)) . -1634) (undo-tree-id1659 . -4) (undo-tree-id1660 . -4) (undo-tree-id1661 . -4) (undo-tree-id1662 . -4) (undo-tree-id1663 . -8) (undo-tree-id1664 . -8) (undo-tree-id1665 . -13) (undo-tree-id1666 . -13) (1628 . 1634) (#("            " 0 4 (fontified nil) 4 12 (fontified nil)) . -1616) (undo-tree-id1667 . -4) (undo-tree-id1668 . -4) (undo-tree-id1669 . -4) (undo-tree-id1670 . -4) (undo-tree-id1671 . -9) (undo-tree-id1672 . -9) (undo-tree-id1673 . -8) (undo-tree-id1674 . -8) (1614 . 1616) (#("            " 0 4 (fontified nil) 4 12 (fontified nil)) . -1587) (undo-tree-id1675 . -4) (undo-tree-id1676 . -4) (undo-tree-id1677 . -4) (undo-tree-id1678 . -4) (undo-tree-id1679 . -9) (undo-tree-id1680 . -9) (undo-tree-id1681 . -9) (undo-tree-id1682 . -9) (undo-tree-id1683 . -8) (undo-tree-id1684 . -8) (1585 . 1587) 1598) nil (25825 62023 449600 438000) 0 nil])
([nil nil ((#("
	    " 0 1 (fontified t) 1 6 (fontified t)) . 1561) (undo-tree-id1574 . -6) (undo-tree-id1575 . -6) (undo-tree-id1576 . -6) (undo-tree-id1577 . -6) (undo-tree-id1578 . -6) (undo-tree-id1579 . -6) (undo-tree-id1580 . -6) (undo-tree-id1581 . -6) (undo-tree-id1582 . -6) (undo-tree-id1583 . -6) (undo-tree-id1584 . -6) (undo-tree-id1585 . -6) (undo-tree-id1586 . -6) (undo-tree-id1587 . -6) (undo-tree-id1588 . -6) (undo-tree-id1589 . -6) (undo-tree-id1590 . -6) (undo-tree-id1591 . -6) (1585 . 1597) (#("		" 0 2 (fontified t)) . 1585) (undo-tree-id1592 . -2) (undo-tree-id1593 . -2) (undo-tree-id1594 . -2) (undo-tree-id1595 . -2) (undo-tree-id1596 . -2) (undo-tree-id1597 . -2) (undo-tree-id1598 . -2) (undo-tree-id1599 . -2) (undo-tree-id1600 . -2) (undo-tree-id1601 . -2) (undo-tree-id1602 . -2) (undo-tree-id1603 . -2) (undo-tree-id1604 . -2) (undo-tree-id1605 . -2) (undo-tree-id1606 . -2) (undo-tree-id1607 . -2) (1614 . 1626) (#("		" 0 2 (fontified t)) . 1614) (undo-tree-id1608 . -2) (undo-tree-id1609 . -2) (undo-tree-id1610 . -2) (undo-tree-id1611 . -2) (undo-tree-id1612 . -2) (undo-tree-id1613 . -2) (undo-tree-id1614 . -2) (undo-tree-id1615 . -2) (undo-tree-id1616 . -2) (undo-tree-id1617 . -2) (1628 . 1639) (#("		" 0 2 (fontified t)) . 1628) (undo-tree-id1618 . -2) (undo-tree-id1619 . -2) (1634 . 1635) (1654 . 1663) (#("		" 0 2 (fontified t)) . 1654) (undo-tree-id1620 . -2) (undo-tree-id1621 . -2) (1660 . 1663) (1677 . 1683) (#("		" 0 2 (fontified t)) . 1677) (undo-tree-id1622 . -2) (undo-tree-id1623 . -2) (1683 . 1689) (1704 . 1716) (#("		" 0 2 (fontified t)) . 1704) (undo-tree-id1624 . -2) (undo-tree-id1625 . -2) (undo-tree-id1626 . -2) (undo-tree-id1627 . -2) (undo-tree-id1628 . -2) (undo-tree-id1629 . -2) (undo-tree-id1630 . -2) (undo-tree-id1631 . -2) (1707 . 1708) (#(")" 0 1 (fontified t)) . 1707) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (1717 . 1718) 1898) nil (25825 62023 449575 812000) 0 nil])
([nil nil ((1773 . 1775) (1772 . 1773) (t 25825 62023 458677 470000)) nil (25825 62071 53977 506000) 0 nil])
([nil nil ((#("				   " 0 7 (fontified t)) . -1774) (undo-tree-id1751 . -7) (undo-tree-id1752 . -7) (undo-tree-id1753 . -7) (undo-tree-id1754 . -7) 1781 (1773 . 1781) 1763) nil (25825 62071 53976 615000) 0 nil])
([nil nil ((1561 . 1567)) nil (25825 62071 53972 928000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1784 . 1785) (#("
" 0 1 (fontified nil)) . -1997) (1779 . 1998) 1778) nil (25825 62071 53972 126000) 0 nil])
([nil nil ((#("There should be a " 0 18 (face font-lock-string-face fontified t)) . 1816) (undo-tree-id1749 . -17) (undo-tree-id1750 . -18)) nil (25825 62071 53970 413000) 0 nil])
([nil nil ((#("timer" 0 1 (face font-lock-string-face fontified t) 1 5 (face font-lock-string-face fontified t)) . 1616) (undo-tree-id1747 . -4) (undo-tree-id1748 . -5)) nil (25825 62071 53966 265000) 0 nil])
([nil nil ((1562 . 1567) (#("	" 0 1 (fontified t)) . 1562) (1567 . 1570) (1585 . 1587) (1597 . 1599) (1619 . 1622) (1631 . 1632) (1643 . 1647) (1695 . 1699) (1712 . 1714) (1728 . 1730) (1749 . 1752) (1761 . 1762) (1764 . 1768) (1775 . 1779) (#("	" 0 1 (fontified t)) . 1775) (1780 . 1784) (1798 . 1800) (1810 . 1812) (1819 . 1822) (1831 . 1832) (1843 . 1847) (1895 . 1899) (1912 . 1913) (1928 . 1931) (1949 . 1952) (1961 . 1962) (1964 . 1968) (1975 . 1983) (#("
	" 0 1 (fontified t) 1 2 (fontified t)) . 1975) (undo-tree-id1755 . 2) 1943) nil (25825 62074 825294 358000) 0 nil])
([nil nil ((1525 . 1526) (t 25825 62074 828678 395000)) nil (25825 62139 969067 996000) 0 nil])
([nil nil ((2242 . 2243)) nil (25825 62139 969067 586000) 0 nil])
([nil nil ((2242 . 2244)) nil (25825 62139 969067 255000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 2242) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1)) nil (25825 62139 969066 574000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2242) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1)) nil (25825 62139 969062 817000) 0 nil])
([nil nil ((2236 . 2238)) nil (25825 62139 969060 372000) 0 nil])
([nil nil ((#("M" 0 1 (face font-lock-type-face fontified t)) . 2237) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1)) nil (25825 62139 969059 520000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2241 . 2242) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -2345) (2237 . 2346) 2236) nil (25825 62139 969056 24000) 0 nil])
([nil nil ((apply 12 2238 2334 undo--wrap-and-run-primitive-undo 2238 2334 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2327) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2297) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2262) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -2242) 2346))) nil (25825 62139 969054 922000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2236) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) 2297) nil (25825 62139 969052 147000) 0 nil])
([nil nil ((#("    // commands.spawn((
    //     TextBundle::from_section(
    //         \"There should be a timer\",
    //         TextStyle {
    //             font: font.clone(),
    //             font_size: 30.0,
    //             color: Color::WHITE,
    //         },
    //     )
    //     .with_style(Style {
    //         position_type: PositionType::Absolute,
    //         top: Val::Px(5.0),
    //         right: Val::Px(15.0),
    //         ..default()
    //     }),
    //     MazeTimer {
    //         player_started: false,
    //         start_time: None,
    //     },
    // ));
" 0 4 (fontified t) 4 7 (face font-lock-comment-delimiter-face fontified t) 7 21 (face font-lock-comment-face fontified t) 21 22 (face font-lock-comment-face fontified t) 22 23 (face font-lock-comment-face fontified t) 23 24 (face font-lock-comment-face fontified t) 24 28 (fontified t) 28 31 (face font-lock-comment-delimiter-face fontified t) 31 35 (face font-lock-comment-delimiter-face fontified t) 35 45 (face font-lock-comment-face fontified t) 45 61 (face font-lock-comment-face fontified t) 61 65 (fontified t) 65 68 (face font-lock-comment-delimiter-face fontified t) 68 76 (face font-lock-comment-delimiter-face fontified t) 76 96 (face font-lock-comment-face fontified t) 96 101 (face font-lock-comment-face fontified t) 101 103 (face font-lock-comment-face fontified t) 103 107 (fontified t) 107 110 (face font-lock-comment-delimiter-face fontified t) 110 118 (face font-lock-comment-delimiter-face fontified t) 118 127 (face font-lock-comment-face fontified t) 127 128 (face font-lock-comment-face fontified t) 128 130 (face font-lock-comment-face fontified t) 130 133 (fontified t) 133 134 (fontified t) 134 137 (face font-lock-comment-delimiter-face fontified t) 137 140 (face font-lock-comment-delimiter-face fontified t) 140 142 (face font-lock-comment-delimiter-face fontified t) 142 149 (face font-lock-comment-delimiter-face fontified t) 149 153 (face font-lock-comment-face fontified t) 153 169 (face font-lock-comment-face fontified t) 169 173 (fontified t) 173 176 (face font-lock-comment-delimiter-face fontified t) 176 182 (face font-lock-comment-delimiter-face fontified t) 182 186 (face font-lock-comment-delimiter-face fontified t) 186 188 (face font-lock-comment-delimiter-face fontified t) 188 197 (face font-lock-comment-face fontified t) 197 205 (face font-lock-comment-face fontified t) 205 209 (fontified t) 209 212 (face font-lock-comment-delimiter-face fontified t) 212 215 (face font-lock-comment-delimiter-face fontified t) 215 219 (face font-lock-comment-delimiter-face fontified t) 219 224 (face font-lock-comment-delimiter-face fontified t) 224 229 (face font-lock-comment-face fontified t) 229 231 (face font-lock-comment-face fontified t) 231 236 (face font-lock-comment-face fontified t) 236 238 (face font-lock-comment-face fontified t) 238 243 (face font-lock-comment-face fontified t) 243 245 (face font-lock-comment-face fontified t) 245 249 (fontified t) 249 252 (face font-lock-comment-delimiter-face fontified t) 252 254 (face font-lock-comment-delimiter-face fontified t) 254 260 (face font-lock-comment-delimiter-face fontified t) 260 261 (face font-lock-comment-face fontified t) 261 263 (face font-lock-comment-face fontified t) 263 267 (fontified t) 267 270 (face font-lock-comment-delimiter-face fontified t) 270 274 (face font-lock-comment-delimiter-face fontified t) 274 275 (face font-lock-comment-face fontified t) 275 276 (face font-lock-comment-face fontified t) 276 280 (fontified t) 280 283 (face font-lock-comment-delimiter-face fontified t) 283 287 (face font-lock-comment-delimiter-face fontified t) 287 288 (face font-lock-comment-face fontified t) 288 298 (face font-lock-comment-face fontified t) 298 299 (face font-lock-comment-face fontified t) 299 301 (face font-lock-comment-face fontified t) 301 304 (face font-lock-comment-face fontified t) 304 307 (face font-lock-comment-face fontified t) 307 308 (fontified t) 308 311 (fontified t) 311 314 (face font-lock-comment-delimiter-face fontified t) 314 315 (face font-lock-comment-delimiter-face fontified t) 315 322 (face font-lock-comment-delimiter-face fontified t) 322 335 (face font-lock-comment-face fontified t) 335 337 (face font-lock-comment-face fontified t) 337 349 (face font-lock-comment-face fontified t) 349 351 (face font-lock-comment-face fontified t) 351 359 (face font-lock-comment-face fontified t) 359 361 (face font-lock-comment-face fontified t) 361 363 (fontified t) 363 365 (fontified t) 365 368 (face font-lock-comment-delimiter-face fontified t) 368 370 (face font-lock-comment-delimiter-face fontified t) 370 376 (face font-lock-comment-delimiter-face fontified t) 376 379 (face font-lock-comment-face fontified t) 379 381 (face font-lock-comment-face fontified t) 381 384 (face font-lock-comment-face fontified t) 384 386 (face font-lock-comment-face fontified t) 386 388 (face font-lock-comment-face fontified t) 388 394 (face font-lock-comment-face fontified t) 394 395 (face font-lock-comment-face fontified t) 395 398 (fontified t) 398 399 (fontified t) 399 402 (face font-lock-comment-delimiter-face fontified t) 402 404 (face font-lock-comment-delimiter-face fontified t) 404 405 (face font-lock-comment-delimiter-face fontified t rear-nonsticky t) 405 410 (face font-lock-comment-delimiter-face fontified t) 410 415 (face font-lock-comment-face fontified t) 415 417 (face font-lock-comment-face fontified t) 417 420 (face font-lock-comment-face fontified t) 420 422 (face font-lock-comment-face fontified t) 422 424 (face font-lock-comment-face fontified t) 424 431 (face font-lock-comment-face fontified t) 431 432 (face font-lock-comment-face fontified t) 432 436 (fontified t) 436 439 (face font-lock-comment-delimiter-face fontified t) 439 443 (face font-lock-comment-delimiter-face fontified t) 443 447 (face font-lock-comment-delimiter-face fontified t) 447 458 (face font-lock-comment-face fontified t) 458 459 (face font-lock-comment-face fontified t) 459 463 (fontified t) 463 466 (face font-lock-comment-delimiter-face fontified t) 466 470 (face font-lock-comment-delimiter-face fontified t) 470 473 (face font-lock-comment-face fontified t) 473 474 (face font-lock-comment-face fontified t) 474 476 (fontified t) 476 477 (fontified t) 477 478 (fontified t) 478 481 (face font-lock-comment-delimiter-face fontified t) 481 485 (face font-lock-comment-delimiter-face fontified t) 485 494 (face font-lock-comment-face fontified t) 494 495 (face font-lock-comment-face fontified t) 495 496 (face font-lock-comment-face fontified t) 496 497 (face font-lock-comment-face fontified t) 497 501 (fontified t) 501 504 (face font-lock-comment-delimiter-face fontified t) 504 510 (face font-lock-comment-delimiter-face fontified t) 510 511 (face font-lock-comment-delimiter-face fontified t) 511 512 (face font-lock-comment-delimiter-face fontified t) 512 526 (face font-lock-comment-face fontified t) 526 528 (face font-lock-comment-face fontified t) 528 533 (face font-lock-comment-face fontified t) 533 534 (face font-lock-comment-face fontified t) 534 535 (face font-lock-comment-face fontified t) 535 539 (fontified t) 539 542 (face font-lock-comment-delimiter-face fontified t) 542 548 (face font-lock-comment-delimiter-face fontified t) 548 549 (face font-lock-comment-delimiter-face fontified t) 549 550 (face font-lock-comment-delimiter-face fontified t) 550 560 (face font-lock-comment-face fontified t) 560 562 (face font-lock-comment-face fontified t) 562 566 (face font-lock-comment-face fontified t) 566 568 (face font-lock-comment-face fontified t) 568 571 (fontified t) 571 572 (fontified t) 572 575 (face font-lock-comment-delimiter-face fontified t) 575 578 (face font-lock-comment-delimiter-face fontified t) 578 579 (face font-lock-comment-delimiter-face fontified t) 579 580 (face font-lock-comment-face fontified t) 580 581 (face font-lock-comment-face fontified t) 581 582 (face font-lock-comment-face fontified t) 582 586 (fontified t) 586 589 (face font-lock-comment-delimiter-face fontified t) 589 592 (face font-lock-comment-face fontified t) 592 593 (face font-lock-comment-face fontified t rear-nonsticky t)) . 2341) (undo-tree-id1982 . -586) (undo-tree-id1983 . -592) (undo-tree-id1984 . -593) (undo-tree-id1985 . -593) (undo-tree-id1986 . -593) (undo-tree-id1987 . -4) (undo-tree-id1988 . -586) (undo-tree-id1989 . -4) (undo-tree-id1990 . -4) (undo-tree-id1991 . -4) (undo-tree-id1992 . -4) (undo-tree-id1993 . -28) (undo-tree-id1994 . -28) (undo-tree-id1995 . -65) (undo-tree-id1996 . -65) (undo-tree-id1997 . -107) (undo-tree-id1998 . -107) (undo-tree-id1999 . -134) (undo-tree-id2000 . -134) (undo-tree-id2001 . -173) (undo-tree-id2002 . -173) (undo-tree-id2003 . -209) (undo-tree-id2004 . -209) (undo-tree-id2005 . -249) (undo-tree-id2006 . -249) (undo-tree-id2007 . -267) (undo-tree-id2008 . -267) (undo-tree-id2009 . -280) (undo-tree-id2010 . -280) (undo-tree-id2011 . -311) (undo-tree-id2012 . -311) (undo-tree-id2013 . -365) (undo-tree-id2014 . -365) (undo-tree-id2015 . -399) (undo-tree-id2016 . -399) (undo-tree-id2017 . -436) (undo-tree-id2018 . -436) (undo-tree-id2019 . -463) (undo-tree-id2020 . -463) (undo-tree-id2021 . -478) (undo-tree-id2022 . -478) (undo-tree-id2023 . -501) (undo-tree-id2024 . -501) (undo-tree-id2025 . -539) (undo-tree-id2026 . -539) (undo-tree-id2027 . -572) (undo-tree-id2028 . -572) (undo-tree-id2029 . -582) (undo-tree-id2030 . -586) (undo-tree-id2031 . -586) (undo-tree-id2032 . -586) (undo-tree-id2033 . -586) (undo-tree-id2034 . -593) 2927 (t 25825 62139 972012 899000)) nil (25825 62838 420053 648000) 0 nil])
([nil nil ((2370 . 2371) (2367 . 2370) (2355 . 2367) (#("i" 0 1 (fontified t)) . -2355) (undo-tree-id1977 . -1) (2346 . 2356) (2342 . 2346) (#("    " 0 4 (fontified nil)) . 2341) (undo-tree-id1978 . -4) (undo-tree-id1979 . -4) (undo-tree-id1980 . -4) (undo-tree-id1981 . -4) (2345 . 2346) (2340 . 2345) 2339) nil (25825 62838 419580 760000) 0 nil])
([nil nil ((#("        MazeTimer {
            player_started: false,
            start_time: None,
        },
" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t rear-nonsticky t) 4 8 (fontified t) 8 17 (face font-lock-type-face fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 24 (fontified t) 24 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 46 (face font-lock-variable-name-face fontified t) 46 48 (fontified t) 48 53 (face font-lock-keyword-face fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 59 (fontified t) 59 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 77 (face font-lock-variable-name-face fontified t) 77 79 (fontified t) 79 83 (face font-lock-type-face fontified t) 83 85 (fontified t) 85 88 (fontified t) 88 89 (fontified t) 89 92 (fontified t) 92 93 (fontified t) 93 94 (fontified t) 94 95 (fontified t) 95 96 (fontified t)) . 2237) (undo-tree-id1878 . -95) (undo-tree-id1879 . -95) (undo-tree-id1880 . -18) (undo-tree-id1881 . -95) (undo-tree-id1882 . -59) (undo-tree-id1883 . -59) (undo-tree-id1884 . -59) (undo-tree-id1885 . -59) (undo-tree-id1886 . -59) (undo-tree-id1887 . -59) (undo-tree-id1888 . -59) (undo-tree-id1889 . -59) (undo-tree-id1890 . -59) (undo-tree-id1891 . -59) (undo-tree-id1892 . -59) (undo-tree-id1893 . -59) (undo-tree-id1894 . -59) (undo-tree-id1895 . -59) (undo-tree-id1896 . -59) (undo-tree-id1897 . -59) (undo-tree-id1898 . -89) (undo-tree-id1899 . -89) (undo-tree-id1900 . -11) (undo-tree-id1901 . -11) (undo-tree-id1902 . -11) (undo-tree-id1903 . -11) (undo-tree-id1904 . -11) (undo-tree-id1905 . -11) (undo-tree-id1906 . -17) (undo-tree-id1907 . -17) (undo-tree-id1908 . -17) (undo-tree-id1909 . -17) (undo-tree-id1910 . -17) (undo-tree-id1911 . -17) (undo-tree-id1912 . -17) (undo-tree-id1913 . -17) (undo-tree-id1914 . -17) (undo-tree-id1915 . -17) (undo-tree-id1916 . -17) (undo-tree-id1917 . -17) (undo-tree-id1918 . -17) (undo-tree-id1919 . -17) (undo-tree-id1920 . -17) (undo-tree-id1921 . -17) (undo-tree-id1922 . -96) (undo-tree-id1923 . -96) (undo-tree-id1924 . -96) (undo-tree-id1925 . -96) (undo-tree-id1926 . -96) (undo-tree-id1927 . -96) (undo-tree-id1928 . -96) (undo-tree-id1929 . -96) (undo-tree-id1930 . -96) (undo-tree-id1931 . -96) (undo-tree-id1932 . -96) (undo-tree-id1933 . -96) (undo-tree-id1934 . -96) (undo-tree-id1935 . -96) (undo-tree-id1936 . -96) (undo-tree-id1937 . -96) (undo-tree-id1938 . -96) (undo-tree-id1939 . -96) (undo-tree-id1940 . -96) (undo-tree-id1941 . -96) (undo-tree-id1942 . -12) (undo-tree-id1943 . -12) (undo-tree-id1944 . -12) (undo-tree-id1945 . -12) (undo-tree-id1946 . -12) (undo-tree-id1947 . -12) (undo-tree-id1948 . -12) (undo-tree-id1949 . -12) (undo-tree-id1950 . -32) (undo-tree-id1951 . -32) (undo-tree-id1952 . -67) (undo-tree-id1953 . -67) (undo-tree-id1954 . -94) (undo-tree-id1955 . -94) (undo-tree-id1956 . -94) (undo-tree-id1957 . -94) (undo-tree-id1958 . -83) (undo-tree-id1959 . -83) (undo-tree-id1960 . -48) (undo-tree-id1961 . -48) (undo-tree-id1962 . -18) (undo-tree-id1963 . -18) (undo-tree-id1964 . -18) (undo-tree-id1965 . -18) (undo-tree-id1966 . -38) (undo-tree-id1967 . -38) (undo-tree-id1968 . -73) (undo-tree-id1969 . -73) (undo-tree-id1970 . -85) (undo-tree-id1971 . -95) (undo-tree-id1972 . -12) (undo-tree-id1973 . -95) (undo-tree-id1974 . -95) (undo-tree-id1975 . -95) (undo-tree-id1976 . -96) 2332) nil (25825 62838 419575 80000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2283 . 2284) (#("
" 0 1 (fontified nil)) . -2371) (2275 . 2372) 2252) nil (25825 62838 419540 545000) 0 nil])
([nil nil ((2370 . 2372) (#("," 0 1 (fontified t)) . -2370) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) 2371) nil (25825 62838 419539 653000) 0 nil])
([nil nil ((2243 . 2252) (#("i" 0 1 (face font-lock-type-face fontified t)) . -2243) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (2238 . 2244) (#("m" 0 1 (fontified t)) . -2238) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (#("a" 0 1 (fontified t)) . -2239) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (#("z" 0 1 (fontified t)) . -2240) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (#("e" 0 1 (fontified t)) . -2241) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) 2242 (2238 . 2242) (2236 . 2238) 2235) nil (25825 62838 419535 455000) 0 nil])
([nil nil ((185 . 193) (#("Component" 0 9 (face font-lock-preprocessor-face fontified t)) . 185) (undo-tree-id1823 . -8) (undo-tree-id1824 . -3) (undo-tree-id1825 . -3) (undo-tree-id1826 . -3) (undo-tree-id1827 . -3) (undo-tree-id1828 . -9) (undo-tree-id1829 . -9)) nil (25825 62838 419516 870000) 0 nil])
([nil nil ((nil rear-nonsticky nil 174 . 175) (#("
" 0 1 (fontified nil)) . -215) (174 . 216) 171) nil (25825 62838 419512 722000) 0 nil])
([nil nil ((174 . 175) 155) nil (25825 62838 419511 841000) 0 nil])
([nil nil ((204 . 217) (#("Maze" 0 4 (face font-lock-type-face fontified t)) . -204) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -2) (undo-tree-id1807 . -2) (undo-tree-id1808 . -3) (undo-tree-id1809 . -3) (undo-tree-id1810 . -4) (undo-tree-id1811 . -4) (undo-tree-id1812 . -4) (undo-tree-id1813 . -4) (undo-tree-id1814 . -4) (undo-tree-id1815 . -4) (undo-tree-id1816 . -4) (undo-tree-id1817 . -4) (undo-tree-id1818 . -4) (undo-tree-id1819 . -4) 208 (204 . 208) (#("TextChanges" 0 11 (face font-lock-type-face fontified t)) . 204) (undo-tree-id1820 . -10) (undo-tree-id1821 . -11) (undo-tree-id1822 . -11)) nil (25825 62838 419509 907000) 0 nil])
([nil nil ((2280 . 2288) (#("	" 0 1 (fontified t)) . 2280) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (#("
        " 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t rear-nonsticky t) 5 8 (fontified t) 8 9 (fontified t rear-nonsticky t)) . 2334) (undo-tree-id1798 . -9) (undo-tree-id1799 . -9) (#(" " 0 1 (fontified t)) . 2355) (#("   " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 2364) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (#(" " 0 1 (fontified t)) . 2390) (#("   " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 2399) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (#("    " 0 3 (fontified t) 3 4 (fontified t)) . 2420) 3156) nil (25825 62838 419496 492000) 0 nil])
([nil nil ((240 . 244) (t 25825 62838 428691 696000)) nil (25825 63163 324911 717000) 0 nil])
([nil nil ((220 . 324) (#("#[derive(Resource)]
pub struct MazeTimer {
    player_started: bool,
    start_time: Option<Instant>,
}
" 0 19 (face font-lock-preprocessor-face fontified t) 19 20 (fontified t) 20 23 (face font-lock-keyword-face fontified t) 23 24 (fontified t) 24 30 (face font-lock-keyword-face fontified t) 30 31 (fontified t) 31 40 (face font-lock-type-face fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 47 (fontified t) 47 61 (face font-lock-variable-name-face fontified t) 61 63 (fontified t) 63 67 (face font-lock-type-face fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 73 (fontified t) 73 83 (face font-lock-variable-name-face fontified t) 83 85 (fontified t) 85 91 (face font-lock-type-face fontified t) 91 92 (fontified t) 92 99 (face font-lock-type-face fontified t) 99 102 (fontified t) 102 103 (fontified t) 103 104 (fontified t)) . 220) (t 25825 63163 332030 91000)) nil (25825 63204 379853 191000) 0 nil])
([nil nil ((267 . 271)) nil (25825 63204 379851 999000) 0 nil])
([nil nil ((297 . 301)) nil (25825 63204 379848 462000) 0 nil])
([nil nil ((251 . 252) (#("m" 0 1 (face font-lock-type-face fontified t)) . 251) (undo-tree-id2036 . -1) (t 25825 63204 388697 400000)) nil (25825 63216 153829 617000) 0 nil])
([nil nil ((255 . 256) (#("t" 0 1 (face font-lock-type-face fontified t)) . 255) (undo-tree-id2035 . -1)) nil (25825 63216 153825 480000) 0 nil])
([nil nil ((313 . 314) (#("o" 0 1 (fontified t)) . 313) (undo-tree-id2037 . -1) (t 25825 63216 158697 590000)) nil (25825 63221 545365 44000) 0 nil])
([nil nil ((320 . 321) (#("i" 0 1 (fontified t)) . 320) (undo-tree-id2038 . -1) (t 25825 63221 552031 12000)) nil (25825 63225 269948 438000) 0 nil])
([nil nil ((229 . 230) (#("r" 0 1 (face font-lock-preprocessor-face fontified t)) . 229) (undo-tree-id2039 . -1) (t 25825 63225 275364 410000)) nil (25825 63230 255822 750000) 0 nil])
([nil nil ((2454 . 2459) (2442 . 2454) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -2442) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (2433 . 2443) (2432 . 2433) (2431 . 2432) (t 25825 63230 262031 169000) 2430) nil (25825 63531 65437 246000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -2541) (undo-tree-id2255 . -4) (undo-tree-id2256 . -4) (undo-tree-id2257 . -4) (undo-tree-id2258 . -4) (2545 . 2546) (2540 . 2545) (2537 . 2540) (#(")" 0 1 (fontified t)) . -2537) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) 2538 (2533 . 2538) (2528 . 2533) (#("i" 0 1 (face font-lock-type-face fontified t)) . -2528) (undo-tree-id2264 . -1) (2519 . 2529) (#("i" 0 1 (face font-lock-type-face fontified t)) . -2519) (undo-tree-id2265 . -1) (2507 . 2520) (#("[" 0 1 (fontified t)) . -2507) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) 2508 (2507 . 2508) (2499 . 2507) (2491 . 2499) (2486 . 2491) (2480 . 2486) (#("i" 0 1 (face font-lock-type-face fontified t)) . -2480) (undo-tree-id2268 . -1) (2465 . 2481) (#("i" 0 1 (fontified t)) . -2465) (undo-tree-id2269 . -1) (2459 . 2466) (2454 . 2459) 2437) nil (25825 63741 827031 475000) 0 nil] [nil nil ((#("    time: Res<Time>,
" 0 4 (fontified t) 4 8 (face font-lock-variable-name-face fontified t) 8 10 (fontified t) 10 13 (face font-lock-type-face fontified t) 13 14 (fontified t) 14 18 (face font-lock-type-face fontified t) 18 19 (fontified t) 19 21 (fontified t)) . 2477) (undo-tree-id2040 . -20) (undo-tree-id2041 . -3) (undo-tree-id2042 . -3) (undo-tree-id2043 . -4) (undo-tree-id2044 . -4) (undo-tree-id2045 . -4) (undo-tree-id2046 . -4) (undo-tree-id2047 . -4) (undo-tree-id2048 . -4) (undo-tree-id2049 . -21) 2481) ((2477 . 2498)) (25825 63531 65322 320000) 0 nil])
([nil nil ((2615 . 2625) (#("i" 0 1 (face rust-string-interpolation fontified t)) . -2615) (undo-tree-id2186 . -1) (2613 . 2616) (#("t" 0 1 (face font-lock-string-face fontified t)) . -2613) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -2614) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -2615) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2616) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) 2617 (2614 . 2617) (#("i" 0 1 (face font-lock-string-face fontified t)) . -2614) (undo-tree-id2231 . -1) (2613 . 2615) (2611 . 2613) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -2611) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) 2612 (2604 . 2612) (2600 . 2604) (2588 . 2600) (#("i" 0 1 (fontified t)) . -2588) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (2579 . 2589) (2574 . 2579) (2571 . 2574) (2561 . 2571) (#("single" 0 6 (fontified t)) . -2561) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -3) (undo-tree-id2241 . -3) (undo-tree-id2242 . -4) (undo-tree-id2243 . -4) (undo-tree-id2244 . -5) (undo-tree-id2245 . -5) (undo-tree-id2246 . -6) (undo-tree-id2247 . -6) (undo-tree-id2248 . -6) (undo-tree-id2249 . -6) (undo-tree-id2250 . -6) (undo-tree-id2251 . -6) (undo-tree-id2252 . -6) (undo-tree-id2253 . -6) 2567 (2562 . 2567) (#("i" 0 1 (fontified t)) . -2562) (undo-tree-id2254 . -1) (2549 . 2563) (2545 . 2549) (2540 . 2545) 2487) nil (25825 63741 827002 210000) 0 nil])
nil
([nil nil ((2579 . 2583) (2574 . 2579) 2573) nil (25825 63741 826729 748000) 0 nil])
([nil nil ((2623 . 2630) (#("time" 0 4 (face rust-string-interpolation fontified t)) . 2623) (undo-tree-id2175 . -3) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -3) (undo-tree-id2179 . -3) (undo-tree-id2180 . -4) (undo-tree-id2181 . -4) (undo-tree-id2182 . -4) (undo-tree-id2183 . -4) (undo-tree-id2184 . -4) (undo-tree-id2185 . -4)) nil (25825 63741 826728 847000) 0 nil])
([nil nil ((2644 . 2646) (2634 . 2644) (#("start" 0 5 (fontified t)) . -2634) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -2) (undo-tree-id2146 . -2) (undo-tree-id2147 . -3) (undo-tree-id2148 . -3) (undo-tree-id2149 . -4) (undo-tree-id2150 . -4) (undo-tree-id2151 . -5) (undo-tree-id2152 . -5) (undo-tree-id2153 . -5) (undo-tree-id2154 . -5) (undo-tree-id2155 . -5) (undo-tree-id2156 . -5) 2639 (2633 . 2639) (2623 . 2633) (#("maze" 0 4 (fontified t)) . -2623) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -2) (undo-tree-id2160 . -2) (undo-tree-id2161 . -3) (undo-tree-id2162 . -3) (undo-tree-id2163 . -4) (undo-tree-id2164 . -4) (undo-tree-id2165 . -4) (undo-tree-id2166 . -4) (undo-tree-id2167 . -4) (undo-tree-id2168 . -4) (undo-tree-id2169 . -4) (undo-tree-id2170 . -4) (undo-tree-id2171 . -4) (undo-tree-id2172 . -4) 2627 (2623 . 2627) (2618 . 2623) (#("i" 0 1 (fontified t)) . -2618) (undo-tree-id2173 . -1) (2614 . 2619) (2613 . 2614) (#("i" 0 1 (fontified t)) . -2613) (undo-tree-id2174 . -1) (2593 . 2614) (2583 . 2593)) nil (25825 63741 826722 565000) 0 nil])
([nil nil ((2574 . 2575) (2573 . 2574) (2559 . 2573) (#("pla" 0 3 (fontified t)) . -2559) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -2) (undo-tree-id2119 . -2) (undo-tree-id2120 . -3) (undo-tree-id2121 . -3) (undo-tree-id2122 . -3) (undo-tree-id2123 . -3) (undo-tree-id2124 . -3) (undo-tree-id2125 . -3) 2562 (2558 . 2562) (2548 . 2558) (#("maze" 0 4 (fontified t)) . -2548) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -2) (undo-tree-id2129 . -2) (undo-tree-id2130 . -3) (undo-tree-id2131 . -3) (undo-tree-id2132 . -4) (undo-tree-id2133 . -4) (undo-tree-id2134 . -4) (undo-tree-id2135 . -4) (undo-tree-id2136 . -4) (undo-tree-id2137 . -4) (undo-tree-id2138 . -4) (undo-tree-id2139 . -4) (undo-tree-id2140 . -4) (undo-tree-id2141 . -4) 2552 (2545 . 2552) (#("i" 0 1 (fontified t)) . -2545) (undo-tree-id2142 . -1) (2540 . 2546) 2539) nil (25825 63741 826707 376000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -2740) (2740 . 2741) (#("	" 0 1 (fontified nil)) . 2740) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (2736 . 2740) (2737 . 2738) (2735 . 2737) 2715) nil (25825 63741 826694 572000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . -2677) (undo-tree-id2092 . -4) (undo-tree-id2093 . -4) (undo-tree-id2094 . -4) (undo-tree-id2095 . -4) (undo-tree-id2096 . -4) (undo-tree-id2097 . -4) (undo-tree-id2098 . -4) (undo-tree-id2099 . -4) (2676 . 2677) (#("    " 0 4 (fontified nil)) . -2608) (undo-tree-id2100 . -4) (undo-tree-id2101 . -4) (undo-tree-id2102 . -4) (undo-tree-id2103 . -4) (2607 . 2608) (#("    " 0 4 (fontified nil)) . -2577) (undo-tree-id2104 . -4) (undo-tree-id2105 . -4) (undo-tree-id2106 . -4) (undo-tree-id2107 . -4) (undo-tree-id2108 . -4) (undo-tree-id2109 . -4) (undo-tree-id2110 . -4) (undo-tree-id2111 . -4) (2576 . 2577) 2580) nil (25825 63741 826690 204000) 0 nil])
([nil nil ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 2454) (undo-tree-id2052 . -5) (undo-tree-id2053 . -5) (#("
" 0 1 (fontified t)) . 2486) (undo-tree-id2054 . 1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (#("   " 0 3 (fontified t)) . 2488) (undo-tree-id2057 . -3) (undo-tree-id2058 . -3) (2539 . 2540) (2576 . 2584) (#("	" 0 1 (fontified t)) . 2576) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (2607 . 2615) (#("	" 0 1 (fontified t)) . 2607) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (2676 . 2684) (#("	" 0 1 (fontified t)) . 2676) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 2734) (undo-tree-id2090 . -4) (undo-tree-id2091 . -4) 2549) nil (25825 63741 826677 200000) 0 nil])
([nil nil ((2679 . 2688) (t 25825 63741 832039 420000)) nil (25825 63820 120372 757000) 0 nil])
([nil nil ((2742 . 2743) (t 25825 63765 802039 800000)) nil (25825 63823 486226 683000) 0 nil] [nil nil ((#("e" 0 1 (face rust-string-interpolation fontified t)) . 2734) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (t 25825 63765 802039 800000)) ((2734 . 2735)) (25825 63819 719349 996000) 0 nil])
([nil nil ((2734 . 2736) (#("e" 0 1 (face rust-string-interpolation fontified t)) . -2734) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (#("l" 0 1 (face rust-string-interpolation fontified t)) . -2735) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (#("a" 0 1 (face rust-string-interpolation fontified t)) . -2736) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (#("p" 0 1 (face rust-string-interpolation fontified t)) . -2737) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (#("s" 0 1 (face rust-string-interpolation fontified t)) . -2738) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (#("e" 0 1 (face rust-string-interpolation fontified t)) . -2739) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (#("d" 0 1 (face rust-string-interpolation fontified t)) . -2740) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (#(":" 0 1 (face rust-string-interpolation fontified t)) . -2741) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (#("?" 0 1 (face rust-string-interpolation fontified t)) . -2742) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (#("." 0 1 (face rust-string-interpolation fontified t)) . -2743) (undo-tree-id2410 . 1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (#("1" 0 1 (face rust-string-interpolation fontified t)) . -2744) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) 2745 (t 25825 63823 492040 748000)) nil (25825 63835 987686 309000) 0 nil])
([nil nil ((#("l" 0 1 (face rust-string-interpolation fontified t)) . 2734) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1)) ((2734 . 2735)) (25825 63819 295282 568000) 0 nil])
([nil nil ((2738 . 2747)) nil (25825 63835 987620 876000) 0 nil])
([nil nil ((#("a" 0 1 (face rust-string-interpolation fontified t)) . 2734) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1)) ((2734 . 2735)) (25825 63819 172365 176000) 0 nil])
([nil nil ((2580 . 2584) (t 25825 63835 992040 962000)) nil (25825 63844 643644 554000) 0 nil])
([nil nil ((#("p" 0 1 (face rust-string-interpolation fontified t)) . 2734) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1)) ((2734 . 2735)) (25825 63819 2350 331000) 0 nil])
([nil nil ((3785 . 3786) (t 25825 63844 648707 792000)) nil (25825 63878 19596 753000) 0 nil])
([nil nil ((#("s" 0 1 (face rust-string-interpolation fontified t)) . 2734) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1)) ((2734 . 2735)) (25825 63818 716324 123000) 0 nil])
([nil nil ((3816 . 3818) (3799 . 3816) (#("maze" 0 4 (fontified t)) . -3799) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -2) (undo-tree-id2431 . -2) (undo-tree-id2432 . -3) (undo-tree-id2433 . -3) (undo-tree-id2434 . -4) (undo-tree-id2435 . -4) (undo-tree-id2436 . -4) (undo-tree-id2437 . -4) (undo-tree-id2438 . -4) (undo-tree-id2439 . -4) (undo-tree-id2440 . -4) (undo-tree-id2441 . -4) (undo-tree-id2442 . -4) (undo-tree-id2443 . -4) (undo-tree-id2444 . -4) (undo-tree-id2445 . -4) 3803 (3797 . 3803)) nil (25825 64045 714440 886000) 0 nil])
([nil nil ((#("e" 0 1 (face rust-string-interpolation fontified t)) . 2734) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1)) ((2734 . 2735)) (25825 63818 269393 712000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . 3816)) ((3816 . 3817)) (25825 64047 188919 948000) 0 nil])
([nil nil ((#("d" 0 1 (face rust-string-interpolation fontified t)) . 2734) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1)) ((2734 . 2735)) (25825 63817 867529 471000) 0 nil])
([nil nil ((2760 . 2765) (#("f" 0 1 (fontified t)) . -2760) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (#("(" 0 1 (fontified t)) . -2761) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) 2762 (2757 . 2762) (#("c" 0 1 (fontified t)) . -2757) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (#("k" 0 1 (fontified t)) . -2758) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (#("s" 0 1 (fontified t)) . -2759) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) 2760 (2751 . 2760) (t 25825 64048 448711 303000)) nil (25825 64136 761729 386000) 0 nil] [nil nil ((2751 . 2761) (t 25825 63878 18708 386000)) ((#(".as_secs()" 0 1 (fontified t) 1 9 (fontified t) 9 10 (fontified t)) . 2751) (undo-tree-id2469 . -8) (undo-tree-id2470 . -9) (undo-tree-id2471 . -9) (undo-tree-id2472 . -9) (undo-tree-id2473 . -9) (undo-tree-id2474 . -9) (undo-tree-id2475 . -9) (undo-tree-id2476 . -9) (undo-tree-id2477 . -9) (undo-tree-id2478 . -9) (undo-tree-id2479 . -9) (undo-tree-id2480 . -9) (undo-tree-id2481 . -9) (undo-tree-id2482 . -9) (undo-tree-id2483 . -9)) (25825 64045 397478 684000) 0 nil])
([nil nil ((2735 . 2736)) ((#("?" 0 1 (face rust-string-interpolation fontified t)) . 2735)) (25825 63817 867438 580000) 0 nil])
([nil nil ((2739 . 2741) (#("?" 0 1 (face rust-string-interpolation fontified t)) . -2739) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) 2740) nil (25825 64136 761718 135000) 0 nil])
([nil nil ((2739 . 2741) (#("?" 0 1 (face rust-string-interpolation fontified t)) . -2739) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) 2740 (t 25825 63923 352042 503000)) ((2739 . 2740) (#(".1" 0 2 (face rust-string-interpolation fontified t)) . 2739) (undo-tree-id2468 . 2)) (25825 64045 250584 683000) 0 nil])
nil
([nil nil ((#("1" 0 1 (face rust-string-interpolation fontified t)) . -2740) (t 25825 64136 765379 506000) (2741 . 2742) 2740 (t 25825 64136 765379 506000)) nil (25825 64158 680391 749000) 0 nil])
([nil nil ((#(".as_secs(" 0 1 (fontified t) 1 9 (fontified t)) . 2752) (undo-tree-id2447 . -8) (undo-tree-id2448 . -9) (undo-tree-id2449 . -9) (undo-tree-id2450 . -9) (undo-tree-id2451 . -9) (undo-tree-id2452 . -9) (undo-tree-id2453 . -9) (undo-tree-id2454 . -9) (undo-tree-id2455 . -9) (undo-tree-id2456 . -9) (undo-tree-id2457 . -9) (undo-tree-id2458 . -9) (undo-tree-id2459 . -9) (undo-tree-id2460 . -9) (undo-tree-id2461 . -9) (undo-tree-id2462 . -9) (undo-tree-id2463 . -9)) ((2752 . 2761)) (25825 64044 711467 830000) 0 nil])
([nil nil ((#("{Duration, " 0 1 (fontified t) 1 9 (face font-lock-type-face fontified t) 9 11 (fontified t)) . 112) (undo-tree-id2510 . -1) (undo-tree-id2511 . -10) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -11) (t 25825 64144 442046 307000)) nil (25826 6502 396407 821000) 0 nil] [nil nil ((2740 . 2741) (t 25825 64144 442046 307000)) ((#("	" 0 1 (face rust-string-interpolation fontified t)) . 2740) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1)) (25825 64158 680152 300000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 2752)) ((2752 . 2753)) (25825 64007 480834 110000) 0 nil])
([nil current ((#("}" 0 1 (fontified t)) . 119) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1)) nil (25826 6502 396397 241000) 0 nil])
nil
([nil nil ((2739 . 2740) (t 25825 63992 925377 27000)) ((#("?" 0 1 (face rust-string-interpolation fontified t)) . 2739) (t 25825 64003 515377 214000)) (25825 64003 515869 609000) 0 nil])
nil
nil
