(undo-tree-save-format-version . 1)
"a92c620a52bae2a6989e8d5090ddfc405a1c6c9f"
[nil nil nil nil (25825 21636 283579 889000) 0 nil]
([nil nil ((nil rear-nonsticky nil 1633 . 1634) (nil fontified nil 1 . 1634) (1 . 1634) (t 25825 21504 377942 573000)) nil (25825 21636 283579 67000) 0 nil])
([nil nil ((1 . 5)) nil (25825 21636 283578 326000) 0 nil])
([nil nil ((34 . 38) (13 . 34) (4 . 13) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -4) (undo-tree-id151 . -1) (1 . 5) (1 . 2)) nil (25825 21636 283577 314000) 0 nil])
([nil nil ((36 . 38) (#("," 0 1 (fontified t)) . -36) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#(" " 0 1 (fontified t)) . -37) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) 38) nil (25825 21636 283574 108000) 0 nil])
([nil nil ((1676 . 1677) (#("
" 0 1 (fontified t)) . -1676) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#(" " 0 1 (fontified t)) . -1677) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#(" " 0 1 (fontified t)) . -1678) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#(" " 0 1 (fontified t)) . -1679) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (#(" " 0 1 (fontified t)) . -1680) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) 1681 (1676 . 1681) 1676) nil (25825 21636 283214 553000) 0 nil])
([nil nil ((1 . 2) 6) nil (25825 21636 283205 496000) 0 nil])
([nil nil ((nil rear-nonsticky nil 40 . 41) (nil fontified nil 1 . 41) (1 . 41)) nil (25825 21636 283204 935000) 0 nil])
([nil nil ((41 . 42) 40) nil (25825 21636 283204 254000) 0 nil])
([nil nil ((1 . 2)) nil (25825 21636 283203 633000) 0 nil])
([nil nil ((60 . 64) (#("i" 0 1 (face font-lock-type-face fontified t)) . -60) (undo-tree-id6 . -1) (56 . 61) (#(":" 0 1 (fontified t)) . -56) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 57 (53 . 57) (#("i" 0 1 (face font-lock-type-face fontified t)) . -53) (undo-tree-id11 . -1) 54 (51 . 54) (46 . 51) (#("i" 0 1 (face font-lock-type-face fontified t)) . -46) (undo-tree-id12 . -1) (42 . 47) (#("i" 0 1 (face font-lock-type-face fontified t)) . -42) (undo-tree-id13 . -1) (32 . 43) (#("i" 0 1 (fontified t)) . -32) (undo-tree-id14 . -1) (30 . 33) (#("n" 0 1 (fontified t)) . -30) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("t" 0 1 (fontified t)) . -31) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("i" 0 1 (fontified t)) . -32) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("c" 0 1 (fontified t)) . -33) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#(":" 0 1 (fontified t)) . -34) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#(":" 0 1 (fontified t)) . -35) (undo-tree-id41 . -1) (undo-tree-id42 . -1) 36 (32 . 36) (#("i" 0 1 (fontified t)) . -32) (undo-tree-id43 . -1) (25 . 33) (#("i" 0 1 (fontified t)) . -25) (undo-tree-id44 . -1) (24 . 26) (11 . 24) (#("p" 0 1 (fontified t)) . -11) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("r" 0 1 (fontified t)) . -12) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("e" 0 1 (fontified t)) . -13) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("l" 0 1 (fontified t)) . -14) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("u" 0 1 (fontified t)) . -15) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) 16 (1 . 16) (1 . 2)) nil (25825 21636 283197 321000) 0 nil])
([nil nil ((107 . 108) 107) nil (25825 21636 282842 164000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 108) (undo-tree-id4 . 1) (undo-tree-id5 . -1)) nil (25825 21636 282841 122000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -146) (undo-tree-id0 . -4) (undo-tree-id1 . -4) (undo-tree-id2 . -4) (undo-tree-id3 . -4) 150 (145 . 150) 108) nil (25825 21636 283745 760000) 0 nil])
([nil nil ((nil rear-nonsticky nil 205 . 206) (nil fontified nil 150 . 206) (150 . 206) (146 . 150)) nil (25825 21732 801100 625000) 0 nil] [nil nil ((nil rear-nonsticky nil 146 . 147) (#("
" 0 1 (fontified nil)) . -147) (146 . 148)) ((#("

" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified nil)) . 146) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (147 . 148) (nil rear-nonsticky t 146 . 147)) (25825 21636 282814 623000) 0 nil])
([nil nil ((#("G" 0 1 (face font-lock-type-face fontified t)) . -175) (undo-tree-id155 . -1) 176 (175 . 176) (157 . 175) (145 . 157) (#("asset_" 0 6 (fontified t)) . -145) (undo-tree-id156 . -6) 151 (146 . 151) (143 . 146)) nil (25825 21732 801099 333000) 0 nil])
nil
([nil nil ((1877 . 1878)) nil (25825 21732 801090 556000) 0 nil])
([nil nil ((#("prelu" 0 5 (face font-lock-constant-face fontified t)) . 12) (#("e::*, d" 0 1 (face font-lock-constant-face fontified t) 1 6 (fontified t) 6 7 (face font-lock-constant-face fontified t)) . 18) (62 . 74) (176 . 177) 174) nil (25825 21732 801086 789000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2891 . 2892) (nil fontified nil 1879 . 2892) (1879 . 2892) (t 25825 21732 804613 342000)) nil (25825 21793 281693 428000) 0 nil])
([nil nil ((1878 . 1879) 1877) nil (25825 21793 281689 390000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2893 . 2894) (#("
" 0 1 (fontified nil)) . -3089) (2893 . 3090) (t 25825 21793 284614 436000)) nil (25825 21880 761449 82000) 0 nil])
([nil nil ((2906 . 2907) (#("i" 0 1 (face font-lock-type-face fontified t)) . -2906) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) 2907 (2906 . 2907) (#("i" 0 1 (face font-lock-type-face fontified t)) . -2906) (undo-tree-id300 . -1) (2905 . 2907) (#("Maze" 0 4 (face font-lock-type-face fontified t)) . 2905) (undo-tree-id301 . -3) (undo-tree-id302 . -4) (undo-tree-id303 . -4)) nil (25825 21880 761447 840000) 0 nil])
([nil nil ((2933 . 2934) (#("i" 0 1 (fontified nil)) . -2933) (undo-tree-id290 . -1) 2934 (2932 . 2934) (#("Maze" 0 4 (face font-lock-type-face fontified t)) . 2932) (undo-tree-id291 . -3) (undo-tree-id292 . -4) (undo-tree-id293 . -4)) nil (25825 21880 761441 538000) 0 nil])
([nil nil ((#("P" 0 1 (face font-lock-type-face fontified t)) . 3004) (undo-tree-id288 . -1) (undo-tree-id289 . -1)) nil (25825 21880 761438 522000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 3004) (undo-tree-id286 . -1) (undo-tree-id287 . -1)) nil (25825 21880 761437 120000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 3004) (undo-tree-id284 . -1) (undo-tree-id285 . -1)) nil (25825 21880 761435 637000) 0 nil])
([nil nil ((#("create_grid" 0 11 (fontified t)) . 3013) (undo-tree-id282 . -10) (undo-tree-id283 . -11)) nil (25825 21880 761433 974000) 0 nil])
([nil nil ((3013 . 3022) (#("info" 0 4 (fontified t)) . -3013) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -3) (undo-tree-id208 . -3) (undo-tree-id209 . -4) (undo-tree-id210 . -4) (undo-tree-id211 . -4) (undo-tree-id212 . -4) (undo-tree-id213 . -4) (undo-tree-id214 . -4) 3017 (3013 . 3017) (#("i" 0 1 (fontified t)) . -3013) (undo-tree-id215 . -1) (3013 . 3014) (#("t" 0 1 (fontified t)) . -3013) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (#("e" 0 1 (fontified t)) . -3014) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (#("x" 0 1 (fontified t)) . -3015) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (#("t" 0 1 (fontified t)) . -3016) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) 3017 (3015 . 3017) (3013 . 3015) (#("t" 0 1 (fontified t)) . -3013) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (#("e" 0 1 (fontified t)) . -3014) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) 3015 (3013 . 3015)) nil (25825 21880 761428 634000) 0 nil])
([nil nil ((#("display_grid" 0 12 (fontified t)) . 3058) (undo-tree-id197 . -11) (undo-tree-id198 . -7) (undo-tree-id199 . -7) (undo-tree-id200 . -7) (undo-tree-id201 . -7) (undo-tree-id202 . -12)) nil (25825 21880 761230 231000) 0 nil])
([nil nil ((3058 . 3076) (#("cha" 0 3 (fontified t)) . -3058) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -3) (undo-tree-id192 . -3) (undo-tree-id193 . -3) (undo-tree-id194 . -3) (undo-tree-id195 . -3) (undo-tree-id196 . -3) 3061 (3058 . 3061)) nil (25825 21880 761226 575000) 0 nil])
([nil nil ((#("_system" 0 7 (fontified t)) . 3069) (undo-tree-id177 . -6) (undo-tree-id178 . -7) (undo-tree-id179 . -7) (undo-tree-id180 . -7) (undo-tree-id181 . -7) (undo-tree-id182 . -6) (undo-tree-id183 . -6) (undo-tree-id184 . -6) (undo-tree-id185 . -6) (undo-tree-id186 . -7)) nil (25825 21880 761221 725000) 0 nil])
([nil nil ((#("_system" 0 7 (face font-lock-function-name-face fontified t)) . 1894) (undo-tree-id157 . -6) (undo-tree-id158 . -3) (undo-tree-id159 . -3) (undo-tree-id160 . -3) (undo-tree-id161 . -3) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -5) (undo-tree-id167 . -5) (undo-tree-id168 . -5) (undo-tree-id169 . -5) (undo-tree-id170 . -6) (undo-tree-id171 . -6) (undo-tree-id172 . -6) (undo-tree-id173 . -6) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -7)) nil (25825 21880 761215 93000) 0 nil])
([nil nil ((3072 . 3073) 1894) nil (25825 21880 761195 927000) 0 nil])
([nil nil ((24 . 25) (t 25825 21880 767949 352000)) nil (25825 21944 424832 316000) 0 nil])
([nil nil ((37 . 43) (#("c" 0 1 (face font-lock-type-face fontified t)) . -37) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (#("o" 0 1 (face font-lock-type-face fontified t)) . -38) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -39) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (#("e" 0 1 (face font-lock-type-face fontified t)) . -40) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) 41 (33 . 41) (#("i" 0 1 (face font-lock-type-face fontified t)) . -33) (undo-tree-id320 . -1) (26 . 34) (#("i" 0 1 (face font-lock-type-face fontified t)) . -26) (undo-tree-id321 . -1) (25 . 27)) nil (25825 21944 424830 272000) 0 nil])
([nil nil ((69 . 70)) nil (25825 21944 424811 768000) 0 nil])
([nil nil ((12 . 17) (71 . 72) (72 . 75) (82 . 84) 69) nil (25825 22542 399220 639000) 0 nil])
([nil nil ((254 . 258) (#("Sans" 0 4 (face font-lock-string-face fontified t)) . 254)) ((254 . 258) (#("Code" 0 4 (face font-lock-string-face fontified t)) . 254)) (25825 22543 135307 396000) 0 nil])
([nil nil ((3073 . 3079) (#("Startup" 0 7 (face font-lock-type-face)) . 3073)) ((3073 . 3080) (#("Update" 0 6 (face font-lock-type-face fontified t)) . 3073)) (25825 22543 513270 995000) 0 nil])
([nil nil ((#("        text.sections[0].value = format!(
            \"This text changes in the bottom right - {fps:.1} fps, {frame_time:.3} ms/frame\",
        );

" 0 33 (fontified t) 33 40 (face rust-builtin-formatting-macro fontified t) 40 54 (fontified t) 54 95 (face font-lock-string-face fontified t) 95 103 (face rust-string-interpolation fontified t) 103 109 (face font-lock-string-face fontified t) 109 124 (face rust-string-interpolation fontified t) 124 134 (face font-lock-string-face fontified t) 134 136 (fontified t) 136 147 (fontified t) 147 148 (fontified t)) . 2645) (undo-tree-id872 . -147) (undo-tree-id873 . -147) (undo-tree-id874 . -40) (undo-tree-id875 . -147) (undo-tree-id876 . -148) (undo-tree-id877 . -148) (undo-tree-id878 . -148) (undo-tree-id879 . -148) (undo-tree-id880 . -148) (undo-tree-id881 . -148) (undo-tree-id882 . -148) (undo-tree-id883 . -148) (undo-tree-id884 . -148) (undo-tree-id885 . -148) (undo-tree-id886 . -148) (undo-tree-id887 . -148) (undo-tree-id888 . -148) (undo-tree-id889 . -148) (undo-tree-id890 . -148) (undo-tree-id891 . -147) (undo-tree-id892 . -147) (undo-tree-id893 . -145) (undo-tree-id894 . -145) (undo-tree-id895 . -87) (undo-tree-id896 . -87) (undo-tree-id897 . -40) (undo-tree-id898 . -40) (undo-tree-id899 . -40) (undo-tree-id900 . -40) (undo-tree-id901 . -40) (undo-tree-id902 . -40) (undo-tree-id903 . -82) (undo-tree-id904 . -82) (undo-tree-id905 . -146) (undo-tree-id906 . -146) (undo-tree-id907 . -147) (undo-tree-id908 . -147) (undo-tree-id909 . -147) (undo-tree-id910 . -147) (undo-tree-id911 . -147) (undo-tree-id912 . -148) 2792 (t 25825 22545 207961 810000)) nil (25825 22679 21285 937000) 0 nil] [nil nil ((#("
        text.sections[2].value = format!(\"{fps:.1}\");

        text.sections[4].value = format!(\"{frame_time:.3}\");
" 0 1 (fontified t) 1 34 (fontified t) 34 41 (face rust-builtin-formatting-macro fontified t) 41 42 (fontified t) 42 43 (face font-lock-string-face fontified t) 43 51 (face rust-string-interpolation fontified t) 51 52 (face font-lock-string-face fontified t) 52 55 (fontified t) 55 89 (fontified t) 89 96 (face rust-builtin-formatting-macro fontified t) 96 97 (fontified t) 97 98 (face font-lock-string-face fontified t) 98 113 (face rust-string-interpolation fontified t) 113 114 (face font-lock-string-face fontified t) 114 117 (fontified t)) . 2792) (undo-tree-id652 . -56) (undo-tree-id653 . -116) (undo-tree-id654 . -55) (undo-tree-id655 . -56) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -55) (undo-tree-id671 . -55) (undo-tree-id672 . -56) (undo-tree-id673 . -56) (undo-tree-id674 . -1) (undo-tree-id675 . -56) (undo-tree-id676 . -56) (undo-tree-id677 . -56) (undo-tree-id678 . -117) 2848) ((2792 . 2909)) (25825 22541 428606 539000) 0 nil] [nil nil ((#("        text.sections[0].value = format!(
            \"This text changes in the bottom right - {fps:.1} fps, {frame_time:.3} ms/frame\",
        );

" 0 33 (fontified t) 33 40 (face rust-builtin-formatting-macro fontified t) 40 54 (fontified t) 54 95 (face font-lock-string-face fontified t) 95 103 (face rust-string-interpolation fontified t) 103 109 (face font-lock-string-face fontified t) 109 124 (face rust-string-interpolation fontified t) 124 134 (face font-lock-string-face fontified t) 134 148 (fontified t)) . 2645) (undo-tree-id450 . -147) (undo-tree-id451 . -147) (undo-tree-id452 . -147) (undo-tree-id453 . -42) (undo-tree-id454 . -42) (undo-tree-id455 . -136) (undo-tree-id456 . -136) (undo-tree-id457 . -147) (undo-tree-id458 . -147) (undo-tree-id459 . -148) (undo-tree-id460 . -148) (undo-tree-id461 . -148) (undo-tree-id462 . -148) (undo-tree-id463 . -147) (undo-tree-id464 . -147) (undo-tree-id465 . -136) (undo-tree-id466 . -136) (undo-tree-id467 . -42) (undo-tree-id468 . -42) (undo-tree-id469 . -42) (undo-tree-id470 . -42) (undo-tree-id471 . -42) (undo-tree-id472 . -42) (undo-tree-id473 . -136) (undo-tree-id474 . -136) (undo-tree-id475 . -147) (undo-tree-id476 . -147) (undo-tree-id477 . -148) (undo-tree-id478 . -148) (undo-tree-id479 . -148) (undo-tree-id480 . -148) (undo-tree-id481 . -147) (undo-tree-id482 . -147) (undo-tree-id483 . -136) (undo-tree-id484 . -136) (undo-tree-id485 . -42) (undo-tree-id486 . -42) (undo-tree-id487 . -42) (undo-tree-id488 . -42) (undo-tree-id489 . -42) (undo-tree-id490 . -42) (undo-tree-id491 . -136) (undo-tree-id492 . -136) (undo-tree-id493 . -147) (undo-tree-id494 . -147) (undo-tree-id495 . -147) (undo-tree-id496 . -147) (undo-tree-id497 . -147) (undo-tree-id498 . -148) 2792) ((2645 . 2793)) (25825 22515 391641 359000) 0 nil] [nil nil ((apply -24 328 649 undo--wrap-and-run-primitive-undo 328 649 ((613 . 616) (591 . 594) (547 . 550) (507 . 510) (464 . 467) (433 . 436) (373 . 376) (340 . 343) 595))) ((apply 24 328 625 undo--wrap-and-run-primitive-undo 328 625 ((#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 340) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 373) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 433) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 464) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 507) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 547) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 591) (#("// " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 613) 617))) (25825 22391 329118 407000) 0 nil])
([nil nil ((2667 . 2668) (#("2" 0 1 (fontified t)) . 2667) (undo-tree-id871 . -1)) nil (25825 22679 21266 140000) 0 nil])
([nil nil ((#("            TextSection::new(
                \"This text changes in the bottom right\",
                TextStyle {
                    font: font.clone(),
                    font_size: 30.0,
                    color: Color::WHITE,
                },
            ),
" 0 12 (fontified t) 12 23 (face font-lock-type-face fontified t) 23 30 (fontified t) 30 42 (fontified t) 42 46 (fontified t) 46 85 (face font-lock-string-face fontified t) 85 87 (fontified t) 87 99 (fontified t) 99 103 (fontified t) 103 112 (face font-lock-type-face fontified t) 112 115 (fontified t) 115 127 (fontified t) 127 135 (fontified t) 135 139 (face font-lock-variable-name-face fontified t) 139 155 (fontified t) 155 167 (fontified t) 167 175 (fontified t) 175 184 (face font-lock-variable-name-face fontified t) 184 192 (fontified t) 192 204 (fontified t) 204 212 (fontified t) 212 217 (face font-lock-variable-name-face fontified t) 217 219 (fontified t) 219 224 (face font-lock-type-face fontified t) 224 226 (fontified t) 226 231 (face font-lock-type-face fontified t) 231 233 (fontified t) 233 245 (fontified t) 245 249 (fontified t) 249 252 (fontified t) 252 264 (fontified t) 264 267 (fontified t)) . 328) (undo-tree-id499 . -252) (undo-tree-id500 . -266) (undo-tree-id501 . -265) (undo-tree-id502 . -265) (undo-tree-id503 . -252) (undo-tree-id504 . -265) (undo-tree-id505 . -265) (undo-tree-id506 . -265) (undo-tree-id507 . -265) (undo-tree-id508 . -265) (undo-tree-id509 . -265) (undo-tree-id510 . -265) (undo-tree-id511 . -265) (undo-tree-id512 . -265) (undo-tree-id513 . -265) (undo-tree-id514 . -265) (undo-tree-id515 . -265) (undo-tree-id516 . -265) (undo-tree-id517 . -265) (undo-tree-id518 . -267) (undo-tree-id519 . -267) (undo-tree-id520 . -267) (undo-tree-id521 . -267) (undo-tree-id522 . -267) (undo-tree-id523 . -267) (undo-tree-id524 . -252) (undo-tree-id525 . -252) (undo-tree-id526 . -233) (undo-tree-id527 . -233) (undo-tree-id528 . -192) (undo-tree-id529 . -192) (undo-tree-id530 . -155) (undo-tree-id531 . -155) (undo-tree-id532 . -115) (undo-tree-id533 . -115) (undo-tree-id534 . -87) (undo-tree-id535 . -87) (undo-tree-id536 . -30) (undo-tree-id537 . -30) (undo-tree-id538 . -30) (undo-tree-id539 . -30) (undo-tree-id540 . -87) (undo-tree-id541 . -87) (undo-tree-id542 . -115) (undo-tree-id543 . -115) (undo-tree-id544 . -155) (undo-tree-id545 . -155) (undo-tree-id546 . -192) (undo-tree-id547 . -192) (undo-tree-id548 . -233) (undo-tree-id549 . -233) (undo-tree-id550 . -252) (undo-tree-id551 . -252) (undo-tree-id552 . -267) (undo-tree-id553 . -267) (undo-tree-id554 . -267) (undo-tree-id555 . -267) (undo-tree-id556 . -252) (undo-tree-id557 . -252) (undo-tree-id558 . -233) (undo-tree-id559 . -233) (undo-tree-id560 . -192) (undo-tree-id561 . -192) (undo-tree-id562 . -155) (undo-tree-id563 . -155) (undo-tree-id564 . -115) (undo-tree-id565 . -115) (undo-tree-id566 . -87) (undo-tree-id567 . -87) (undo-tree-id568 . -30) (undo-tree-id569 . -30) (undo-tree-id570 . -30) (undo-tree-id571 . -30) (undo-tree-id572 . -87) (undo-tree-id573 . -87) (undo-tree-id574 . -115) (undo-tree-id575 . -115) (undo-tree-id576 . -155) (undo-tree-id577 . -155) (undo-tree-id578 . -192) (undo-tree-id579 . -192) (undo-tree-id580 . -233) (undo-tree-id581 . -233) (undo-tree-id582 . -252) (undo-tree-id583 . -252) (undo-tree-id584 . -267) (undo-tree-id585 . -267) (undo-tree-id586 . -267) (undo-tree-id587 . -267) (undo-tree-id588 . -252) (undo-tree-id589 . -252) (undo-tree-id590 . -233) (undo-tree-id591 . -233) (undo-tree-id592 . -192) (undo-tree-id593 . -192) (undo-tree-id594 . -155) (undo-tree-id595 . -155) (undo-tree-id596 . -115) (undo-tree-id597 . -115) (undo-tree-id598 . -87) (undo-tree-id599 . -87) (undo-tree-id600 . -30) (undo-tree-id601 . -30) (undo-tree-id602 . -30) (undo-tree-id603 . -30) (undo-tree-id604 . -87) (undo-tree-id605 . -87) (undo-tree-id606 . -115) (undo-tree-id607 . -115) (undo-tree-id608 . -155) (undo-tree-id609 . -155) (undo-tree-id610 . -192) (undo-tree-id611 . -192) (undo-tree-id612 . -233) (undo-tree-id613 . -233) (undo-tree-id614 . -252) (undo-tree-id615 . -252) (undo-tree-id616 . -252) (undo-tree-id617 . -252) (undo-tree-id618 . -267) (undo-tree-id619 . -267) (undo-tree-id620 . -252) (undo-tree-id621 . -252) (undo-tree-id622 . -233) (undo-tree-id623 . -233) (undo-tree-id624 . -192) (undo-tree-id625 . -192) (undo-tree-id626 . -155) (undo-tree-id627 . -155) (undo-tree-id628 . -115) (undo-tree-id629 . -115) (undo-tree-id630 . -87) (undo-tree-id631 . -87) (undo-tree-id632 . -30) (undo-tree-id633 . -30) (undo-tree-id634 . -30) (undo-tree-id635 . -30) (undo-tree-id636 . -87) (undo-tree-id637 . -87) (undo-tree-id638 . -115) (undo-tree-id639 . -115) (undo-tree-id640 . -155) (undo-tree-id641 . -155) (undo-tree-id642 . -192) (undo-tree-id643 . -192) (undo-tree-id644 . -233) (undo-tree-id645 . -233) (undo-tree-id646 . -252) (undo-tree-id647 . -252) (undo-tree-id648 . -252) (undo-tree-id649 . -252) (undo-tree-id650 . -252) (undo-tree-id651 . -267) 580) ((328 . 595) (t 25825 22531 624628 220000)) (25825 22531 618037 397000) 0 nil])
([nil nil ((#("            TextSection::new(
                \"This text changes in the bottom right\",
                TextStyle {
                    font: font.clone(),
                    font_size: 30.0,
                    color: Color::WHITE,
                },
            ),
" 0 12 (fontified t) 12 23 (face font-lock-type-face fontified t) 23 30 (fontified t) 30 42 (fontified t) 42 46 (fontified t) 46 85 (face font-lock-string-face fontified t) 85 87 (fontified t) 87 99 (fontified t) 99 103 (fontified t) 103 112 (face font-lock-type-face fontified t) 112 115 (fontified t) 115 127 (fontified t) 127 135 (fontified t) 135 139 (face font-lock-variable-name-face fontified t) 139 155 (fontified t) 155 167 (fontified t) 167 175 (fontified t) 175 184 (face font-lock-variable-name-face fontified t) 184 192 (fontified t) 192 204 (fontified t) 204 212 (fontified t) 212 217 (face font-lock-variable-name-face fontified t) 217 219 (fontified t) 219 224 (face font-lock-type-face fontified t) 224 226 (fontified t) 226 231 (face font-lock-type-face fontified t) 231 233 (fontified t) 233 245 (fontified t) 245 249 (fontified t) 249 252 (fontified t) 252 264 (fontified t) 264 267 (fontified t)) . 328) (undo-tree-id328 . -252) (undo-tree-id329 . -266) (undo-tree-id330 . -265) (undo-tree-id331 . -265) (undo-tree-id332 . -252) (undo-tree-id333 . -265) (undo-tree-id334 . -265) (undo-tree-id335 . -265) (undo-tree-id336 . -265) (undo-tree-id337 . -265) (undo-tree-id338 . -265) (undo-tree-id339 . -265) (undo-tree-id340 . -265) (undo-tree-id341 . -265) (undo-tree-id342 . -265) (undo-tree-id343 . -265) (undo-tree-id344 . -265) (undo-tree-id345 . -265) (undo-tree-id346 . -265) (undo-tree-id347 . -267) (undo-tree-id348 . -267) (undo-tree-id349 . -267) (undo-tree-id350 . -267) (undo-tree-id351 . -267) (undo-tree-id352 . -267) (undo-tree-id353 . -252) (undo-tree-id354 . -252) (undo-tree-id355 . -233) (undo-tree-id356 . -233) (undo-tree-id357 . -192) (undo-tree-id358 . -192) (undo-tree-id359 . -155) (undo-tree-id360 . -155) (undo-tree-id361 . -115) (undo-tree-id362 . -115) (undo-tree-id363 . -87) (undo-tree-id364 . -87) (undo-tree-id365 . -30) (undo-tree-id366 . -30) (undo-tree-id367 . -30) (undo-tree-id368 . -30) (undo-tree-id369 . -87) (undo-tree-id370 . -87) (undo-tree-id371 . -115) (undo-tree-id372 . -115) (undo-tree-id373 . -155) (undo-tree-id374 . -155) (undo-tree-id375 . -192) (undo-tree-id376 . -192) (undo-tree-id377 . -233) (undo-tree-id378 . -233) (undo-tree-id379 . -252) (undo-tree-id380 . -252) (undo-tree-id381 . -267) (undo-tree-id382 . -267) (undo-tree-id383 . -267) (undo-tree-id384 . -267) (undo-tree-id385 . -252) (undo-tree-id386 . -252) (undo-tree-id387 . -233) (undo-tree-id388 . -233) (undo-tree-id389 . -192) (undo-tree-id390 . -192) (undo-tree-id391 . -155) (undo-tree-id392 . -155) (undo-tree-id393 . -115) (undo-tree-id394 . -115) (undo-tree-id395 . -87) (undo-tree-id396 . -87) (undo-tree-id397 . -30) (undo-tree-id398 . -30) (undo-tree-id399 . -30) (undo-tree-id400 . -30) (undo-tree-id401 . -87) (undo-tree-id402 . -87) (undo-tree-id403 . -115) (undo-tree-id404 . -115) (undo-tree-id405 . -155) (undo-tree-id406 . -155) (undo-tree-id407 . -192) (undo-tree-id408 . -192) (undo-tree-id409 . -233) (undo-tree-id410 . -233) (undo-tree-id411 . -252) (undo-tree-id412 . -252) (undo-tree-id413 . -267) (undo-tree-id414 . -267) (undo-tree-id415 . -267) (undo-tree-id416 . -267) (undo-tree-id417 . -252) (undo-tree-id418 . -252) (undo-tree-id419 . -233) (undo-tree-id420 . -233) (undo-tree-id421 . -192) (undo-tree-id422 . -192) (undo-tree-id423 . -155) (undo-tree-id424 . -155) (undo-tree-id425 . -115) (undo-tree-id426 . -115) (undo-tree-id427 . -87) (undo-tree-id428 . -87) (undo-tree-id429 . -30) (undo-tree-id430 . -30) (undo-tree-id431 . -30) (undo-tree-id432 . -30) (undo-tree-id433 . -87) (undo-tree-id434 . -87) (undo-tree-id435 . -115) (undo-tree-id436 . -115) (undo-tree-id437 . -155) (undo-tree-id438 . -155) (undo-tree-id439 . -192) (undo-tree-id440 . -192) (undo-tree-id441 . -233) (undo-tree-id442 . -233) (undo-tree-id443 . -252) (undo-tree-id444 . -252) (undo-tree-id445 . -267) (undo-tree-id446 . -252) (undo-tree-id447 . -252) (undo-tree-id448 . -252) (undo-tree-id449 . -267) 580) ((328 . 595) (t 25825 22510 144627 809000)) (25825 22510 140562 88000) 0 nil])
nil
([nil nil ((2667 . 2668) (#("2" 0 1 (fontified t)) . 2667) (undo-tree-id870 . -1)) nil (25825 22679 21264 497000) 0 nil])
nil
nil
([nil nil ((2722 . 2723) (#("4" 0 1 (fontified t)) . 2722) (undo-tree-id869 . -1)) nil (25825 22679 21262 72000) 0 nil])
([nil nil ((#("            TextSection::new(
                \"This text changes in the bottom right\",
                TextStyle {
                    font: font.clone(),
                    font_size: 30.0,
                    color: Color::WHITE,
                },
            ),
" 0 12 (fontified t) 12 23 (face font-lock-type-face fontified t) 23 30 (fontified t) 30 42 (fontified t) 42 46 (fontified t) 46 85 (face font-lock-string-face fontified t) 85 87 (fontified t) 87 99 (fontified t) 99 103 (fontified t) 103 112 (face font-lock-type-face fontified t) 112 115 (fontified t) 115 127 (fontified t) 127 135 (fontified t) 135 139 (face font-lock-variable-name-face fontified t) 139 155 (fontified t) 155 167 (fontified t) 167 175 (fontified t) 175 184 (face font-lock-variable-name-face fontified t) 184 192 (fontified t) 192 204 (fontified t) 204 212 (fontified t) 212 217 (face font-lock-variable-name-face fontified t) 217 219 (fontified t) 219 224 (face font-lock-type-face fontified t) 224 226 (fontified t) 226 231 (face font-lock-type-face fontified t) 231 233 (fontified t) 233 245 (fontified t) 245 249 (fontified t) 249 252 (fontified t) 252 264 (fontified t) 264 267 (fontified t)) . 328) (undo-tree-id679 . -266) (undo-tree-id680 . -266) (undo-tree-id681 . -265) (undo-tree-id682 . -265) (undo-tree-id683 . -22) (undo-tree-id684 . -266) (undo-tree-id685 . -265) (undo-tree-id686 . -265) (undo-tree-id687 . -265) (undo-tree-id688 . -265) (undo-tree-id689 . -265) (undo-tree-id690 . -265) (undo-tree-id691 . -265) (undo-tree-id692 . -265) (undo-tree-id693 . -265) (undo-tree-id694 . -265) (undo-tree-id695 . -265) (undo-tree-id696 . -265) (undo-tree-id697 . -265) (undo-tree-id698 . -265) (undo-tree-id699 . -267) (undo-tree-id700 . -267) (undo-tree-id701 . -267) (undo-tree-id702 . -267) (undo-tree-id703 . -267) (undo-tree-id704 . -267) (undo-tree-id705 . -252) (undo-tree-id706 . -252) (undo-tree-id707 . -233) (undo-tree-id708 . -233) (undo-tree-id709 . -192) (undo-tree-id710 . -192) (undo-tree-id711 . -155) (undo-tree-id712 . -155) (undo-tree-id713 . -115) (undo-tree-id714 . -115) (undo-tree-id715 . -87) (undo-tree-id716 . -87) (undo-tree-id717 . -30) (undo-tree-id718 . -30) (undo-tree-id719 . -30) (undo-tree-id720 . -30) (undo-tree-id721 . -87) (undo-tree-id722 . -87) (undo-tree-id723 . -115) (undo-tree-id724 . -115) (undo-tree-id725 . -155) (undo-tree-id726 . -155) (undo-tree-id727 . -192) (undo-tree-id728 . -192) (undo-tree-id729 . -233) (undo-tree-id730 . -233) (undo-tree-id731 . -252) (undo-tree-id732 . -252) (undo-tree-id733 . -267) (undo-tree-id734 . -267) (undo-tree-id735 . -267) (undo-tree-id736 . -267) (undo-tree-id737 . -252) (undo-tree-id738 . -252) (undo-tree-id739 . -233) (undo-tree-id740 . -233) (undo-tree-id741 . -192) (undo-tree-id742 . -192) (undo-tree-id743 . -155) (undo-tree-id744 . -155) (undo-tree-id745 . -115) (undo-tree-id746 . -115) (undo-tree-id747 . -87) (undo-tree-id748 . -87) (undo-tree-id749 . -30) (undo-tree-id750 . -30) (undo-tree-id751 . -30) (undo-tree-id752 . -30) (undo-tree-id753 . -87) (undo-tree-id754 . -87) (undo-tree-id755 . -115) (undo-tree-id756 . -115) (undo-tree-id757 . -155) (undo-tree-id758 . -155) (undo-tree-id759 . -192) (undo-tree-id760 . -192) (undo-tree-id761 . -233) (undo-tree-id762 . -233) (undo-tree-id763 . -252) (undo-tree-id764 . -252) (undo-tree-id765 . -267) (undo-tree-id766 . -267) (undo-tree-id767 . -267) (undo-tree-id768 . -267) (undo-tree-id769 . -252) (undo-tree-id770 . -252) (undo-tree-id771 . -233) (undo-tree-id772 . -233) (undo-tree-id773 . -192) (undo-tree-id774 . -192) (undo-tree-id775 . -155) (undo-tree-id776 . -155) (undo-tree-id777 . -115) (undo-tree-id778 . -115) (undo-tree-id779 . -87) (undo-tree-id780 . -87) (undo-tree-id781 . -30) (undo-tree-id782 . -30) (undo-tree-id783 . -30) (undo-tree-id784 . -30) (undo-tree-id785 . -87) (undo-tree-id786 . -87) (undo-tree-id787 . -115) (undo-tree-id788 . -115) (undo-tree-id789 . -155) (undo-tree-id790 . -155) (undo-tree-id791 . -192) (undo-tree-id792 . -192) (undo-tree-id793 . -233) (undo-tree-id794 . -233) (undo-tree-id795 . -252) (undo-tree-id796 . -252) (undo-tree-id797 . -252) (undo-tree-id798 . -252) (undo-tree-id799 . -267) (undo-tree-id800 . -267) (undo-tree-id801 . -252) (undo-tree-id802 . -252) (undo-tree-id803 . -233) (undo-tree-id804 . -233) (undo-tree-id805 . -192) (undo-tree-id806 . -192) (undo-tree-id807 . -155) (undo-tree-id808 . -155) (undo-tree-id809 . -115) (undo-tree-id810 . -115) (undo-tree-id811 . -87) (undo-tree-id812 . -87) (undo-tree-id813 . -30) (undo-tree-id814 . -30) (undo-tree-id815 . -30) (undo-tree-id816 . -30) (undo-tree-id817 . -87) (undo-tree-id818 . -87) (undo-tree-id819 . -115) (undo-tree-id820 . -115) (undo-tree-id821 . -155) (undo-tree-id822 . -155) (undo-tree-id823 . -192) (undo-tree-id824 . -192) (undo-tree-id825 . -233) (undo-tree-id826 . -233) (undo-tree-id827 . -252) (undo-tree-id828 . -252) (undo-tree-id829 . -252) (undo-tree-id830 . -252) (undo-tree-id831 . -265) (undo-tree-id832 . -265) (undo-tree-id833 . -250) (undo-tree-id834 . -250) (undo-tree-id835 . -214) (undo-tree-id836 . -214) (undo-tree-id837 . -177) (undo-tree-id838 . -177) (undo-tree-id839 . -137) (undo-tree-id840 . -137) (undo-tree-id841 . -109) (undo-tree-id842 . -109) (undo-tree-id843 . -52) (undo-tree-id844 . -52) (undo-tree-id845 . -22) (undo-tree-id846 . -22) (undo-tree-id847 . -22) (undo-tree-id848 . -22) (undo-tree-id849 . -22) (undo-tree-id850 . -22) (undo-tree-id851 . -52) (undo-tree-id852 . -52) (undo-tree-id853 . -109) (undo-tree-id854 . -109) (undo-tree-id855 . -137) (undo-tree-id856 . -137) (undo-tree-id857 . -177) (undo-tree-id858 . -177) (undo-tree-id859 . -214) (undo-tree-id860 . -214) (undo-tree-id861 . -251) (undo-tree-id862 . -251) (undo-tree-id863 . -252) (undo-tree-id864 . -266) (undo-tree-id865 . -266) (undo-tree-id866 . -266) (undo-tree-id867 . -266) (undo-tree-id868 . -267) 594) nil (25825 22679 21253 756000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-string-face fontified t)) . 375) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (t 25825 22679 24630 900000)) nil (25825 22693 216239 422000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-string-face fontified t)) . 375) (undo-tree-id913 . -1) (undo-tree-id914 . -1)) nil (25825 22693 216234 242000) 0 nil])
([nil nil ((2398 . 2399) (#("0" 0 1 (fontified t)) . 2398) (undo-tree-id918 . -1) (t 25825 22693 217964 490000)) nil (25825 22709 102231 996000) 0 nil])
([nil nil ((2453 . 2454) (#("2" 0 1 (fontified t)) . 2453) (undo-tree-id917 . -1)) nil (25825 22731 956621 187000) 0 nil])
([nil nil ((747 . 748) (#("e" 0 1 (face font-lock-type-face fontified t)) . -747) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) 748 (743 . 748) (#("ORANGE_RED" 0 6 (face font-lock-type-face fontified t) 6 10 (face font-lock-type-face fontified t)) . 743) (undo-tree-id932 . -9) (undo-tree-id933 . 4) (undo-tree-id934 . -10) (undo-tree-id935 . -10) (t 25825 22709 101298 111000)) nil (25825 22744 827055 424000) 0 nil] [nil nil ((#("ORANGE" 0 6 (face font-lock-type-face fontified t)) . 743) (undo-tree-id919 . -5) (undo-tree-id920 . -6) (undo-tree-id921 . -6) (t 25825 22709 101298 111000)) ((743 . 749)) (25825 22731 956308 109000) 0 nil])
([nil nil ((1154 . 1155) (#("e" 0 1 (fontified nil)) . -1154) (undo-tree-id922 . -1) 1155 (1150 . 1155) (#("GREEN" 0 5 (face font-lock-type-face fontified t)) . 1150) (undo-tree-id923 . -4) (undo-tree-id924 . -4) (undo-tree-id925 . -4) (undo-tree-id926 . -5) (undo-tree-id927 . -5)) nil (25825 22744 827046 547000) 0 nil])
nil
([nil nil ((#("            TextSection::new(
                \"This text changes in the bottom right - \",
                TextStyle {
                    font: font.clone(),
                    font_size: 30.0,
                    color: Color::RED,
                },
            ),
" 0 12 (fontified t) 12 23 (face font-lock-type-face fontified t) 23 30 (fontified t) 30 46 (fontified t) 46 88 (face font-lock-string-face fontified t) 88 90 (fontified t) 90 106 (fontified t) 106 115 (face font-lock-type-face fontified t) 115 138 (fontified t) 138 142 (face font-lock-variable-name-face fontified t) 142 178 (fontified t) 178 187 (face font-lock-variable-name-face fontified t) 187 215 (fontified t) 215 220 (face font-lock-variable-name-face fontified t) 220 222 (fontified t) 222 227 (face font-lock-type-face fontified t) 227 229 (fontified t) 229 232 (face font-lock-type-face fontified t) 232 268 (fontified t)) . 328) (undo-tree-id937 . -253) (undo-tree-id938 . -267) (undo-tree-id939 . -253) (undo-tree-id940 . -266) (undo-tree-id941 . -266) (undo-tree-id942 . -251) (undo-tree-id943 . -251) (undo-tree-id944 . -229) (undo-tree-id945 . -229) (undo-tree-id946 . -192) (undo-tree-id947 . -192) (undo-tree-id948 . -152) (undo-tree-id949 . -152) (undo-tree-id950 . -116) (undo-tree-id951 . -116) (undo-tree-id952 . -64) (undo-tree-id953 . -64) (undo-tree-id954 . -28) (undo-tree-id955 . -28) (undo-tree-id956 . -28) (undo-tree-id957 . -28) (undo-tree-id958 . -28) (undo-tree-id959 . -28) (undo-tree-id960 . -28) (undo-tree-id961 . -268) (undo-tree-id962 . -268) (undo-tree-id963 . -253) (undo-tree-id964 . -253) (undo-tree-id965 . -234) (undo-tree-id966 . -234) (undo-tree-id967 . -195) (undo-tree-id968 . -195) (undo-tree-id969 . -158) (undo-tree-id970 . -158) (undo-tree-id971 . -118) (undo-tree-id972 . -118) (undo-tree-id973 . -90) (undo-tree-id974 . -90) (undo-tree-id975 . -30) (undo-tree-id976 . -30) (undo-tree-id977 . -30) (undo-tree-id978 . -30) (undo-tree-id979 . -90) (undo-tree-id980 . -90) (undo-tree-id981 . -118) (undo-tree-id982 . -118) (undo-tree-id983 . -158) (undo-tree-id984 . -158) (undo-tree-id985 . -195) (undo-tree-id986 . -195) (undo-tree-id987 . -234) (undo-tree-id988 . -234) (undo-tree-id989 . -253) (undo-tree-id990 . -253) (undo-tree-id991 . -253) (undo-tree-id992 . -253) (undo-tree-id993 . -253) (undo-tree-id994 . -268) 581 (t 25825 22744 831298 758000)) nil (25825 22780 604318 572000) 0 nil])
([nil nil ((2125 . 2126) (#("1" 0 1 (fontified t)) . 2125) (undo-tree-id936 . -1)) nil (25825 22780 604290 550000) 0 nil])
([nil nil ((nil fontified t 2180 . 2181) (#("3" 0 1 (fontified t)) . -2180) (2181 . 2182) 2180) nil (25825 22780 604280 541000) 0 nil])
([nil nil ((#("," 0 1 (face font-lock-string-face fontified t)) . 549) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (t 25825 22780 607966 72000)) nil (25825 22800 997173 908000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 549) (undo-tree-id995 . -1) (undo-tree-id996 . -1)) nil (25825 22800 997165 682000) 0 nil])
([nil current ((549 . 551)) nil (25825 22800 997151 205000) 0 nil])
nil
